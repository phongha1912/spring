{"version":3,"sources":["webpack:///src/app/core/components/confirm/confirm.component.ts","webpack:///src/app/core/components/confirm/confirm.component.html","webpack:///src/app/shared/pipes/imageurl2srcset.pipe.ts","webpack:///src/app/shared/components/index.ts","webpack:///src/app/core/interceptors/nocache.interceptor.ts","webpack:///src/app/core/models/core.model.ts","webpack:///src/app/core/services/image.service.ts","webpack:///src/app/core/interceptors/index.ts","webpack:///src/app/core/services/auth.service.ts","webpack:///src/app/shared/pipes/index.ts","webpack:///src/app/core/interceptors/jwt.interceptor.ts","webpack:///src/environments/environment.ts","webpack:///src/app/core/interceptors/server-error.interceptor.ts","webpack:///src/app/shared/index.ts","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/core/models/image.model.ts","webpack:///src/app/core/components/main-container/main-container.component.html","webpack:///src/app/core/components/main-container/main-container.component.ts","webpack:///src/app/core/services/jwt.service.ts","webpack:///src/app/core/services/responsive.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/core/guards/module-import.guard.ts","webpack:///src/app/core/components/loading/loading.component.ts","webpack:///src/app/core/components/loading/loading.component.html","webpack:///src/app/core/components/index.ts","webpack:///src/app/core/interceptors/fake-user.interceptor.ts","webpack:///src/app/app.module.ts","webpack:///src/app/shared/components/footer/footer.component.ts","webpack:///src/app/shared/components/footer/footer.component.html","webpack:///src/app/core/services/index.ts","webpack:///src/app/core/guards/reset-pwd.guard.ts","webpack:///src/app/core/index.ts","webpack:///src/app/core/services/user.service.ts","webpack:///src/app/core/guards/admin.guard.ts","webpack:///src/app/core/interceptors/fake-employee.interceptor.ts","webpack:///src/app/core/services/logging.service.ts","webpack:///src/app/core/interceptors/api.interceptor.ts","webpack:///src/app/shared/components/paginator/paginator.component.html","webpack:///src/app/shared/components/paginator/paginator.component.ts","webpack:///src/app/core/global-error-handler.ts","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/guards/no-auth.guard.ts","webpack:///src/app/core/components/property-update-form/property-update-form.component.ts","webpack:///src/app/core/components/property-update-form/property-update-form.component.html","webpack:///src/app/core/services/error.service.ts","webpack:///src/app/core/services/api.service.ts","webpack:///src/app/core/models/index.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/shared/directives/navigation-focus.directive.ts","webpack:///src/app/shared/directives/index.ts","webpack:///src/app/core/guards/index.ts","webpack:///src/app/core/services/employee.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["ConfirmComponent","dialogData","dialogRef","confirm","close","onCancelClicked","onYesClicked","Imageurl2srcsetPipe","value","NoCacheInterceptor","req","next","handle","PropertyType","ScreenSize","EditorMode","ImageService","apiService","http","image","form","FormData","append","name","apiUrl","reportProgress","uploadStatus","f","ok","progress","done","request","pipe","event","type","Sent","UploadProgress","total","Math","round","loaded","Response","respone","body","err","id","HttpInterceptorProviders","provide","useClass","multi","TestHttpInterceptorProviders","AuthService","jwtService","currentUserSubject","undefined","currentUser","asObservable","isAuthenticatedSubject","isAuthenticated","currentUserId","getToken","get","subscribe","user","setAuth","purgeAuth","saveCurrentUserId","destroyToken","credentials","post","data","JwtInterceptor","token","console","log","headers","clone","setHeaders","Authorization","evt","tokenReturn","substring","saveToken","environment","production","sorlUrl","ServerErrorInterceptor","injector","error","status","navigate","AuthGuard","router","authService","route","state","url","checkLogin","canActivate","isAuth","queryParams","redirectUrl","SharedModule","MainContainerComponent","employeeService","user$","JwtService","window","localStorage","jwtToken","removeItem","ResponsiveService","breakpoints","currentBreakpointSubject","currentBreakponitObservable","observe","XSmall","Small","Medium","Large","XLarge","t","XS","SM","MD","LG","XL","AppComponent","title","populate","throwIfAlreadyLoaded","parentModule","moduleName","Error","LoadingComponent","FakeUserInterceptor","s","getItem","users","JSON","parse","endsWith","method","filteredUsers","filter","email","pwd","length","roles","unverified","blocked","goodUser","goodAdmin","httpResponse","message","match","urlParts","split","parseInt","matchedUsers","newUser","duplicateUser","username","push","setItem","stringify","AppModule","forRoot","timeOut","positionClass","preventDuplicates","FooterComponent","ResetPwdGuard","forgotAccount","UserService","patch","AdminGuard","getCurrentUser","FakeEmployeeInterceptor","employee","fullName","employees","LoggingService","stack","ApiInterceptor","baseUrl","document","getElementsByTagName","href","apiReq","PaginatorComponent","_length","curPage","pages","getCurPageSubscription","queryParamMap","params","page","nPage","isNaN","generatePages","p","unsubscribe","Array","from","v","k","GlobalErrorHandler","stackTrace","errorService","getServerMessage","getServerStack","errMsg","includes","toastrService","onActivateTick","getClientMessage","getClientStack","loggingService","logError","CoreModule","NoAuthGuard","PropertyUpdateFormComponent","fb","properties","props","forEach","control","propertiesForm","group","onSubmit","ErrorService","navigator","onLine","toString","ApiService","path","put","options","routes","loadChildren","then","m","AuthModule","component","children","EmployeeModule","AdminModule","redirectTo","pathMatch","AppRoutingModule","useHash","enableTracing","lastTimeoutId","NavigationFocusDirective","el","tabindex","clearTimeout","setTimeout","nativeElement","focus","preventScroll","EmployeeService","bootstrapModule","webpackEmptyAsyncContext","Promise","resolve","e","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Confirm } from '../../models';\r\n\r\n@Component({\r\n  selector: 'crm-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.scss']\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n\r\n  confirm : Confirm;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) private dialogData: any, private dialogRef: MatDialogRef<ConfirmComponent>) { \r\n    this.confirm = this.dialogData.confirm\r\n  }\r\n\r\n  ngOnInit() : void {\r\n\r\n  }\r\n\r\n  onCancelClicked() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onYesClicked() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>{{confirm.title}}</h2>\r\n<div class=\"ui section divider\"></div>\r\n<mat-dialog-content>\r\n  <div>\r\n    {{confirm.content}}\r\n  </div>\r\n</mat-dialog-content>\r\n<div class=\"ui section divider\"></div>\r\n<mat-dialog-actions align='end'>\r\n  <button class=\"ui button\" (click)=\"onCancelClicked()\" type =\"button\">Cancel</button>\r\n  <button class=\"ui button\" (click)=\"onYesClicked()\" type=\"button\">Yes</button>\r\n</mat-dialog-actions>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'imageurl2srcset'\r\n})\r\nexport class Imageurl2srcsetPipe implements PipeTransform {\r\n\r\n  transform(value: unknown, ...args: unknown[]): unknown {\r\n    return null;\r\n  }\r\n\r\n}\r\n","export * from './footer/footer.component';\r\nexport * from './paginator/paginator.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoCacheInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req);\r\n  }\r\n}\r\n","export interface Property {\r\n    name: string;\r\n    value: string;\r\n    type: PropertyType;\r\n}\r\n\r\nexport enum PropertyType{\r\n    Text=1,\r\n    CheckBox=2,\r\n}\r\n\r\nexport enum ScreenSize {\r\n    XS = 1,\r\n    SM,\r\n    MD,\r\n    LG,\r\n    XL\r\n}\r\n\r\nexport interface Confirm {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nexport enum EditorMode {\r\n    Create = 0,\r\n    Update = 1\r\n}","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { UploadStatus, Image } from '../models';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { HttpEventType, HttpRequest, HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface ImageQuery {\r\n  limit?:number;\r\n  start?:number;\r\n  filter?: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n\r\n  constructor ( private apiService: ApiService, private http: HttpClient) {\r\n    \r\n  }\r\n\r\n  /*\r\n  getImages(q:ImageQuery): Observable<ImagesResult> {\r\n    let sReq = '';\r\n\r\n    let api = '/images';\r\n\r\n    if(typeof q.start === 'number') {\r\n      sReq += `&start=${q.start}`;\r\n    }\r\n\r\n    if(typeof q.limit === 'number') {\r\n      if(sReq) { // not empty\r\n        sReq +='&'\r\n      }\r\n      sReq += `limit=${q.limit}`;\r\n    }\r\n\r\n    if(q.filter) {\r\n      for(let prop in q.filter) {\r\n          if(sReq) { // not empty\r\n            sReq +='&'\r\n          }\r\n          sReq += `${prop}=${q.filter[prop]}`;\r\n      }\r\n    }\r\n\r\n    if(sReq) { // not empty\r\n      api += `?${sReq}`;\r\n    }\r\n    \r\n    console.log(\"api: \" + api);\r\n    return this.apiService.get(api);\r\n  }\r\n  */\r\n\r\n  createImage(image: File):Observable<UploadStatus<Image>> {\r\n    \r\n    const form = new FormData();\r\n\r\n    form.append('image', image, image.name);\r\n    \r\n    const req = new HttpRequest('POST', `${environment.apiUrl}/images`, form, {\r\n      reportProgress: true\r\n    });\r\n\r\n    // The `HttpClient.request` API produces a raw event stream\r\n    // which includes start (sent), progress, and response events.\r\n    let uploadStatus:UploadStatus<Image> = {f: image, ok:true, progress:0, done:false};\r\n    return this.http.request(req)\r\n          .pipe ( map((event: HttpEvent<any>) => {\r\n            \r\n            \r\n            switch (event.type) {\r\n              case HttpEventType.Sent:\r\n                break;\r\n              case HttpEventType.UploadProgress:\r\n                if(event.total) {\r\n                  uploadStatus.progress =  Math.round(100 * event.loaded / event.total);\r\n                }                \r\n                break;\r\n              case HttpEventType.Response:\r\n                uploadStatus.progress = 100;\r\n                uploadStatus.done = true;\r\n                uploadStatus.respone = event.body;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n           \r\n            return uploadStatus; \r\n          }),\r\n          catchError( err => {\r\n            // TODO: review\r\n            return throwError(err);\r\n          }) \r\n        );\r\n  }\r\n\r\n  deleteImage(id: String):Observable<String> {\r\n    return this.apiService.delete(`/images/${id}`);\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './jwt.interceptor';\r\nimport { NoCacheInterceptor } from './nocache.interceptor';\r\nimport { ServerErrorInterceptor } from './server-error.interceptor';\r\nimport { ApiInterceptor } from './api.interceptor';\r\n\r\nimport { FakeEmployeeInterceptor } from './fake-employee.interceptor';\r\nimport { FakeUserInterceptor } from './fake-user.interceptor';\r\n\r\nexport const HttpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: NoCacheInterceptor, multi: true }\r\n];\r\n\r\nexport const TestHttpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: NoCacheInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeEmployeeInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeUserInterceptor, multi: true },\r\n];","import { Injectable } from '@angular/core';\r\nimport { Observable ,  BehaviorSubject ,  ReplaySubject } from 'rxjs';\r\n\r\nimport { ApiService } from './api.service';\r\nimport { JwtService } from './jwt.service';\r\nimport { User } from '../models';\r\nimport { distinctUntilChanged, tap, map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private currentUserSubject = new BehaviorSubject<User|undefined>(undefined);\r\n  public currentUser = this.currentUserSubject.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\r\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\r\n\r\n  public forgotAccount!: {email: string};\r\n\r\n  constructor( private apiService: ApiService, private jwtService: JwtService ) {\r\n\r\n  }\r\n\r\n  // Verify JWT in localstorage with server & load user's info. This runs once on application startup.\r\n  populate(): void {\r\n    const currentUserId = this.jwtService.getToken().id; // If JWT detected, attempt to get & store user's info\r\n    if (currentUserId) {\r\n      this.apiService.get('/employees/' + currentUserId)\r\n      .subscribe (\r\n        (user: User) => this.setAuth(user),\r\n        () => this.purgeAuth() // err\r\n      );\r\n    } else {\r\n      this.purgeAuth(); // Remove any potential remnants of previous auth states\r\n    }\r\n  }\r\n\r\n  setAuth(user: User): void {\r\n    this.jwtService.saveCurrentUserId(user);  // Save JWT sent from server in localstorage\r\n    this.currentUserSubject.next(user);\r\n    this.isAuthenticatedSubject.next(true);\r\n  }\r\n\r\n  getCurrentUser(): User|undefined {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  purgeAuth(): void {\r\n    // Remove JWT from localstorage\r\n    this.jwtService.destroyToken();\r\n    // Set current user to an empty object\r\n    this.currentUserSubject.next(undefined);\r\n    // Set auth status to false\r\n    this.isAuthenticatedSubject.next(false);\r\n  }\r\n\r\n  attemptAuth(credentials: {email: string, pwd: string}): Observable<User> {\r\n    return this.apiService.post('/auth/signin', credentials).pipe(tap( (user: User) => this.setAuth(user)));\r\n  }\r\n\r\n  forgotPassword(data: {email: string}): Observable<any> {\r\n    return this.apiService.post('/auth/forgotpwd', data);\r\n  }\r\n\r\n  resetPassword(data: {email: string, verifyCode: string, newPwd: string}): Observable<User> {\r\n    return this.apiService.post('/auth/resetpwd', data).pipe(tap( (user: User) => this.setAuth(user)));\r\n  }\r\n\r\n  signup(data: {email: string, password: string}): Observable<User> {\r\n    return this.apiService.post('/auth/signup', data).pipe(tap( (user: User) => this.setAuth(user)));\r\n  }\r\n}\r\n","export * from './imageurl2srcset.pipe';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtService } from '../services';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private jwtService: JwtService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.jwtService.getToken().token;\r\n    console.log(\"JwtInterceptor add token\", token);\r\n    if (token && !req.headers.get('Authorization')) {\r\n      const request = req.clone({ setHeaders: { Authorization: `Bearer ${token}` } });\r\n      return next.handle(request);\r\n    } else {\r\n      return next.handle(req).pipe(\r\n        tap(evt => {\r\n          if (evt instanceof HttpResponse) {\r\n              let tokenReturn = evt.headers.get('OT-Authorization');\r\n              console.log(\"JwtInterceptor add OT-Authorization\", tokenReturn);\r\n              if (tokenReturn) {\r\n                tokenReturn = tokenReturn.substring(7); // remove 'Bearer '\r\n                console.log('saveToken: ' + tokenReturn);\r\n                this.jwtService.saveToken(tokenReturn);\r\n              }\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'api',\r\n  sorlUrl: '/solr'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpRequest, HttpHandler, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServerErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(request).pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError(error);\r\n        if (error.status === 401) {\r\n          this.injector.get(AuthService).purgeAuth();\r\n          this.injector.get(Router).navigate(['auth', 'signin']);\r\n          return throwError(error);\r\n        } else {\r\n          return throwError(error);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","export * from './shared.module';\r\nexport * from './components';\r\nexport * from './directives';\r\nexport * from './pipes';","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { take, tap } from 'rxjs/operators';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild  {\r\n\r\n  constructor( private router: Router, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    const url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  checkLogin(url: string): Observable<boolean> {\r\n    return this.authService.isAuthenticated.pipe(\r\n      take(1),\r\n      tap( isAuth => {\r\n        if (!isAuth) {\r\n            this.router.navigate(['/auth', 'signin'], { queryParams: { redirectUrl: url }});\r\n        }\r\n      }\r\n    ));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { NavigationFocusDirective } from './directives/navigation-focus.directive';\r\nimport { FooterComponent, PaginatorComponent } from './components';\r\nimport { Imageurl2srcsetPipe } from './pipes/imageurl2srcset.pipe';\r\n\r\nimport {ButtonModule} from 'primeng/button';\r\n@NgModule({\r\n  declarations: [FooterComponent, NavigationFocusDirective, PaginatorComponent, Imageurl2srcsetPipe],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    FlexLayoutModule,\r\n\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatTreeModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n\r\n    // prime controls\r\n    ButtonModule,\r\n\r\n    NgSelectModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    FlexLayoutModule,\r\n\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatTreeModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n\r\n    //prime controls\r\n    ButtonModule,\r\n\r\n    NgSelectModule,\r\n    FooterComponent,\r\n    PaginatorComponent,\r\n\r\n    NavigationFocusDirective,\r\n\r\n    Imageurl2srcsetPipe\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","export interface Image {\r\n\r\n    id: string;\r\n    url: {  \r\n        default:string;\r\n    };\r\n    createdDate: string;\r\n}\r\n\r\n\r\nexport interface ImagesResult {\r\n    images:Image[],\r\n    size:number;\r\n    start:number,\r\n    limit:number,\r\n    total:number,\r\n}\r\n\r\n/*\r\nvar sizeMap = new Map([\r\n    ['mini', 40],\r\n    ['tiny', 80],\r\n    ['small', 150],\r\n    ['medium', 300],\r\n    ['large', 450],\r\n    ['big', 600],\r\n    ['huge', 800],\r\n    ['massive', 960]\r\n  ]);\r\n*/","<div class=\"navbar-container mat-elevation-z6\">\r\n    <nav class=\"navbar-header\">\r\n        <a mat-button routerLink=\"/\" aria-label=\"Training\">\r\n            <img class=\"crm-logo\"\r\n            src=\"../../../../assets/img/angular-white-transparent.svg\"\r\n            alt=\"angular\">\r\n            <span>LogiGear CRM</span>\r\n        </a>\r\n    \r\n        <div class=\"flex-spacer\"></div>\r\n        \r\n        <div *ngIf=\"user$|async as user; else signin\">\r\n            <button mat-button [matMenuTriggerFor]=\"userMenu\">\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-menu #userMenu=\"matMenu\">\r\n                <a mat-menu-item routerLink=\"/admin\">View all employees</a>\r\n                <ng-container *ngIf=\"user.goodAdmin\">\r\n                <mat-divider></mat-divider>\r\n                <button  mat-menu-item (click)=\"onAdministratorClicked()\">Administrator</button>\r\n                <mat-divider></mat-divider>\r\n                </ng-container>\r\n            \r\n                <button mat-menu-item (click)=\"onSignOutClicked()\">Sign out</button>\r\n            </mat-menu>\r\n        </div>\r\n    </nav>\r\n\r\n    <nav class=\"navbar navbar-show-small\">\r\n       \r\n    </nav>\r\n    \r\n    <ng-template #signin>\r\n        <button mat-button (click)=\"onSignInClicked()\">\r\n            <span>Sign in</span>\r\n        </button>\r\n    </ng-template>\r\n</div>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../../models';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, EmployeeService } from '../../services';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'crm-main-container',\r\n  templateUrl: './main-container.component.html',\r\n  styleUrls: ['./main-container.component.scss']\r\n})\r\nexport class MainContainerComponent implements OnInit {\r\n\r\n  user$: Observable<User|undefined>;\r\n\r\n  constructor( private router: Router, private authService: AuthService, private employeeService: EmployeeService) {\r\n    this.user$ = this.authService.currentUser;\r\n    this.user$.subscribe(\r\n      user => {\r\n        if(user) {\r\n          this.router.navigate(['employee', user.id])\r\n        }\r\n      }\r\n    )  \r\n }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSignInClicked(): void {\r\n    console.log(\"onSignInClicked\");\r\n    this.router.navigate(['auth', 'signin'], { queryParams: { redirectUrl: this.router.url }});\r\n  }\r\n\r\n  onSignOutClicked(): void {\r\n    this.authService.purgeAuth();\r\n    this.router.navigate(['auth', 'signin']);\r\n  }\r\n\r\n  onViewProfile(user:User): void {\r\n    this.router.navigate(['/employee', user.id]);\r\n  }\r\n\r\n  onAdministratorClicked(): void {\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n\r\n  constructor() { }\r\n\r\n  getToken(): {id: string, token: string} {\r\n    return {\r\n      id: window.localStorage.currentUserId,\r\n      token: window.localStorage.jwtToken\r\n    };\r\n  }\r\n\r\n  saveToken(token: string): void {\r\n    window.localStorage.jwtToken = token;\r\n  }\r\n\r\n  saveCurrentUserId(user: User): void {\r\n    window.localStorage.currentUserId = user.id;\r\n  }\r\n\r\n  destroyToken(): void {\r\n    window.localStorage.removeItem('currentUserId');\r\n    window.localStorage.removeItem('jwtToken');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { BreakpointObserver, BreakpointState, Breakpoints } from '@angular/cdk/layout';\r\nimport { ScreenSize } from '../models';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResponsiveService {\r\n  /*\r\n  private readonly breakpoints : { [ size : string ] : SwlBreakpoint } =\r\n  {\r\n      [\"xs\"] : {  screen:Screen.Mobile,\r\n                  header: {wLogo: 'sixteen wide', wSearch: 'sixteen wide', wMenu:'sixteen wide', wLast: ''},\r\n                  productList: {nColumn:1},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'sixteen wide', wIntro: 'sixteen wide'},\r\n                    sectionInfo: {wTable: 'sixteen wide'}\r\n                  }\r\n                },\r\n\r\n\r\n      [\"sm\"] : {  screen:Screen.Mobile,\r\n                  header: {wLogo: 'sixteen wide', wSearch: 'sixteen wide', wMenu:'sixteen wide', wLast: ''},\r\n                  productList: {nColumn:3},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                    sectionInfo: {wTable: 'sixteen wide'}\r\n                  }\r\n                },\r\n\r\n      [\"md\"] : {  screen:Screen.Desktop,\r\n                  header: {wLogo: 'two wide', wSearch: 'seven wide', wMenu:'four wide', wLast: 'three wide'},\r\n                  productList: {nColumn:4},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                    sectionInfo: {wTable: 'eight wide'}\r\n                  }\r\n                },\r\n\r\n      [\"lg\"] : {  screen:Screen.Desktop,\r\n                  header: {wLogo: 'one wide', wSearch: 'eight wide', wMenu:'three wide', wLast: 'four wide'},\r\n                  productList: {nColumn:5},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                    sectionInfo: {wTable: 'eight wide'}\r\n                  }\r\n                },\r\n\r\n      [\"xl\"] : {  screen:Screen.Desktop,\r\n                  header: {wLogo: 'one wide', wSearch: 'eight wide', wMenu:'three wide', wLast: 'four wide'},\r\n                  productList: {nColumn:6},\r\n                  productDetail: { sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                  sectionInfo: {wTable: 'eight wide'}\r\n                }\r\n              },\r\n  };*/\r\n\r\n  private currentBreakpointSubject = new ReplaySubject<ScreenSize>(undefined);\r\n  public currentBreakponitObservable = this.currentBreakpointSubject.asObservable();\r\n\r\n  constructor( private breakpoints: BreakpointObserver) { \r\n    /**\r\n     * Breakpoints.XSmall: max-width equals 599.99px\r\n     * Breakpoints.Small: min-width equals 600px and max-width equals 959.99px\r\n     * Breakpoints.Medium: min-width equals 960px and max-width equals 1279.99px\r\n     * Breakpoints.Large: min-width equals 1280px and max-width equals 1919.99px\r\n     * Breakpoints.XLarge: min-width equals 1920px\r\n     */\r\n    \r\n    this.breakpoints.observe([ \r\n      Breakpoints.XSmall,\r\n      Breakpoints.Small,\r\n      Breakpoints.Medium,\r\n      Breakpoints.Large,\r\n      Breakpoints.XLarge])\r\n    .subscribe((state: BreakpointState) => {\r\n      let t:ScreenSize = 0;\r\n      if (state.breakpoints[Breakpoints.XSmall]) {\r\n        console.log( 'Matches XSmall viewport');\r\n        t = ScreenSize.XS;\r\n      }\r\n      if (state.breakpoints[Breakpoints.Small]) {\r\n        console.log( 'Matches Small viewport');\r\n        t = ScreenSize.SM;\r\n      }\r\n      if (state.breakpoints[Breakpoints.Medium]) {\r\n        console.log( 'Matches Medium  viewport');\r\n        t = ScreenSize.MD;\r\n      }\r\n      if (state.breakpoints[Breakpoints.Large]) {\r\n        console.log( 'Matches Large viewport');\r\n        t = ScreenSize.LG;\r\n      }\r\n      if (state.breakpoints[Breakpoints.XLarge]) {\r\n        console.log( 'Matches XLarge viewport');   \r\n        t = ScreenSize.XL;\r\n      }\r\n      \r\n      if(t !== 0) {\r\n        this.currentBreakpointSubject.next(t);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './core';\r\n\r\n@Component({\r\n  selector: 'crm-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'LogiGear CRM';\r\n  \r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.populate();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n    if (parentModule) {\r\n      throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'crm-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-progress-spinner diameter=\"50\" mode=\"indeterminate\">\r\n</mat-progress-spinner>","\r\nexport * from './main-container/main-container.component';\r\nexport * from './property-update-form/property-update-form.component';\r\nexport * from './confirm/confirm.component';\r\nexport * from './loading/loading.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { User } from '../models';\r\n\r\n@Injectable()\r\nexport class FakeUserInterceptor implements HttpInterceptor {\r\n\r\n    /*\r\n    private users:User[] = [\r\n      {id:'1', email: 'sti2k.hai.ly@gmail.com', name: 'Samson', roles: ['ADMIN'], unverified: false, blocked: false, goodUser: true, goodAdmin: true},\r\n      {id:'2', email: 'do.tran@gmail.com', name: 'DoTran', roles: ['USER'], unverified: false, blocked: false, goodUser: true, goodAdmin: false},\r\n    ]*/\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // array in local storage for registered users\r\n        let s = localStorage.getItem('users');\r\n        let users: any[] = [];\r\n        if(s) {\r\n            users = JSON.parse(s) || [];\r\n        }\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null).pipe(mergeMap(() => {\r\n\r\n            // authenticate\r\n            if (request.url.endsWith('/api/auth/signin') && request.method === 'POST') {\r\n                console.log('FakeUserInterceptor for login');\r\n                // find if any user matches login credentials\r\n                let filteredUsers = users.filter(user => {\r\n                    return user.email === request.body.email && user.pwd === request.body.pwd;\r\n                });\r\n\r\n                if (filteredUsers.length) {\r\n                    // if login details are valid return 200 OK with user details and fake jwt token\r\n                    let user = filteredUsers[0];\r\n                    let body = {id:user.id, email: user.email, name: user.name, roles: ['USER'], unverified: false, blocked: false, goodUser: true, goodAdmin: false};\r\n                    let headers = new HttpHeaders({\r\n                      'OT-Authorization': \"Bearer fake-jwt-token\"\r\n                    })\r\n                    let httpResponse = new HttpResponse({ status: 200, headers: headers, body: body });\r\n                   \r\n\r\n                    return of(httpResponse);\r\n                } else {\r\n                    // else return 400 bad request\r\n                    return throwError({ error: { message: 'Username or password is incorrect' } });\r\n                }\r\n            }\r\n\r\n            \r\n            // get users\r\n            if (request.url.endsWith('/api/users') && request.method === 'GET') {\r\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    return of(new HttpResponse({ status: 200, body: users }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorized' } });\r\n                }\r\n            }\r\n\r\n            // get user by id\r\n            if (request.url.match(/\\/api\\/users\\/\\d+$/) && request.method === 'GET') {\r\n              console.log('FakeUserInterceptor for getting user with id');\r\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    // find user by id in users array\r\n                    let urlParts = request.url.split('/');\r\n                    let id = parseInt(urlParts[urlParts.length - 1]);\r\n                    console.log('FakeUserInterceptor for getting user with urlParts', urlParts);\r\n                    console.log('FakeUserInterceptor for getting user with id1', id);\r\n                    let matchedUsers = users.filter(user => { return user.id === id; });\r\n                    let user = matchedUsers.length ? matchedUsers[0] : null;\r\n                    \r\n                    return of(new HttpResponse({ status: 200, body: user }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorized' } });\r\n                }\r\n            }\r\n\r\n            // register user\r\n            if (request.url.endsWith('/api/auth/signup') && request.method === 'POST') {\r\n                // get new user object from post body\r\n                let newUser = request.body;\r\n\r\n                // validation\r\n                let duplicateUser = users.filter(user => { return user.email === newUser.email; }).length;\r\n                if (duplicateUser) {\r\n                    return throwError({ error: { message: 'Username \"' + newUser.username + '\" is already taken' } });\r\n                }\r\n\r\n                // save new user\r\n                newUser.id = users.length + 1;\r\n                users.push(newUser);\r\n                localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                let body = {id:newUser.id, email: newUser.email, name: newUser.name, roles: ['USER'], unverified: false, blocked: false, goodUser: true, goodAdmin: false};\r\n                let httpResponse = new HttpResponse({ status: 200, body: body });\r\n                httpResponse.headers.append('OT-Authorization', \"Bearer fake-jwt-token\")\r\n\r\n                // respond 200 OK\r\n                return of(httpResponse);\r\n            }\r\n\r\n            /*\r\n            // delete user\r\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'DELETE') {\r\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    // find user by id in users array\r\n                    let urlParts = request.url.split('/');\r\n                    let id = parseInt(urlParts[urlParts.length - 1]);\r\n                    for (let i = 0; i < users.length; i++) {\r\n                        let user = users[i];\r\n                        if (user.id === id) {\r\n                            // delete user\r\n                            users.splice(i, 1);\r\n                            localStorage.setItem('users', JSON.stringify(users));\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // respond 200 OK\r\n                    return of(new HttpResponse({ status: 200 }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorised' } });\r\n                }\r\n            }*/\r\n\r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n            \r\n        }))\r\n\r\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n        .pipe(materialize())\r\n        .pipe(delay(500))\r\n        .pipe(dematerialize());\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CoreModule } from './core/core.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n\r\n    ToastrModule.forRoot({\r\n      timeOut: 10000,\r\n      positionClass: 'toast-bottom-right',\r\n      preventDuplicates: true,\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'crm-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n  <div class=\"crm-footer-list\">\r\n    <div class=\"crm-footer-logo\">\r\n      <div class=\"footer-logo\">\r\n        <img class=\"crm-footer-angular-logo\"\r\n          src=\"../../../../assets/img/angular-white-transparent.svg\"\r\n          alt=\"Angular icon\">\r\n        <span><a href=\"https://logigear.com\">LogiGear CRM</a></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"crm-footer-version\">\r\n      <img class=\"angular-material-logo\" src=\"../../../assets/img/angular-material-logo.svg\"\r\n           alt=\"Angular Material icon\">\r\n      <span class=\"version\">Current Version: 1.0.0</span>\r\n    </div>\r\n\r\n    <div class=\"crm-footer-copyright\">\r\n      <div>\r\n        <span>Powered by LogiGear ©2021.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","export * from './api.service';\r\nexport * from './jwt.service';\r\nexport * from './auth.service';\r\nexport * from './user.service';\r\nexport * from './employee.service';\r\nexport * from './responsive.service';\r\nexport * from './image.service'\r\nexport * from './logging.service'\r\nexport * from './error.service'","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, CanActivateChild } from '@angular/router';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResetPwdGuard implements CanActivate  {\r\n\r\n  constructor( private router: Router, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    if (this.authService.forgotAccount === undefined) {\r\n      this.router.navigate(['/auth', 'forgotpwd']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","\r\nexport * from './components';\r\nexport * from './services';\r\nexport * from './models';","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\nimport { User} from '../models';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor( private apiService: ApiService) {\r\n\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.apiService.get('/users');\r\n  }\r\n\r\n  getUser(id: string): Observable<User> {\r\n    return this.apiService.get(`/users/${id}`);\r\n  }\r\n\r\n  // Update the user on the server (email, pass, etc)\r\n  updateUser(id: string, data: any): Observable<User> {\r\n    return this.apiService.patch(`/users/${id}`, data);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<void> {\r\n    return this.apiService.delete(`/users/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { take, tap, map } from 'rxjs/operators';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate, CanActivateChild  {\r\n\r\n  constructor( private router: Router, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    const url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  checkLogin(url: string): Observable<boolean> {\r\n    return this.authService.isAuthenticated.pipe(\r\n      take(1),\r\n      map( isAuth => isAuth ? this.authService.getCurrentUser()!.goodAdmin : false),\r\n      tap( goodAdmin => {\r\n        if (!goodAdmin) {\r\n          this.router.navigate(['/auth', 'signin'], { queryParams: { redirectUrl: url }});\r\n        }\r\n      }\r\n    ));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { Employee } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FakeEmployeeInterceptor implements HttpInterceptor {\r\n\r\n    private employee: Employee = {\r\n        id: '1',\r\n        fullName: 'A'\r\n    }\r\n\r\n    private employees:Employee[] = [\r\n        {id:'1', fullName: 'A'},\r\n        {id:'2', fullName: 'B'},\r\n        {id:'B', fullName: 'C'}\r\n    ]\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null).pipe(mergeMap(() => {\r\n            if (request.url.endsWith('/employees/1') && request.method === 'GET') {\r\n                console.log('FakeEmployeeInterceptor get /employees/1');\r\n                return of(new HttpResponse({ status: 200, body: this.employee }));\r\n            } else if (request.url.endsWith('/employees') && request.method === 'GET') {\r\n                console.log('FakeEmployeeInterceptor get /employees');\r\n                return of(new HttpResponse({ status: 200, body: this.employees }));\r\n            } \r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n        })) \r\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n        .pipe(materialize())\r\n        .pipe(delay(500))\r\n        .pipe(dematerialize());\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggingService {\r\n\r\n  logError(message: string, stack: string) {\r\n    console.error(message);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const baseUrl = document.getElementsByTagName('base')[0].href;\r\n    const apiReq = req.clone({\r\n      url: `${baseUrl}${req.url}`,\r\n      setHeaders: {\r\n        'X-Forwarded-Proto': 'http',\r\n        'X-Forwarded-Host': 'localhost',\r\n        'X-Forwarded-Port': '5000'\r\n      }});\r\n    return next.handle(apiReq);\r\n  }\r\n}\r\n","<div class=\"pagnHy\" *ngIf=\"length>1\">\r\n    \r\n  <span class=\"pagnLA\" [class.disabled]=\"curPage===1\"> \r\n      <a [routerLink]=\"['./']\"  queryParamsHandling=\"merge\" [queryParams]=\"{page: curPage-1}\">\r\n        <span style=\"display: inline-flex;\"><svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-paginator-icon\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg></span>\r\n        <span>Previous Page</span>\r\n      </a>\r\n  </span>\r\n\r\n  <span [class.pagnCur]=\"page===curPage\"\r\n        [class.pagnLink]=\"page!==0 && page!==curPage\"\r\n        [class.pagnMore]=\"page===0\" *ngFor=\"let page of pages\"\r\n        >\r\n      <a [routerLink]=\"['./']\"  queryParamsHandling=\"merge\" [queryParams]=\"{page: page}\">{{page || '...'}}</a>\r\n  </span>\r\n\r\n  <span class=\"pagnRA\" [class.disabled]=\"curPage===length\">\r\n      <a [routerLink]=\"['./']\"  queryParamsHandling=\"merge\" [queryParams]=\"{page: curPage+1}\">\r\n          <span>Next Page</span> \r\n          <span style=\"display: inline-flex;\"><svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-paginator-icon\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path></svg></span>\r\n      </a>\r\n  </span>\r\n  \r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'crm-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrls: ['./paginator.component.scss']\r\n})\r\nexport class PaginatorComponent implements OnInit, OnDestroy {\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private _length = 0;\r\n\r\n  @Input() set length(p: number){\r\n    this._length = p;\r\n    this.generatePages();\r\n  }\r\n\r\n  get length(): number {\r\n    return this._length;\r\n  }\r\n\r\n  curPage = 0;\r\n  pages: number[] = [];\r\n  getCurPageSubscription: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n    this.getCurPageSubscription = this.route.queryParamMap.subscribe( (params: ParamMap) => {\r\n\r\n      const page = params.get('page') || '';\r\n      let nPage = parseInt(page, 10);\r\n      if (isNaN(nPage) || nPage < 1) {\r\n        nPage = 1;\r\n      }\r\n\r\n      this.curPage = nPage;\r\n      this.generatePages();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.getCurPageSubscription) {\r\n      this.getCurPageSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  generatePages(): void {\r\n    if (this._length < 6) {\r\n      this.pages = Array.from({length: this._length}, (v, k) => k + 1);\r\n    } else {\r\n      const p: number[] = [1];\r\n\r\n      if (this.curPage > 4) {\r\n        p.push(0);\r\n        if (this.curPage === this._length) {\r\n          p.push(this.curPage - 2);\r\n          p.push(this.curPage - 1);\r\n          p.push(this.curPage);\r\n        } else {\r\n          p.push(this.curPage - 1);\r\n          p.push(this.curPage);\r\n          p.push(this.curPage + 1);\r\n        }\r\n\r\n      } else {\r\n        p.push(2);\r\n        p.push(3);\r\n        if (this.curPage >= 3 ) {\r\n          p.push(4);\r\n          if (this.curPage === 4) {\r\n            p.push(5);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this._length - this.curPage > 3) {\r\n        p.push(0);\r\n        p.push(this._length);\r\n      } else if (this._length - this.curPage === 3 ) {\r\n        p.push(this._length - 1);\r\n        p.push(this._length);\r\n      } else if (this._length - this.curPage === 2 ) {\r\n        p.push(this._length);\r\n      }\r\n\r\n      this.pages = p;\r\n    }\r\n  }\r\n\r\n}\r\n","import { ErrorHandler, Injectable, Injector, Inject } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { LoggingService, ErrorService } from './services';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GlobalErrorHandler extends ErrorHandler {\r\n\r\n    // Error handling is important and needs to be loaded first.\r\n    // Because of this we should manually inject the services with Injector.\r\n    constructor( @Inject(Injector) private readonly injector: Injector) {\r\n        super();\r\n    }\r\n\r\n    private get toastrService(): ToastrService {\r\n        return this.injector.get<ToastrService>(ToastrService);\r\n    }\r\n\r\n    private get loggingService(): LoggingService {\r\n        return this.injector.get<LoggingService>(LoggingService);\r\n    }\r\n\r\n    private get errorService(): ErrorService {\r\n        return this.injector.get<ErrorService>(ErrorService);\r\n    }\r\n\r\n    handleError(error: Error | HttpErrorResponse) {\r\n\r\n        let message: string;\r\n        let stackTrace: string;\r\n\r\n        if (error instanceof HttpErrorResponse) {\r\n            // Server Error\r\n            message = this.errorService.getServerMessage(error);\r\n            stackTrace = this.errorService.getServerStack(error);\r\n            let errMsg: string = \"\";\r\n            if (message.includes(\"/api/auth/signin\")) {\r\n                errMsg = \"Invalid credentials! Please try again!\";\r\n            }\r\n            this.toastrService.error(errMsg === \"\" ? message : errMsg, undefined, { onActivateTick: true })\r\n\r\n        } else {\r\n            // Client Error\r\n            message = this.errorService.getClientMessage(error);\r\n            stackTrace = this.errorService.getClientStack(error);\r\n            this.toastrService.error(message, undefined, { onActivateTick: true })\r\n        }\r\n\r\n        // Always log errors\r\n        this.loggingService.logError(message, stackTrace);\r\n    }\r\n}","import { ErrorHandler, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { MainContainerComponent } from './components/main-container/main-container.component';\r\nimport { SharedModule } from '../shared';\r\nimport {HttpInterceptorProviders, TestHttpInterceptorProviders} from './interceptors';\r\nimport { ApiService, JwtService } from './services';\r\nimport { PropertyUpdateFormComponent } from './components/property-update-form/property-update-form.component';\r\nimport { AdminGuard, AuthGuard, NoAuthGuard, ResetPwdGuard } from './guards';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { ConfirmComponent } from './components/confirm/confirm.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { GlobalErrorHandler } from './global-error-handler';\r\n\r\n\r\n@NgModule({\r\n    declarations: [MainContainerComponent, PropertyUpdateFormComponent, ConfirmComponent, LoadingComponent],\r\n    imports: [\r\n        SharedModule,\r\n        LayoutModule\r\n    ],\r\n    providers: [\r\n        HttpInterceptorProviders,\r\n        //TestHttpInterceptorProviders,\r\n        {provide: ErrorHandler, useClass: GlobalErrorHandler},\r\n        ApiService,\r\n        JwtService,\r\n        AdminGuard,\r\n        AuthGuard,\r\n        NoAuthGuard,\r\n        ResetPwdGuard\r\n    ],\r\n    entryComponents: [\r\n        PropertyUpdateFormComponent\r\n    ],\r\n    exports: [\r\n        MainContainerComponent\r\n    ]\r\n})\r\nexport class CoreModule {\r\n\r\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\r\n    if (parentModule) {\r\n      throw new Error('CoreModule has already been loaded. Import Core modules in the AppModule only.');\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoAuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> {\r\n    \r\n    return this.authService.isAuthenticated.pipe(take(1), map(isAuth => !isAuth));\r\n\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Property } from '../../models';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'crm-property-update-form',\r\n  templateUrl: './property-update-form.component.html',\r\n  styleUrls: ['./property-update-form.component.scss']\r\n})\r\nexport class PropertyUpdateFormComponent implements OnInit {\r\n\r\n  readonly properties:Property[]\r\n  propertiesForm : FormGroup;\r\n  constructor(private fb: FormBuilder, @Inject(MAT_DIALOG_DATA) private dialogData: {props: Property[]}, private dialogRef: MatDialogRef<PropertyUpdateFormComponent>) { \r\n    \r\n    let form:{[key:string]:FormControl} = {};\r\n    this.properties = this.dialogData.props;\r\n    // TODO: need to improve for multi data.\r\n    dialogData.props.forEach((p:Property) => {\r\n        form[p.name] = this.fb.control(p.value);\r\n    });\r\n\r\n    this.propertiesForm = this.fb.group(form);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onCancelClicked() {\r\n    this.dialogRef.close(undefined);\r\n  }\r\n\r\n  onYesClicked() {\r\n    this.dialogRef.close(this.propertiesForm.value);\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n  }\r\n}\r\n","\r\n<form [formGroup]=\"propertiesForm\" (ngSubmit)=\"onSubmit()\">\r\n  <h2 mat-dialog-title>Properties</h2>\r\n  <div class=\"ui section divider\"></div>\r\n  <div mat-dialog-content>\r\n    <table class=\"ui small definition table\">\r\n        <tbody>\r\n          <tr *ngFor=\"let prop of properties\">\r\n            <td>{{prop.name}}</td>\r\n            <td> \r\n              <div class=\"ui input\" style=\"width: 100%\">\r\n                <input type=\"text\" placeholder=\"\" [formControlName]=\"prop.name\">\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"ui section divider\"></div>\r\n  <mat-dialog-actions align='end'>\r\n    <button class=\"ui button\" (click)=\"onCancelClicked()\" type =\"button\">Cancel</button>\r\n    <button class=\"ui button\" (click)=\"onYesClicked()\" type=\"button\">Yes</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n    getClientMessage(error: Error): string {\r\n        if (!navigator.onLine) {\r\n            return 'No Internet Connection';\r\n        }\r\n        return error.message ? error.message : error.toString();\r\n    }\r\n\r\n    getClientStack(error: Error): string {\r\n        return error.stack || '';\r\n    }\r\n\r\n    getServerMessage(error: HttpErrorResponse): string {\r\n        if (error.error) {\r\n            return error.error.message || error.message;\r\n        }\r\n        return error.message;\r\n    }\r\n\r\n    getServerStack(error: HttpErrorResponse): string {\r\n        // handle stack trace\r\n        return 'stack';\r\n    }\r\n}","// tslint:disable: no-any\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    return this.http.get(`${environment.apiUrl}${path}`, { params });\r\n  }\r\n\r\n  put(path: string, body: any): Observable<any> {\r\n    return this.http.put(`${environment.apiUrl}${path}`, body);\r\n  }\r\n\r\n  patch(path: string, body: any): Observable<any> {\r\n    return this.http.patch(`${environment.apiUrl}${path}`, body);\r\n  }\r\n\r\n  post(path: string, body: any, options = {}): Observable<any> {\r\n    console.log(`${environment.apiUrl}${path}`);\r\n    return this.http.post(`${environment.apiUrl}${path}`, body, options);\r\n  }\r\n\r\n  delete(path: string): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}${path}`);\r\n  }\r\n}\r\n","export * from './user.model';\r\nexport * from './employee.model';\r\nexport * from './core.model';\r\nexport * from './image.model';\r\nexport * from './upload-status.model';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainContainerComponent } from './core';\r\nimport { AuthGuard } from './core/guards';\r\nimport {TableModule} from \"primeng/table\";\r\nimport {PanelModule} from \"primeng/panel\";\r\nimport {InputTextModule} from \"primeng/inputtext\";\r\nimport {ButtonModule} from \"primeng/button\";\r\nimport {ToastModule} from \"primeng/toast\";\r\nimport {MegaMenuModule} from \"primeng/megamenu\";\r\nimport {MessageModule} from \"primeng/message\";\r\nimport {CardModule} from \"primeng/card\";\r\nimport {ProgressSpinnerModule} from \"primeng/progressspinner\";\r\nimport {OverlayPanelModule} from \"primeng/overlaypanel\";\r\nimport {BreadcrumbModule} from \"primeng/breadcrumb\";\r\nimport {CalendarModule} from \"primeng/calendar\";\r\nimport {SidebarModule} from \"primeng/sidebar\";\r\nimport {DynamicDialogModule} from \"primeng/dynamicdialog\";\r\nimport {InputTextareaModule} from \"primeng/inputtextarea\";\r\nimport {MessagesModule} from \"primeng/messages\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)},\r\n  {\r\n    path: 'employee',\r\n    component: MainContainerComponent,\r\n    children: [\r\n      { path: '', loadChildren: () => import('./employee/employee.module').then(m => m.EmployeeModule)},\r\n    ],\r\n    canActivate: [AuthGuard]\r\n  },\r\n    {\r\n        path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\r\n    },\r\n  { path: '', redirectTo: 'employee', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n      RouterModule.forRoot(routes, {useHash: true,  enableTracing: false })\r\n  ],\r\n  exports: [\r\n      RouterModule,\r\n      InputTextModule,\r\n      ButtonModule,\r\n      PanelModule,\r\n      ToastModule,\r\n      MegaMenuModule,\r\n      TableModule,\r\n      MessageModule,\r\n      CardModule,\r\n      ProgressSpinnerModule,\r\n      OverlayPanelModule,\r\n      BreadcrumbModule,\r\n      CalendarModule,\r\n      SidebarModule,\r\n      DynamicDialogModule,\r\n      InputTextareaModule,\r\n      MessagesModule\r\n\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Directive, ElementRef, HostBinding } from '@angular/core';\r\n\r\n/** The timeout id of the previous focus change. */\r\nlet lastTimeoutId = -1;\r\n\r\n@Directive({\r\n  selector: '[hgFocusOnNavigation]'\r\n})\r\nexport class NavigationFocusDirective {\r\n  @HostBinding('style.tabindex') tabindex: string;\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.tabindex = '-1';\r\n    clearTimeout(lastTimeoutId);\r\n    // 100ms timeout is used to allow the page to settle before moving focus for screen readers.\r\n    lastTimeoutId = window.setTimeout(() => this.el.nativeElement.focus({preventScroll: true}), 100);\r\n  }\r\n}\r\n","export * from './navigation-focus.directive';\r\n","export * from './auth.guard';\r\nexport * from './admin.guard';\r\nexport * from './no-auth.guard';\r\nexport * from './reset-pwd.guard';\r\nexport * from './module-import.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor ( private apiService: ApiService) {\r\n\r\n  }\r\n\r\n  getEmployees(): Observable<Employee[]> {\r\n    return this.apiService.get(\"/employees\");\r\n  }\r\n\r\n  getEmployee(id:string): Observable<Employee> {\r\n    return this.apiService.get(`/employees/${id}`);\r\n  }\r\n\r\n  updateEmployee(id:String, data:any) :  Observable<Employee> {\r\n    return this.apiService.patch(`/employees/${id}`, data);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}