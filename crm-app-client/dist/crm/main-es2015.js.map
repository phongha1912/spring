{"version":3,"sources":["./src/app/core/components/confirm/confirm.component.ts","./src/app/core/components/confirm/confirm.component.html","./src/app/shared/pipes/imageurl2srcset.pipe.ts","./src/app/shared/components/index.ts","./src/app/core/interceptors/nocache.interceptor.ts","./src/app/core/models/core.model.ts","./src/app/core/services/image.service.ts","./src/app/core/interceptors/index.ts","./src/app/core/services/auth.service.ts","./src/app/shared/pipes/index.ts","./src/app/core/interceptors/jwt.interceptor.ts","./src/environments/environment.ts","./src/app/core/interceptors/server-error.interceptor.ts","./src/app/shared/index.ts","./src/app/core/guards/auth.guard.ts","./src/app/shared/shared.module.ts","./src/app/core/models/image.model.ts","./src/app/core/components/main-container/main-container.component.html","./src/app/core/components/main-container/main-container.component.ts","./src/app/core/services/jwt.service.ts","./src/app/core/services/responsive.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/guards/module-import.guard.ts","./src/app/core/components/loading/loading.component.ts","./src/app/core/components/loading/loading.component.html","./src/app/core/components/index.ts","./src/app/core/interceptors/fake-user.interceptor.ts","./src/app/app.module.ts","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/core/services/index.ts","./src/app/core/guards/reset-pwd.guard.ts","./src/app/core/index.ts","./src/app/core/services/user.service.ts","./src/app/core/guards/admin.guard.ts","./src/app/core/interceptors/fake-employee.interceptor.ts","./src/app/core/services/logging.service.ts","./src/app/core/interceptors/api.interceptor.ts","./src/app/shared/components/paginator/paginator.component.html","./src/app/shared/components/paginator/paginator.component.ts","./src/app/core/global-error-handler.ts","./src/app/core/core.module.ts","./src/app/core/guards/no-auth.guard.ts","./src/app/core/components/property-update-form/property-update-form.component.ts","./src/app/core/components/property-update-form/property-update-form.component.html","./src/app/core/services/error.service.ts","./src/app/core/services/api.service.ts","./src/app/core/models/index.ts","./src/app/app-routing.module.ts","./src/app/shared/directives/navigation-focus.directive.ts","./src/app/shared/directives/index.ts","./src/app/core/guards/index.ts","./src/app/core/services/employee.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Confirm } from '../../models';\r\n\r\n@Component({\r\n  selector: 'crm-confirm',\r\n  templateUrl: './confirm.component.html',\r\n  styleUrls: ['./confirm.component.scss']\r\n})\r\nexport class ConfirmComponent implements OnInit {\r\n\r\n  confirm : Confirm;\r\n\r\n  constructor(@Inject(MAT_DIALOG_DATA) private dialogData: any, private dialogRef: MatDialogRef<ConfirmComponent>) { \r\n    this.confirm = this.dialogData.confirm\r\n  }\r\n\r\n  ngOnInit() : void {\r\n\r\n  }\r\n\r\n  onCancelClicked() {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  onYesClicked() {\r\n    this.dialogRef.close(true);\r\n  }\r\n\r\n}\r\n","<h2 mat-dialog-title>{{confirm.title}}</h2>\r\n<div class=\"ui section divider\"></div>\r\n<mat-dialog-content>\r\n  <div>\r\n    {{confirm.content}}\r\n  </div>\r\n</mat-dialog-content>\r\n<div class=\"ui section divider\"></div>\r\n<mat-dialog-actions align='end'>\r\n  <button class=\"ui button\" (click)=\"onCancelClicked()\" type =\"button\">Cancel</button>\r\n  <button class=\"ui button\" (click)=\"onYesClicked()\" type=\"button\">Yes</button>\r\n</mat-dialog-actions>","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'imageurl2srcset'\r\n})\r\nexport class Imageurl2srcsetPipe implements PipeTransform {\r\n\r\n  transform(value: unknown, ...args: unknown[]): unknown {\r\n    return null;\r\n  }\r\n\r\n}\r\n","export * from './footer/footer.component';\r\nexport * from './paginator/paginator.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoCacheInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req);\r\n  }\r\n}\r\n","export interface Property {\r\n    name: string;\r\n    value: string;\r\n    type: PropertyType;\r\n}\r\n\r\nexport enum PropertyType{\r\n    Text=1,\r\n    CheckBox=2,\r\n}\r\n\r\nexport enum ScreenSize {\r\n    XS = 1,\r\n    SM,\r\n    MD,\r\n    LG,\r\n    XL\r\n}\r\n\r\nexport interface Confirm {\r\n    title: string;\r\n    content: string;\r\n}\r\n\r\nexport enum EditorMode {\r\n    Create = 0,\r\n    Update = 1\r\n}","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { UploadStatus, Image } from '../models';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { HttpEventType, HttpRequest, HttpClient, HttpEvent } from '@angular/common/http';\r\nimport { environment } from '../../../environments/environment';\r\n\r\nexport interface ImageQuery {\r\n  limit?:number;\r\n  start?:number;\r\n  filter?: any;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ImageService {\r\n\r\n  constructor ( private apiService: ApiService, private http: HttpClient) {\r\n    \r\n  }\r\n\r\n  /*\r\n  getImages(q:ImageQuery): Observable<ImagesResult> {\r\n    let sReq = '';\r\n\r\n    let api = '/images';\r\n\r\n    if(typeof q.start === 'number') {\r\n      sReq += `&start=${q.start}`;\r\n    }\r\n\r\n    if(typeof q.limit === 'number') {\r\n      if(sReq) { // not empty\r\n        sReq +='&'\r\n      }\r\n      sReq += `limit=${q.limit}`;\r\n    }\r\n\r\n    if(q.filter) {\r\n      for(let prop in q.filter) {\r\n          if(sReq) { // not empty\r\n            sReq +='&'\r\n          }\r\n          sReq += `${prop}=${q.filter[prop]}`;\r\n      }\r\n    }\r\n\r\n    if(sReq) { // not empty\r\n      api += `?${sReq}`;\r\n    }\r\n    \r\n    console.log(\"api: \" + api);\r\n    return this.apiService.get(api);\r\n  }\r\n  */\r\n\r\n  createImage(image: File):Observable<UploadStatus<Image>> {\r\n    \r\n    const form = new FormData();\r\n\r\n    form.append('image', image, image.name);\r\n    \r\n    const req = new HttpRequest('POST', `${environment.apiUrl}/images`, form, {\r\n      reportProgress: true\r\n    });\r\n\r\n    // The `HttpClient.request` API produces a raw event stream\r\n    // which includes start (sent), progress, and response events.\r\n    let uploadStatus:UploadStatus<Image> = {f: image, ok:true, progress:0, done:false};\r\n    return this.http.request(req)\r\n          .pipe ( map((event: HttpEvent<any>) => {\r\n            \r\n            \r\n            switch (event.type) {\r\n              case HttpEventType.Sent:\r\n                break;\r\n              case HttpEventType.UploadProgress:\r\n                if(event.total) {\r\n                  uploadStatus.progress =  Math.round(100 * event.loaded / event.total);\r\n                }                \r\n                break;\r\n              case HttpEventType.Response:\r\n                uploadStatus.progress = 100;\r\n                uploadStatus.done = true;\r\n                uploadStatus.respone = event.body;\r\n                break;\r\n              default:\r\n                break;\r\n            }\r\n           \r\n            return uploadStatus; \r\n          }),\r\n          catchError( err => {\r\n            // TODO: review\r\n            return throwError(err);\r\n          }) \r\n        );\r\n  }\r\n\r\n  deleteImage(id: String):Observable<String> {\r\n    return this.apiService.delete(`/images/${id}`);\r\n  }\r\n}\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { JwtInterceptor } from './jwt.interceptor';\r\nimport { NoCacheInterceptor } from './nocache.interceptor';\r\nimport { ServerErrorInterceptor } from './server-error.interceptor';\r\nimport { ApiInterceptor } from './api.interceptor';\r\n\r\nimport { FakeEmployeeInterceptor } from './fake-employee.interceptor';\r\nimport { FakeUserInterceptor } from './fake-user.interceptor';\r\n\r\nexport const HttpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: NoCacheInterceptor, multi: true }\r\n];\r\n\r\nexport const TestHttpInterceptorProviders = [\r\n    { provide: HTTP_INTERCEPTORS, useClass: ApiInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: ServerErrorInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: NoCacheInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeEmployeeInterceptor, multi: true },\r\n    { provide: HTTP_INTERCEPTORS, useClass: FakeUserInterceptor, multi: true },\r\n];","import { Injectable } from '@angular/core';\r\nimport { Observable ,  BehaviorSubject ,  ReplaySubject } from 'rxjs';\r\n\r\nimport { ApiService } from './api.service';\r\nimport { JwtService } from './jwt.service';\r\nimport { User } from '../models';\r\nimport { distinctUntilChanged, tap, map } from 'rxjs/operators';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n\r\n  private currentUserSubject = new BehaviorSubject<User|undefined>(undefined);\r\n  public currentUser = this.currentUserSubject.asObservable().pipe(distinctUntilChanged());\r\n\r\n  private isAuthenticatedSubject = new ReplaySubject<boolean>(1);\r\n  public isAuthenticated = this.isAuthenticatedSubject.asObservable();\r\n\r\n  public forgotAccount!: {email: string};\r\n\r\n  constructor( private apiService: ApiService, private jwtService: JwtService ) {\r\n\r\n  }\r\n\r\n  // Verify JWT in localstorage with server & load user's info. This runs once on application startup.\r\n  populate(): void {\r\n    const currentUserId = this.jwtService.getToken().id; // If JWT detected, attempt to get & store user's info\r\n    if (currentUserId) {\r\n      this.apiService.get('/employees/' + currentUserId)\r\n      .subscribe (\r\n        (user: User) => this.setAuth(user),\r\n        () => this.purgeAuth() // err\r\n      );\r\n    } else {\r\n      this.purgeAuth(); // Remove any potential remnants of previous auth states\r\n    }\r\n  }\r\n\r\n  setAuth(user: User): void {\r\n    this.jwtService.saveCurrentUserId(user);  // Save JWT sent from server in localstorage\r\n    this.currentUserSubject.next(user);\r\n    this.isAuthenticatedSubject.next(true);\r\n  }\r\n\r\n  getCurrentUser(): User|undefined {\r\n    return this.currentUserSubject.value;\r\n  }\r\n\r\n  purgeAuth(): void {\r\n    // Remove JWT from localstorage\r\n    this.jwtService.destroyToken();\r\n    // Set current user to an empty object\r\n    this.currentUserSubject.next(undefined);\r\n    // Set auth status to false\r\n    this.isAuthenticatedSubject.next(false);\r\n  }\r\n\r\n  attemptAuth(credentials: {email: string, pwd: string}): Observable<User> {\r\n    return this.apiService.post('/auth/signin', credentials).pipe(tap( (user: User) => this.setAuth(user)));\r\n  }\r\n\r\n  forgotPassword(data: {email: string}): Observable<any> {\r\n    return this.apiService.post('/auth/forgotpwd', data);\r\n  }\r\n\r\n  resetPassword(data: {email: string, verifyCode: string, newPwd: string}): Observable<User> {\r\n    return this.apiService.post('/auth/resetpwd', data).pipe(tap( (user: User) => this.setAuth(user)));\r\n  }\r\n\r\n  signup(data: {email: string, password: string}): Observable<User> {\r\n    return this.apiService.post('/auth/signup', data).pipe(tap( (user: User) => this.setAuth(user)));\r\n  }\r\n}\r\n","export * from './imageurl2srcset.pipe';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { JwtService } from '../services';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n  constructor(private jwtService: JwtService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const token = this.jwtService.getToken().token;\r\n    console.log(\"JwtInterceptor add token\", token);\r\n    if (token && !req.headers.get('Authorization')) {\r\n      const request = req.clone({ setHeaders: { Authorization: `Bearer ${token}` } });\r\n      return next.handle(request);\r\n    } else {\r\n      return next.handle(req).pipe(\r\n        tap(evt => {\r\n          if (evt instanceof HttpResponse) {\r\n              let tokenReturn = evt.headers.get('OT-Authorization');\r\n              console.log(\"JwtInterceptor add OT-Authorization\", tokenReturn);\r\n              if (tokenReturn) {\r\n                tokenReturn = tokenReturn.substring(7); // remove 'Bearer '\r\n                console.log('saveToken: ' + tokenReturn);\r\n                this.jwtService.saveToken(tokenReturn);\r\n              }\r\n          }\r\n        })\r\n      );\r\n    }\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiUrl: 'api',\r\n  sorlUrl: '/solr'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpEvent, HttpRequest, HttpHandler, HttpInterceptor, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError, of } from 'rxjs';\r\nimport { retry, catchError } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ServerErrorInterceptor implements HttpInterceptor {\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n    return next.handle(request).pipe(\r\n      retry(1),\r\n      catchError((error: HttpErrorResponse) => {\r\n          return throwError(error);\r\n        if (error.status === 401) {\r\n          this.injector.get(AuthService).purgeAuth();\r\n          this.injector.get(Router).navigate(['auth', 'signin']);\r\n          return throwError(error);\r\n        } else {\r\n          return throwError(error);\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","export * from './shared.module';\r\nexport * from './components';\r\nexport * from './directives';\r\nexport * from './pipes';","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { take, tap } from 'rxjs/operators';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate, CanActivateChild  {\r\n\r\n  constructor( private router: Router, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    const url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  checkLogin(url: string): Observable<boolean> {\r\n    return this.authService.isAuthenticated.pipe(\r\n      take(1),\r\n      tap( isAuth => {\r\n        if (!isAuth) {\r\n            this.router.navigate(['/auth', 'signin'], { queryParams: { redirectUrl: url }});\r\n        }\r\n      }\r\n    ));\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\n\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\n\r\nimport { NavigationFocusDirective } from './directives/navigation-focus.directive';\r\nimport { FooterComponent, PaginatorComponent } from './components';\r\nimport { Imageurl2srcsetPipe } from './pipes/imageurl2srcset.pipe';\r\n\r\nimport {ButtonModule} from 'primeng/button';\r\n@NgModule({\r\n  declarations: [FooterComponent, NavigationFocusDirective, PaginatorComponent, Imageurl2srcsetPipe],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    FlexLayoutModule,\r\n\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatTreeModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n\r\n    // prime controls\r\n    ButtonModule,\r\n\r\n    NgSelectModule\r\n  ],\r\n  exports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    HttpClientModule,\r\n    RouterModule,\r\n    FlexLayoutModule,\r\n\r\n    MatSidenavModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n    MatDividerModule,\r\n    MatListModule,\r\n    MatGridListModule,\r\n    MatCardModule,\r\n    MatDialogModule,\r\n    MatTreeModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatCheckboxModule,\r\n\r\n    //prime controls\r\n    ButtonModule,\r\n\r\n    NgSelectModule,\r\n    FooterComponent,\r\n    PaginatorComponent,\r\n\r\n    NavigationFocusDirective,\r\n\r\n    Imageurl2srcsetPipe\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","export interface Image {\r\n\r\n    id: string;\r\n    url: {  \r\n        default:string;\r\n    };\r\n    createdDate: string;\r\n}\r\n\r\n\r\nexport interface ImagesResult {\r\n    images:Image[],\r\n    size:number;\r\n    start:number,\r\n    limit:number,\r\n    total:number,\r\n}\r\n\r\n/*\r\nvar sizeMap = new Map([\r\n    ['mini', 40],\r\n    ['tiny', 80],\r\n    ['small', 150],\r\n    ['medium', 300],\r\n    ['large', 450],\r\n    ['big', 600],\r\n    ['huge', 800],\r\n    ['massive', 960]\r\n  ]);\r\n*/","<div class=\"navbar-container mat-elevation-z6\">\r\n    <nav class=\"navbar-header\">\r\n        <a mat-button routerLink=\"/\" aria-label=\"Training\">\r\n            <img class=\"crm-logo\"\r\n            src=\"../../../../assets/img/angular-white-transparent.svg\"\r\n            alt=\"angular\">\r\n            <span>LogiGear CRM</span>\r\n        </a>\r\n    \r\n        <div class=\"flex-spacer\"></div>\r\n        \r\n        <div *ngIf=\"user$|async as user; else signin\">\r\n            <button mat-button [matMenuTriggerFor]=\"userMenu\">\r\n                <mat-icon>arrow_drop_down</mat-icon>\r\n            </button>\r\n            <mat-menu #userMenu=\"matMenu\">\r\n                <a mat-menu-item routerLink=\"/admin\">View all employees</a>\r\n                <ng-container *ngIf=\"user.goodAdmin\">\r\n                <mat-divider></mat-divider>\r\n                <button  mat-menu-item (click)=\"onAdministratorClicked()\">Administrator</button>\r\n                <mat-divider></mat-divider>\r\n                </ng-container>\r\n            \r\n                <button mat-menu-item (click)=\"onSignOutClicked()\">Sign out</button>\r\n            </mat-menu>\r\n        </div>\r\n    </nav>\r\n\r\n    <nav class=\"navbar navbar-show-small\">\r\n       \r\n    </nav>\r\n    \r\n    <ng-template #signin>\r\n        <button mat-button (click)=\"onSignInClicked()\">\r\n            <span>Sign in</span>\r\n        </button>\r\n    </ng-template>\r\n</div>\r\n\r\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { User } from '../../models';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService, EmployeeService } from '../../services';\r\nimport { tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'crm-main-container',\r\n  templateUrl: './main-container.component.html',\r\n  styleUrls: ['./main-container.component.scss']\r\n})\r\nexport class MainContainerComponent implements OnInit {\r\n\r\n  user$: Observable<User|undefined>;\r\n\r\n  constructor( private router: Router, private authService: AuthService, private employeeService: EmployeeService) {\r\n    this.user$ = this.authService.currentUser;\r\n    this.user$.subscribe(\r\n      user => {\r\n        if(user) {\r\n          this.router.navigate(['employee', user.id])\r\n        }\r\n      }\r\n    )  \r\n }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onSignInClicked(): void {\r\n    console.log(\"onSignInClicked\");\r\n    this.router.navigate(['auth', 'signin'], { queryParams: { redirectUrl: this.router.url }});\r\n  }\r\n\r\n  onSignOutClicked(): void {\r\n    this.authService.purgeAuth();\r\n    this.router.navigate(['auth', 'signin']);\r\n  }\r\n\r\n  onViewProfile(user:User): void {\r\n    this.router.navigate(['/employee', user.id]);\r\n  }\r\n\r\n  onAdministratorClicked(): void {\r\n    this.router.navigate(['/admin']);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { User } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class JwtService {\r\n\r\n  constructor() { }\r\n\r\n  getToken(): {id: string, token: string} {\r\n    return {\r\n      id: window.localStorage.currentUserId,\r\n      token: window.localStorage.jwtToken\r\n    };\r\n  }\r\n\r\n  saveToken(token: string): void {\r\n    window.localStorage.jwtToken = token;\r\n  }\r\n\r\n  saveCurrentUserId(user: User): void {\r\n    window.localStorage.currentUserId = user.id;\r\n  }\r\n\r\n  destroyToken(): void {\r\n    window.localStorage.removeItem('currentUserId');\r\n    window.localStorage.removeItem('jwtToken');\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ReplaySubject } from 'rxjs';\r\nimport { BreakpointObserver, BreakpointState, Breakpoints } from '@angular/cdk/layout';\r\nimport { ScreenSize } from '../models';\r\n\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResponsiveService {\r\n  /*\r\n  private readonly breakpoints : { [ size : string ] : SwlBreakpoint } =\r\n  {\r\n      [\"xs\"] : {  screen:Screen.Mobile,\r\n                  header: {wLogo: 'sixteen wide', wSearch: 'sixteen wide', wMenu:'sixteen wide', wLast: ''},\r\n                  productList: {nColumn:1},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'sixteen wide', wIntro: 'sixteen wide'},\r\n                    sectionInfo: {wTable: 'sixteen wide'}\r\n                  }\r\n                },\r\n\r\n\r\n      [\"sm\"] : {  screen:Screen.Mobile,\r\n                  header: {wLogo: 'sixteen wide', wSearch: 'sixteen wide', wMenu:'sixteen wide', wLast: ''},\r\n                  productList: {nColumn:3},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                    sectionInfo: {wTable: 'sixteen wide'}\r\n                  }\r\n                },\r\n\r\n      [\"md\"] : {  screen:Screen.Desktop,\r\n                  header: {wLogo: 'two wide', wSearch: 'seven wide', wMenu:'four wide', wLast: 'three wide'},\r\n                  productList: {nColumn:4},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                    sectionInfo: {wTable: 'eight wide'}\r\n                  }\r\n                },\r\n\r\n      [\"lg\"] : {  screen:Screen.Desktop,\r\n                  header: {wLogo: 'one wide', wSearch: 'eight wide', wMenu:'three wide', wLast: 'four wide'},\r\n                  productList: {nColumn:5},\r\n                  productDetail: {\r\n                    sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                    sectionInfo: {wTable: 'eight wide'}\r\n                  }\r\n                },\r\n\r\n      [\"xl\"] : {  screen:Screen.Desktop,\r\n                  header: {wLogo: 'one wide', wSearch: 'eight wide', wMenu:'three wide', wLast: 'four wide'},\r\n                  productList: {nColumn:6},\r\n                  productDetail: { sectionIntro: {wImg: 'eight wide', wIntro: 'eight wide'},\r\n                  sectionInfo: {wTable: 'eight wide'}\r\n                }\r\n              },\r\n  };*/\r\n\r\n  private currentBreakpointSubject = new ReplaySubject<ScreenSize>(undefined);\r\n  public currentBreakponitObservable = this.currentBreakpointSubject.asObservable();\r\n\r\n  constructor( private breakpoints: BreakpointObserver) { \r\n    /**\r\n     * Breakpoints.XSmall: max-width equals 599.99px\r\n     * Breakpoints.Small: min-width equals 600px and max-width equals 959.99px\r\n     * Breakpoints.Medium: min-width equals 960px and max-width equals 1279.99px\r\n     * Breakpoints.Large: min-width equals 1280px and max-width equals 1919.99px\r\n     * Breakpoints.XLarge: min-width equals 1920px\r\n     */\r\n    \r\n    this.breakpoints.observe([ \r\n      Breakpoints.XSmall,\r\n      Breakpoints.Small,\r\n      Breakpoints.Medium,\r\n      Breakpoints.Large,\r\n      Breakpoints.XLarge])\r\n    .subscribe((state: BreakpointState) => {\r\n      let t:ScreenSize = 0;\r\n      if (state.breakpoints[Breakpoints.XSmall]) {\r\n        console.log( 'Matches XSmall viewport');\r\n        t = ScreenSize.XS;\r\n      }\r\n      if (state.breakpoints[Breakpoints.Small]) {\r\n        console.log( 'Matches Small viewport');\r\n        t = ScreenSize.SM;\r\n      }\r\n      if (state.breakpoints[Breakpoints.Medium]) {\r\n        console.log( 'Matches Medium  viewport');\r\n        t = ScreenSize.MD;\r\n      }\r\n      if (state.breakpoints[Breakpoints.Large]) {\r\n        console.log( 'Matches Large viewport');\r\n        t = ScreenSize.LG;\r\n      }\r\n      if (state.breakpoints[Breakpoints.XLarge]) {\r\n        console.log( 'Matches XLarge viewport');   \r\n        t = ScreenSize.XL;\r\n      }\r\n      \r\n      if(t !== 0) {\r\n        this.currentBreakpointSubject.next(t);\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\nimport { AuthService } from './core';\r\n\r\n@Component({\r\n  selector: 'crm-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  title = 'LogiGear CRM';\r\n  \r\n  constructor(private authService: AuthService) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.authService.populate();\r\n  }\r\n}\r\n","<router-outlet></router-outlet>","export function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n    if (parentModule) {\r\n      throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'crm-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.scss']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<mat-progress-spinner diameter=\"50\" mode=\"indeterminate\">\r\n</mat-progress-spinner>","\r\nexport * from './main-container/main-container.component';\r\nexport * from './property-update-form/property-update-form.component';\r\nexport * from './confirm/confirm.component';\r\nexport * from './loading/loading.component';\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS, HttpHeaders } from '@angular/common/http';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { User } from '../models';\r\n\r\n@Injectable()\r\nexport class FakeUserInterceptor implements HttpInterceptor {\r\n\r\n    /*\r\n    private users:User[] = [\r\n      {id:'1', email: 'sti2k.hai.ly@gmail.com', name: 'Samson', roles: ['ADMIN'], unverified: false, blocked: false, goodUser: true, goodAdmin: true},\r\n      {id:'2', email: 'do.tran@gmail.com', name: 'DoTran', roles: ['USER'], unverified: false, blocked: false, goodUser: true, goodAdmin: false},\r\n    ]*/\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // array in local storage for registered users\r\n        let s = localStorage.getItem('users');\r\n        let users: any[] = [];\r\n        if(s) {\r\n            users = JSON.parse(s) || [];\r\n        }\r\n\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null).pipe(mergeMap(() => {\r\n\r\n            // authenticate\r\n            if (request.url.endsWith('/api/auth/signin') && request.method === 'POST') {\r\n                console.log('FakeUserInterceptor for login');\r\n                // find if any user matches login credentials\r\n                let filteredUsers = users.filter(user => {\r\n                    return user.email === request.body.email && user.pwd === request.body.pwd;\r\n                });\r\n\r\n                if (filteredUsers.length) {\r\n                    // if login details are valid return 200 OK with user details and fake jwt token\r\n                    let user = filteredUsers[0];\r\n                    let body = {id:user.id, email: user.email, name: user.name, roles: ['USER'], unverified: false, blocked: false, goodUser: true, goodAdmin: false};\r\n                    let headers = new HttpHeaders({\r\n                      'OT-Authorization': \"Bearer fake-jwt-token\"\r\n                    })\r\n                    let httpResponse = new HttpResponse({ status: 200, headers: headers, body: body });\r\n                   \r\n\r\n                    return of(httpResponse);\r\n                } else {\r\n                    // else return 400 bad request\r\n                    return throwError({ error: { message: 'Username or password is incorrect' } });\r\n                }\r\n            }\r\n\r\n            \r\n            // get users\r\n            if (request.url.endsWith('/api/users') && request.method === 'GET') {\r\n                // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    return of(new HttpResponse({ status: 200, body: users }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorized' } });\r\n                }\r\n            }\r\n\r\n            // get user by id\r\n            if (request.url.match(/\\/api\\/users\\/\\d+$/) && request.method === 'GET') {\r\n              console.log('FakeUserInterceptor for getting user with id');\r\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    // find user by id in users array\r\n                    let urlParts = request.url.split('/');\r\n                    let id = parseInt(urlParts[urlParts.length - 1]);\r\n                    console.log('FakeUserInterceptor for getting user with urlParts', urlParts);\r\n                    console.log('FakeUserInterceptor for getting user with id1', id);\r\n                    let matchedUsers = users.filter(user => { return user.id === id; });\r\n                    let user = matchedUsers.length ? matchedUsers[0] : null;\r\n                    \r\n                    return of(new HttpResponse({ status: 200, body: user }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorized' } });\r\n                }\r\n            }\r\n\r\n            // register user\r\n            if (request.url.endsWith('/api/auth/signup') && request.method === 'POST') {\r\n                // get new user object from post body\r\n                let newUser = request.body;\r\n\r\n                // validation\r\n                let duplicateUser = users.filter(user => { return user.email === newUser.email; }).length;\r\n                if (duplicateUser) {\r\n                    return throwError({ error: { message: 'Username \"' + newUser.username + '\" is already taken' } });\r\n                }\r\n\r\n                // save new user\r\n                newUser.id = users.length + 1;\r\n                users.push(newUser);\r\n                localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                let body = {id:newUser.id, email: newUser.email, name: newUser.name, roles: ['USER'], unverified: false, blocked: false, goodUser: true, goodAdmin: false};\r\n                let httpResponse = new HttpResponse({ status: 200, body: body });\r\n                httpResponse.headers.append('OT-Authorization', \"Bearer fake-jwt-token\")\r\n\r\n                // respond 200 OK\r\n                return of(httpResponse);\r\n            }\r\n\r\n            /*\r\n            // delete user\r\n            if (request.url.match(/\\/users\\/\\d+$/) && request.method === 'DELETE') {\r\n                // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n                if (request.headers.get('Authorization') === 'Bearer fake-jwt-token') {\r\n                    // find user by id in users array\r\n                    let urlParts = request.url.split('/');\r\n                    let id = parseInt(urlParts[urlParts.length - 1]);\r\n                    for (let i = 0; i < users.length; i++) {\r\n                        let user = users[i];\r\n                        if (user.id === id) {\r\n                            // delete user\r\n                            users.splice(i, 1);\r\n                            localStorage.setItem('users', JSON.stringify(users));\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    // respond 200 OK\r\n                    return of(new HttpResponse({ status: 200 }));\r\n                } else {\r\n                    // return 401 not authorised if token is null or invalid\r\n                    return throwError({ error: { message: 'Unauthorised' } });\r\n                }\r\n            }*/\r\n\r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n            \r\n        }))\r\n\r\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n        .pipe(materialize())\r\n        .pipe(delay(500))\r\n        .pipe(dematerialize());\r\n    }\r\n}","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CoreModule } from './core/core.module';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    CoreModule,\r\n    AppRoutingModule,\r\n\r\n    ToastrModule.forRoot({\r\n      timeOut: 10000,\r\n      positionClass: 'toast-bottom-right',\r\n      preventDuplicates: true,\r\n    }),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'crm-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.scss']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<footer>\r\n  <div class=\"crm-footer-list\">\r\n    <div class=\"crm-footer-logo\">\r\n      <div class=\"footer-logo\">\r\n        <img class=\"crm-footer-angular-logo\"\r\n          src=\"../../../../assets/img/angular-white-transparent.svg\"\r\n          alt=\"Angular icon\">\r\n        <span><a href=\"https://logigear.com\">LogiGear CRM</a></span>\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"crm-footer-version\">\r\n      <img class=\"angular-material-logo\" src=\"../../../assets/img/angular-material-logo.svg\"\r\n           alt=\"Angular Material icon\">\r\n      <span class=\"version\">Current Version: 1.0.0</span>\r\n    </div>\r\n\r\n    <div class=\"crm-footer-copyright\">\r\n      <div>\r\n        <span>Powered by LogiGear ©2021.</span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</footer>\r\n","export * from './api.service';\r\nexport * from './jwt.service';\r\nexport * from './auth.service';\r\nexport * from './user.service';\r\nexport * from './employee.service';\r\nexport * from './responsive.service';\r\nexport * from './image.service'\r\nexport * from './logging.service'\r\nexport * from './error.service'","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, CanActivateChild } from '@angular/router';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResetPwdGuard implements CanActivate  {\r\n\r\n  constructor( private router: Router, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n\r\n    if (this.authService.forgotAccount === undefined) {\r\n      this.router.navigate(['/auth', 'forgotpwd']);\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n}\r\n","\r\nexport * from './components';\r\nexport * from './services';\r\nexport * from './models';","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from './api.service';\r\nimport { User} from '../models';\r\nimport { AuthService } from './auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor( private apiService: ApiService) {\r\n\r\n  }\r\n\r\n  getUsers(): Observable<User[]> {\r\n    return this.apiService.get('/users');\r\n  }\r\n\r\n  getUser(id: string): Observable<User> {\r\n    return this.apiService.get(`/users/${id}`);\r\n  }\r\n\r\n  // Update the user on the server (email, pass, etc)\r\n  updateUser(id: string, data: any): Observable<User> {\r\n    return this.apiService.patch(`/users/${id}`, data);\r\n  }\r\n\r\n  deleteUser(id: string): Observable<void> {\r\n    return this.apiService.delete(`/users/${id}`);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, CanActivateChild } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { take, tap, map } from 'rxjs/operators';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate, CanActivateChild  {\r\n\r\n  constructor( private router: Router, private authService: AuthService) {\r\n\r\n  }\r\n\r\n  canActivate( route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    const url: string = state.url;\r\n    return this.checkLogin(url);\r\n  }\r\n\r\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    return this.canActivate(route, state);\r\n  }\r\n\r\n  checkLogin(url: string): Observable<boolean> {\r\n    return this.authService.isAuthenticated.pipe(\r\n      take(1),\r\n      map( isAuth => isAuth ? this.authService.getCurrentUser()!.goodAdmin : false),\r\n      tap( goodAdmin => {\r\n        if (!goodAdmin) {\r\n          this.router.navigate(['/auth', 'signin'], { queryParams: { redirectUrl: url }});\r\n        }\r\n      }\r\n    ));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpResponse, HttpHandler, HttpEvent, HttpInterceptor, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay, mergeMap, materialize, dematerialize } from 'rxjs/operators';\r\nimport { Employee } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FakeEmployeeInterceptor implements HttpInterceptor {\r\n\r\n    private employee: Employee = {\r\n        id: '1',\r\n        fullName: 'A'\r\n    }\r\n\r\n    private employees:Employee[] = [\r\n        {id:'1', fullName: 'A'},\r\n        {id:'2', fullName: 'B'},\r\n        {id:'B', fullName: 'C'}\r\n    ]\r\n\r\n    constructor() { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // wrap in delayed observable to simulate server api call\r\n        return of(null).pipe(mergeMap(() => {\r\n            if (request.url.endsWith('/employees/1') && request.method === 'GET') {\r\n                console.log('FakeEmployeeInterceptor get /employees/1');\r\n                return of(new HttpResponse({ status: 200, body: this.employee }));\r\n            } else if (request.url.endsWith('/employees') && request.method === 'GET') {\r\n                console.log('FakeEmployeeInterceptor get /employees');\r\n                return of(new HttpResponse({ status: 200, body: this.employees }));\r\n            } \r\n            // pass through any requests not handled above\r\n            return next.handle(request);\r\n        })) \r\n        // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648)\r\n        .pipe(materialize())\r\n        .pipe(delay(500))\r\n        .pipe(dematerialize());\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoggingService {\r\n\r\n  logError(message: string, stack: string) {\r\n    console.error(message);\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    const baseUrl = document.getElementsByTagName('base')[0].href;\r\n    const apiReq = req.clone({\r\n      url: `${baseUrl}${req.url}`,\r\n      setHeaders: {\r\n        'X-Forwarded-Proto': 'http',\r\n        'X-Forwarded-Host': 'localhost',\r\n        'X-Forwarded-Port': '5000'\r\n      }});\r\n    return next.handle(apiReq);\r\n  }\r\n}\r\n","<div class=\"pagnHy\" *ngIf=\"length>1\">\r\n    \r\n  <span class=\"pagnLA\" [class.disabled]=\"curPage===1\"> \r\n      <a [routerLink]=\"['./']\"  queryParamsHandling=\"merge\" [queryParams]=\"{page: curPage-1}\">\r\n        <span style=\"display: inline-flex;\"><svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-paginator-icon\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"></path></svg></span>\r\n        <span>Previous Page</span>\r\n      </a>\r\n  </span>\r\n\r\n  <span [class.pagnCur]=\"page===curPage\"\r\n        [class.pagnLink]=\"page!==0 && page!==curPage\"\r\n        [class.pagnMore]=\"page===0\" *ngFor=\"let page of pages\"\r\n        >\r\n      <a [routerLink]=\"['./']\"  queryParamsHandling=\"merge\" [queryParams]=\"{page: page}\">{{page || '...'}}</a>\r\n  </span>\r\n\r\n  <span class=\"pagnRA\" [class.disabled]=\"curPage===length\">\r\n      <a [routerLink]=\"['./']\"  queryParamsHandling=\"merge\" [queryParams]=\"{page: curPage+1}\">\r\n          <span>Next Page</span> \r\n          <span style=\"display: inline-flex;\"><svg viewBox=\"0 0 24 24\" focusable=\"false\" class=\"mat-paginator-icon\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"></path></svg></span>\r\n      </a>\r\n  </span>\r\n  \r\n</div>\r\n","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { ActivatedRoute, ParamMap } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'crm-paginator',\r\n  templateUrl: './paginator.component.html',\r\n  styleUrls: ['./paginator.component.scss']\r\n})\r\nexport class PaginatorComponent implements OnInit, OnDestroy {\r\n\r\n  // tslint:disable-next-line: variable-name\r\n  private _length = 0;\r\n\r\n  @Input() set length(p: number){\r\n    this._length = p;\r\n    this.generatePages();\r\n  }\r\n\r\n  get length(): number {\r\n    return this._length;\r\n  }\r\n\r\n  curPage = 0;\r\n  pages: number[] = [];\r\n  getCurPageSubscription: Subscription;\r\n\r\n  constructor(private route: ActivatedRoute) {\r\n    this.getCurPageSubscription = this.route.queryParamMap.subscribe( (params: ParamMap) => {\r\n\r\n      const page = params.get('page') || '';\r\n      let nPage = parseInt(page, 10);\r\n      if (isNaN(nPage) || nPage < 1) {\r\n        nPage = 1;\r\n      }\r\n\r\n      this.curPage = nPage;\r\n      this.generatePages();\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.getCurPageSubscription) {\r\n      this.getCurPageSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  generatePages(): void {\r\n    if (this._length < 6) {\r\n      this.pages = Array.from({length: this._length}, (v, k) => k + 1);\r\n    } else {\r\n      const p: number[] = [1];\r\n\r\n      if (this.curPage > 4) {\r\n        p.push(0);\r\n        if (this.curPage === this._length) {\r\n          p.push(this.curPage - 2);\r\n          p.push(this.curPage - 1);\r\n          p.push(this.curPage);\r\n        } else {\r\n          p.push(this.curPage - 1);\r\n          p.push(this.curPage);\r\n          p.push(this.curPage + 1);\r\n        }\r\n\r\n      } else {\r\n        p.push(2);\r\n        p.push(3);\r\n        if (this.curPage >= 3 ) {\r\n          p.push(4);\r\n          if (this.curPage === 4) {\r\n            p.push(5);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (this._length - this.curPage > 3) {\r\n        p.push(0);\r\n        p.push(this._length);\r\n      } else if (this._length - this.curPage === 3 ) {\r\n        p.push(this._length - 1);\r\n        p.push(this._length);\r\n      } else if (this._length - this.curPage === 2 ) {\r\n        p.push(this._length);\r\n      }\r\n\r\n      this.pages = p;\r\n    }\r\n  }\r\n\r\n}\r\n","import { ErrorHandler, Injectable, Injector, Inject } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { LoggingService, ErrorService } from './services';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GlobalErrorHandler extends ErrorHandler {\r\n\r\n    // Error handling is important and needs to be loaded first.\r\n    // Because of this we should manually inject the services with Injector.\r\n    constructor( @Inject(Injector) private readonly injector: Injector) {\r\n        super();\r\n    }\r\n\r\n    private get toastrService(): ToastrService {\r\n        return this.injector.get<ToastrService>(ToastrService);\r\n    }\r\n\r\n    private get loggingService(): LoggingService {\r\n        return this.injector.get<LoggingService>(LoggingService);\r\n    }\r\n\r\n    private get errorService(): ErrorService {\r\n        return this.injector.get<ErrorService>(ErrorService);\r\n    }\r\n\r\n    handleError(error: Error | HttpErrorResponse) {\r\n\r\n        let message: string;\r\n        let stackTrace: string;\r\n\r\n        if (error instanceof HttpErrorResponse) {\r\n            // Server Error\r\n            message = this.errorService.getServerMessage(error);\r\n            stackTrace = this.errorService.getServerStack(error);\r\n            let errMsg: string = \"\";\r\n            if (message.includes(\"/api/auth/signin\")) {\r\n                errMsg = \"Invalid credentials! Please try again!\";\r\n            }\r\n            this.toastrService.error(errMsg === \"\" ? message : errMsg, undefined, { onActivateTick: true })\r\n\r\n        } else {\r\n            // Client Error\r\n            message = this.errorService.getClientMessage(error);\r\n            stackTrace = this.errorService.getClientStack(error);\r\n            this.toastrService.error(message, undefined, { onActivateTick: true })\r\n        }\r\n\r\n        // Always log errors\r\n        this.loggingService.logError(message, stackTrace);\r\n    }\r\n}","import { ErrorHandler, NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { MainContainerComponent } from './components/main-container/main-container.component';\r\nimport { SharedModule } from '../shared';\r\nimport {HttpInterceptorProviders, TestHttpInterceptorProviders} from './interceptors';\r\nimport { ApiService, JwtService } from './services';\r\nimport { PropertyUpdateFormComponent } from './components/property-update-form/property-update-form.component';\r\nimport { AdminGuard, AuthGuard, NoAuthGuard, ResetPwdGuard } from './guards';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { ConfirmComponent } from './components/confirm/confirm.component';\r\nimport { LoadingComponent } from './components/loading/loading.component';\r\nimport { GlobalErrorHandler } from './global-error-handler';\r\n\r\n\r\n@NgModule({\r\n    declarations: [MainContainerComponent, PropertyUpdateFormComponent, ConfirmComponent, LoadingComponent],\r\n    imports: [\r\n        SharedModule,\r\n        LayoutModule\r\n    ],\r\n    providers: [\r\n        HttpInterceptorProviders,\r\n        //TestHttpInterceptorProviders,\r\n        {provide: ErrorHandler, useClass: GlobalErrorHandler},\r\n        ApiService,\r\n        JwtService,\r\n        AdminGuard,\r\n        AuthGuard,\r\n        NoAuthGuard,\r\n        ResetPwdGuard\r\n    ],\r\n    entryComponents: [\r\n        PropertyUpdateFormComponent\r\n    ],\r\n    exports: [\r\n        MainContainerComponent\r\n    ]\r\n})\r\nexport class CoreModule {\r\n\r\n  constructor( @Optional() @SkipSelf() parentModule: CoreModule) {\r\n    if (parentModule) {\r\n      throw new Error('CoreModule has already been loaded. Import Core modules in the AppModule only.');\r\n    }\r\n  }\r\n}\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class NoAuthGuard implements CanActivate {\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> {\r\n    \r\n    return this.authService.isAuthenticated.pipe(take(1), map(isAuth => !isAuth));\r\n\r\n  }\r\n}\r\n","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Property } from '../../models';\r\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'crm-property-update-form',\r\n  templateUrl: './property-update-form.component.html',\r\n  styleUrls: ['./property-update-form.component.scss']\r\n})\r\nexport class PropertyUpdateFormComponent implements OnInit {\r\n\r\n  readonly properties:Property[]\r\n  propertiesForm : FormGroup;\r\n  constructor(private fb: FormBuilder, @Inject(MAT_DIALOG_DATA) private dialogData: {props: Property[]}, private dialogRef: MatDialogRef<PropertyUpdateFormComponent>) { \r\n    \r\n    let form:{[key:string]:FormControl} = {};\r\n    this.properties = this.dialogData.props;\r\n    // TODO: need to improve for multi data.\r\n    dialogData.props.forEach((p:Property) => {\r\n        form[p.name] = this.fb.control(p.value);\r\n    });\r\n\r\n    this.propertiesForm = this.fb.group(form);\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  onCancelClicked() {\r\n    this.dialogRef.close(undefined);\r\n  }\r\n\r\n  onYesClicked() {\r\n    this.dialogRef.close(this.propertiesForm.value);\r\n  }\r\n\r\n  onSubmit() {\r\n    \r\n  }\r\n}\r\n","\r\n<form [formGroup]=\"propertiesForm\" (ngSubmit)=\"onSubmit()\">\r\n  <h2 mat-dialog-title>Properties</h2>\r\n  <div class=\"ui section divider\"></div>\r\n  <div mat-dialog-content>\r\n    <table class=\"ui small definition table\">\r\n        <tbody>\r\n          <tr *ngFor=\"let prop of properties\">\r\n            <td>{{prop.name}}</td>\r\n            <td> \r\n              <div class=\"ui input\" style=\"width: 100%\">\r\n                <input type=\"text\" placeholder=\"\" [formControlName]=\"prop.name\">\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"ui section divider\"></div>\r\n  <mat-dialog-actions align='end'>\r\n    <button class=\"ui button\" (click)=\"onCancelClicked()\" type =\"button\">Cancel</button>\r\n    <button class=\"ui button\" (click)=\"onYesClicked()\" type=\"button\">Yes</button>\r\n  </mat-dialog-actions>\r\n</form>\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n\r\n    getClientMessage(error: Error): string {\r\n        if (!navigator.onLine) {\r\n            return 'No Internet Connection';\r\n        }\r\n        return error.message ? error.message : error.toString();\r\n    }\r\n\r\n    getClientStack(error: Error): string {\r\n        return error.stack || '';\r\n    }\r\n\r\n    getServerMessage(error: HttpErrorResponse): string {\r\n        if (error.error) {\r\n            return error.error.message || error.message;\r\n        }\r\n        return error.message;\r\n    }\r\n\r\n    getServerStack(error: HttpErrorResponse): string {\r\n        // handle stack trace\r\n        return 'stack';\r\n    }\r\n}","// tslint:disable: no-any\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from '../../../environments/environment';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  constructor(private http: HttpClient) {\r\n\r\n  }\r\n\r\n  get(path: string, params: HttpParams = new HttpParams()): Observable<any> {\r\n    return this.http.get(`${environment.apiUrl}${path}`, { params });\r\n  }\r\n\r\n  put(path: string, body: any): Observable<any> {\r\n    return this.http.put(`${environment.apiUrl}${path}`, body);\r\n  }\r\n\r\n  patch(path: string, body: any): Observable<any> {\r\n    return this.http.patch(`${environment.apiUrl}${path}`, body);\r\n  }\r\n\r\n  post(path: string, body: any, options = {}): Observable<any> {\r\n    console.log(`${environment.apiUrl}${path}`);\r\n    return this.http.post(`${environment.apiUrl}${path}`, body, options);\r\n  }\r\n\r\n  delete(path: string): Observable<any> {\r\n    return this.http.delete(`${environment.apiUrl}${path}`);\r\n  }\r\n}\r\n","export * from './user.model';\r\nexport * from './employee.model';\r\nexport * from './core.model';\r\nexport * from './image.model';\r\nexport * from './upload-status.model';","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { MainContainerComponent } from './core';\r\nimport { AuthGuard } from './core/guards';\r\nimport {TableModule} from \"primeng/table\";\r\nimport {PanelModule} from \"primeng/panel\";\r\nimport {InputTextModule} from \"primeng/inputtext\";\r\nimport {ButtonModule} from \"primeng/button\";\r\nimport {ToastModule} from \"primeng/toast\";\r\nimport {MegaMenuModule} from \"primeng/megamenu\";\r\nimport {MessageModule} from \"primeng/message\";\r\nimport {CardModule} from \"primeng/card\";\r\nimport {ProgressSpinnerModule} from \"primeng/progressspinner\";\r\nimport {OverlayPanelModule} from \"primeng/overlaypanel\";\r\nimport {BreadcrumbModule} from \"primeng/breadcrumb\";\r\nimport {CalendarModule} from \"primeng/calendar\";\r\nimport {SidebarModule} from \"primeng/sidebar\";\r\nimport {DynamicDialogModule} from \"primeng/dynamicdialog\";\r\nimport {InputTextareaModule} from \"primeng/inputtextarea\";\r\nimport {MessagesModule} from \"primeng/messages\";\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'auth', loadChildren: () => import('./auth/auth.module').then(m => m.AuthModule)},\r\n  {\r\n    path: 'employee',\r\n    component: MainContainerComponent,\r\n    children: [\r\n      { path: '', loadChildren: () => import('./employee/employee.module').then(m => m.EmployeeModule)},\r\n    ],\r\n    canActivate: [AuthGuard]\r\n  },\r\n    {\r\n        path: 'admin', loadChildren: () => import('./admin/admin.module').then(m => m.AdminModule)\r\n    },\r\n  { path: '', redirectTo: 'employee', pathMatch: 'full'}\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n      RouterModule.forRoot(routes, {useHash: true,  enableTracing: false })\r\n  ],\r\n  exports: [\r\n      RouterModule,\r\n      InputTextModule,\r\n      ButtonModule,\r\n      PanelModule,\r\n      ToastModule,\r\n      MegaMenuModule,\r\n      TableModule,\r\n      MessageModule,\r\n      CardModule,\r\n      ProgressSpinnerModule,\r\n      OverlayPanelModule,\r\n      BreadcrumbModule,\r\n      CalendarModule,\r\n      SidebarModule,\r\n      DynamicDialogModule,\r\n      InputTextareaModule,\r\n      MessagesModule\r\n\r\n  ]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Directive, ElementRef, HostBinding } from '@angular/core';\r\n\r\n/** The timeout id of the previous focus change. */\r\nlet lastTimeoutId = -1;\r\n\r\n@Directive({\r\n  selector: '[hgFocusOnNavigation]'\r\n})\r\nexport class NavigationFocusDirective {\r\n  @HostBinding('style.tabindex') tabindex: string;\r\n\r\n  constructor(private el: ElementRef) {\r\n    this.tabindex = '-1';\r\n    clearTimeout(lastTimeoutId);\r\n    // 100ms timeout is used to allow the page to settle before moving focus for screen readers.\r\n    lastTimeoutId = window.setTimeout(() => this.el.nativeElement.focus({preventScroll: true}), 100);\r\n  }\r\n}\r\n","export * from './navigation-focus.directive';\r\n","export * from './auth.guard';\r\nexport * from './admin.guard';\r\nexport * from './no-auth.guard';\r\nexport * from './reset-pwd.guard';\r\nexport * from './module-import.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { ApiService } from './api.service';\r\nimport { Observable } from 'rxjs';\r\nimport { Employee } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  constructor ( private apiService: ApiService) {\r\n\r\n  }\r\n\r\n  getEmployees(): Observable<Employee[]> {\r\n    return this.apiService.get(\"/employees\");\r\n  }\r\n\r\n  getEmployee(id:string): Observable<Employee> {\r\n    return this.apiService.get(`/employees/${id}`);\r\n  }\r\n\r\n  updateEmployee(id:String, data:any) :  Observable<Employee> {\r\n    return this.apiService.patch(`/employees/${id}`, data);\r\n  }\r\n}\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}