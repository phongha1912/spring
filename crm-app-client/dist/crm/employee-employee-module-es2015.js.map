{"version":3,"sources":["./src/app/core/services/core.service.ts","./src/app/employee/employee-routing.module.ts","./src/app/employee/components/employee-editor-dialog/employee-editor-dialog.component.ts","./src/app/employee/components/employee-editor-dialog/employee-editor-dialog.component.html","./node_modules/@ngu/carousel/__ivy_ngcc__/fesm2015/ngu-carousel.js","./src/app/employee/pages/employee-detail/employee-detail.component.ts","./src/app/employee/pages/employee-detail/employee-detail.component.html","./src/app/employee/employee.module.ts","./src/app/employee/components/employee-home/employee-home.component.ts"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,0DAAY;AAC5C;AACA,0BAA0B,0DAAY;AACtC,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,+DAAS;AACrB,qEAAqE,mBAAmB;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,+CAAU;AAClD;AACA;AACA;AACA,yBAAyB,+CAAE;AAC3B;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D,qBAAqB;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,yEAAiB;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,mCAAmC,EAAE;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,YAAY,8HAAkB;AAC9B;AACA,2CAA2C,yCAAyC;AACpF;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,4BAA4B,QAAQ;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,kBAAkB,EAAE,oBAAoB,EAAE,KAAK;AAC/E,6BAA6B,kBAAkB,EAAE,oBAAoB,EAAE,KAAK;AAC5E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,yEAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,WAAW;AACtC;AACA;AACA;AACA;AACA,uBAAuB,aAAa,UAAU,gCAAgC;AAC9E;AACA;AACA;AACA;AACA,mCAAmC,aAAa,UAAU,UAAU;AACpE,qCAAqC,GAAG;AACxC,mCAAmC,aAAa,UAAU,UAAU;AACpE,qCAAqC,GAAG;AACxC,mCAAmC,aAAa,UAAU,UAAU;AACpE,qCAAqC,GAAG;AACxC,mCAAmC,aAAa,UAAU,UAAU;AACpE,qCAAqC,GAAG;AACxC,mCAAmC,aAAa,UAAU,UAAU;AACpE,qCAAqC,GAAG;AACxC,6CAA6C,mBAAmB,IAAI,EAAE;AACtE,wCAAwC,eAAe,IAAI,EAAE;AAC7D,wCAAwC,eAAe,IAAI,EAAE;AAC7D,wCAAwC,eAAe,IAAI,EAAE;AAC7D,wCAAwC,eAAe,IAAI,EAAE,aAAa;AAC1E;AACA;AACA;AACA,qBAAqB,aAAa,QAAQ,YAAY,0BAA0B,EAAE,UAAU;AAC5F,yCAAyC,GAAG;AAC5C,qBAAqB,aAAa,QAAQ,YAAY,2BAA2B,EAAE,UAAU;AAC7F,yCAAyC,GAAG;AAC5C,mCAAmC,aAAa,UAAU,YAAY;AACtE,qCAAqC,EAAE,UAAU,2BAA2B,EAAE;AAC9E,mCAAmC,aAAa,UAAU,YAAY;AACtE,qCAAqC,EAAE,UAAU,2BAA2B,EAAE;AAC9E,mCAAmC,aAAa,UAAU,YAAY;AACtE,qCAAqC,EAAE,UAAU,2BAA2B,EAAE;AAC9E,mCAAmC,aAAa,UAAU,YAAY;AACtE,qCAAqC,EAAE,UAAU,2BAA2B,EAAE;AAC9E,6CAA6C,mBAAmB,IAAI,EAAE;AACtE,wCAAwC,eAAe,IAAI,EAAE;AAC7D,wCAAwC,eAAe,IAAI,EAAE;AAC7D,wCAAwC,eAAe,IAAI,EAAE;AAC7D,wCAAwC,eAAe,IAAI,EAAE,aAAa;AAC1E;AACA;AACA,2BAA2B,aAAa,QAAQ,YAAY,qBAAqB,GAAG,UAAU,qBAAqB,IAAI;AACvH;AACA;AACA;AACA;AACA,mFAAmF,qBAAqB;AACxG;AACA;AACA;AACA,iCAAiC,KAAK,GAAG,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,UAAU,KAAK,mBAAmB;AAC9H;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,aAAa,EAAE;AACrC;AACA;AACA,8BAA8B,qBAAqB;AACnD;AACA;AACA;AACA,0BAA0B,kBAAkB,EAAE,qBAAqB;AACnE;AACA,sBAAsB,EAAE;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,mBAAmB,KAAK,EAAE;AACvE,2BAA2B,eAAe,KAAK,EAAE,mCAAmC;AACpF,2BAA2B,eAAe,KAAK,EAAE,mCAAmC;AACpF,2BAA2B,eAAe,KAAK,EAAE,mCAAmC;AACpF,2BAA2B,eAAe,KAAK,EAAE,mCAAmC,EAAE;AACtF;AACA;AACA;AACA,0BAA0B,aAAa,EAAE,0BAA0B,kBAAkB,EAAE,mBAAmB,UAAU;AACpH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,OAAO;AAC9B;AACA;AACA,6BAA6B,KAAK;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb,0BAA0B,sDAAS,+BAA+B,4DAAK;AACvE,2BAA2B,sDAAS,+BAA+B,4DAAK;AACxE,+BAA+B,sDAAS,+BAA+B,4DAAK;AAC5E,gCAAgC,sDAAS,6BAA6B,4DAAK;AAC3E,8BAA8B,qDAAQ,mCAAmC,4DAAK;AAC9E;AACA,mCAAmC,kDAAK;AACxC,0BAA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","file":"employee-employee-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Property, Confirm } from '../models';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { PropertyUpdateFormComponent, LoadingComponent, ConfirmComponent } from '../components';\r\nimport { Overlay } from '@angular/cdk/overlay';\r\nimport { ComponentPortal } from '@angular/cdk/portal';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CoreService {\r\n\r\n  private spinnerTopRef = this.cdkSpinnerCreate();\r\n  private spin$: Subject<boolean> = new Subject();\r\n\r\n  constructor(private dialogService: MatDialog, private overlay: Overlay) { }\r\n\r\n  openUpdateDialog(properties:Property[]) : Observable<any> {\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '540px';\r\n    dialogConfig.height = 'auto';\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.scrollStrategy = this.overlay.scrollStrategies.noop();\r\n    dialogConfig.data = { props: properties };\r\n    \r\n    return this.dialogService.open(PropertyUpdateFormComponent, dialogConfig).afterClosed();\r\n  }\r\n\r\n  private cdkSpinnerCreate() {\r\n    return this.overlay.create({\r\n        hasBackdrop: true,\r\n        backdropClass: 'cdk-overlay-dark-backdrop', //'cdk-overlay-transparent-backdrop',\r\n        positionStrategy: this.overlay.position()\r\n            .global()\r\n            .centerHorizontally()\r\n            .centerVertically()\r\n    });\r\n  }\r\n\r\n  private showSpinner() {\r\n      if (!this.spinnerTopRef.hasAttached()) {\r\n          this.spinnerTopRef.attach(new ComponentPortal(LoadingComponent));\r\n      }\r\n  }\r\n\r\n  private stopSpinner() {\r\n      if(this.spinnerTopRef.hasAttached()) {\r\n          this.spinnerTopRef.detach() ;\r\n      }\r\n  }\r\n\r\n  showLoading() {\r\n      this.spin$.next(true);\r\n  }\r\n\r\n  unShowLoading() {\r\n      this.spin$.next(false);\r\n  }\r\n\r\n  static DeleteProductConfirm:Confirm = {\r\n    title: 'Delete The Product',\r\n    content: 'Are you sure you want to delete this product?'\r\n  }\r\n\r\n  static DeleteItemConfirm:Confirm = {\r\n    title: 'Delete Item',\r\n    content: 'Are you sure you want to delete this item?'\r\n  }\r\n\r\n  static EditProductConfirm:Confirm = {\r\n    title: 'Edit The Product',\r\n    content: 'Are you sure you want to edit this product?'\r\n  }\r\n\r\n  static EditBlogConfirm:Confirm = {\r\n    title: 'Edit The Blog',\r\n    content: 'Are you sure you want to edit this blog?'\r\n  } \r\n\r\n  openConfirmDialog(con:Confirm) : Observable<boolean> {\r\n\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '540px';\r\n    dialogConfig.height = 'auto';\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.scrollStrategy = this.overlay.scrollStrategies.noop();\r\n    dialogConfig.data = { confirm: con };\r\n  \r\n    return this.dialogService.open(ConfirmComponent, dialogConfig).afterClosed();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmployeeDetailComponent } from './pages/employee-detail/employee-detail.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: ':id', component: EmployeeDetailComponent},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeeRoutingModule {\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Employee, EmployeeService } from 'src/app/core';\r\n\r\n@Component({\r\n  selector: 'crm-employee-editor-dialog',\r\n  templateUrl: './employee-editor-dialog.component.html',\r\n  styleUrls: ['./employee-editor-dialog.component.scss']\r\n})\r\nexport class EmployeeEditorDialogComponent implements OnInit {\r\n\r\n  employeeForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder, private dialogRef: MatDialogRef<EmployeeEditorDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Employee, private employeeService: EmployeeService) { \r\n\r\n      this.employeeForm = this.fb.group({\r\n        name: [data.fullName, Validators.required]\r\n      });\r\n\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onUpdateClicked(): void {\r\n\r\n  }\r\n\r\n  onCancelClicked() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<h1 mat-dialog-title>Update Employee</h1>\r\n<div mat-dialog-content>\r\n    TODO Update\r\n</div>\r\n<div mat-dialog-actions align=\"end\">\r\n    <button mat-raised-button  cdkFocusInitial style=\"margin-left: 8px;\" (click)=\"onUpdateClicked()\" [disabled]=\"employeeForm.invalid\">Update</button>\r\n    <button mat-raised-button (click)=\"onCancelClicked()\">Cancel</button>\r\n</div>\r\n","import { isPlatformBrowser, CommonModule } from '@angular/common';\nimport { Directive, TemplateRef, ViewContainerRef, EventEmitter, isDevMode, Component, ChangeDetectionStrategy, ElementRef, Renderer2, IterableDiffers, Inject, PLATFORM_ID, ChangeDetectorRef, Input, Output, ContentChildren, ViewChild, ContentChild, HostBinding, NgModule } from '@angular/core';\nimport { Subject, Observable, of, fromEvent, interval, merge, EMPTY } from 'rxjs';\nimport { takeUntil, mapTo, startWith, switchMap } from 'rxjs/operators';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"ngucarousel\"];\nconst _c1 = [\"nguItemsContainer\"];\nconst _c2 = [\"touchContainer\"];\nconst _c3 = [[[\"\", \"NguCarouselPrev\", \"\"]], [[\"\", \"NguCarouselNext\", \"\"]], [[\"\", \"NguCarouselPoint\", \"\"]]];\nconst _c4 = [\"[NguCarouselPrev]\", \"[NguCarouselNext]\", \"[NguCarouselPoint]\"];\nconst _c5 = [\"*\"];\nclass NguCarouselStore {\r\n    constructor(touch = new Touch(), vertical = new Vertical(), interval, transform = new Transfrom(), button, visibleItems, deviceType, type = 'fixed', token = '', items = 0, load = 0, deviceWidth = 0, carouselWidth = 0, itemWidth = 0, slideItems = 0, itemWidthPer = 0, itemLength = 0, currentSlide = 0, easing = 'cubic-bezier(0, 0, 0.2, 1)', speed = 200, loop = false, dexVal = 0, touchTransform = 0, isEnd = false, isFirst = true, isLast = false, RTL = false, point = true, velocity = 1) {\r\n        this.touch = touch;\r\n        this.vertical = vertical;\r\n        this.interval = interval;\r\n        this.transform = transform;\r\n        this.button = button;\r\n        this.visibleItems = visibleItems;\r\n        this.deviceType = deviceType;\r\n        this.type = type;\r\n        this.token = token;\r\n        this.items = items;\r\n        this.load = load;\r\n        this.deviceWidth = deviceWidth;\r\n        this.carouselWidth = carouselWidth;\r\n        this.itemWidth = itemWidth;\r\n        this.slideItems = slideItems;\r\n        this.itemWidthPer = itemWidthPer;\r\n        this.itemLength = itemLength;\r\n        this.currentSlide = currentSlide;\r\n        this.easing = easing;\r\n        this.speed = speed;\r\n        this.loop = loop;\r\n        this.dexVal = dexVal;\r\n        this.touchTransform = touchTransform;\r\n        this.isEnd = isEnd;\r\n        this.isFirst = isFirst;\r\n        this.isLast = isLast;\r\n        this.RTL = RTL;\r\n        this.point = point;\r\n        this.velocity = velocity;\r\n    }\r\n}\r\nclass ItemsControl {\r\n}\r\nclass Vertical {\r\n}\r\nclass NguButton {\r\n}\r\nclass Touch {\r\n}\r\nclass Transfrom {\r\n    constructor(xs = 0, sm = 0, md = 0, lg = 0, all = 0) {\r\n        this.xs = xs;\r\n        this.sm = sm;\r\n        this.md = md;\r\n        this.lg = lg;\r\n        this.all = all;\r\n        this.xl = 0;\r\n    }\r\n}\r\n/**\r\n * Default values\r\n * {sm: 768, md: 992, lg: 1200, xl: 1200}\r\n *\r\n * Bootstrap values:\r\n * {sm: 576, md: 768, lg: 992, xl: 1200}\r\n */\r\nclass Breakpoints {\r\n    constructor(sm = 768, md = 992, lg = 1200, xl = 1200) {\r\n        this.sm = sm;\r\n        this.md = md;\r\n        this.lg = lg;\r\n        this.xl = xl;\r\n    }\r\n}\r\nclass NguCarouselConfig {\r\n}\r\nclass NguCarouselOutletContext {\r\n    constructor(data) {\r\n        this.$implicit = data;\r\n    }\r\n}\n\nclass NguCarouselItemDirective {\r\n}\nNguCarouselItemDirective.ɵfac = function NguCarouselItemDirective_Factory(t) { return new (t || NguCarouselItemDirective)(); };\nNguCarouselItemDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NguCarouselItemDirective, selectors: [[\"\", \"NguCarouselItem\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarouselItemDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[NguCarouselItem]'\n            }]\n    }], null, null); })();\r\nclass NguCarouselNextDirective {\r\n}\nNguCarouselNextDirective.ɵfac = function NguCarouselNextDirective_Factory(t) { return new (t || NguCarouselNextDirective)(); };\nNguCarouselNextDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NguCarouselNextDirective, selectors: [[\"\", \"NguCarouselNext\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarouselNextDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[NguCarouselNext]'\n            }]\n    }], null, null); })();\r\nclass NguCarouselPrevDirective {\r\n}\nNguCarouselPrevDirective.ɵfac = function NguCarouselPrevDirective_Factory(t) { return new (t || NguCarouselPrevDirective)(); };\nNguCarouselPrevDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NguCarouselPrevDirective, selectors: [[\"\", \"NguCarouselPrev\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarouselPrevDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[NguCarouselPrev]'\n            }]\n    }], null, null); })();\r\nclass NguCarouselPointDirective {\r\n}\nNguCarouselPointDirective.ɵfac = function NguCarouselPointDirective_Factory(t) { return new (t || NguCarouselPointDirective)(); };\nNguCarouselPointDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NguCarouselPointDirective, selectors: [[\"\", \"NguCarouselPoint\", \"\"]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarouselPointDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[NguCarouselPoint]'\n            }]\n    }], null, null); })();\r\nclass NguCarouselDefDirective {\r\n    constructor(template) {\r\n        this.template = template;\r\n    }\r\n}\nNguCarouselDefDirective.ɵfac = function NguCarouselDefDirective_Factory(t) { return new (t || NguCarouselDefDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nNguCarouselDefDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NguCarouselDefDirective, selectors: [[\"\", \"nguCarouselDef\", \"\"]] });\r\nNguCarouselDefDirective.ctorParameters = () => [\r\n    { type: TemplateRef }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarouselDefDirective, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[nguCarouselDef]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\r\n// tslint:disable-next-line:directive-class-suffix\r\nclass NguCarouselOutlet {\r\n    constructor(viewContainer) {\r\n        this.viewContainer = viewContainer;\r\n    }\r\n}\nNguCarouselOutlet.ɵfac = function NguCarouselOutlet_Factory(t) { return new (t || NguCarouselOutlet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef)); };\nNguCarouselOutlet.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NguCarouselOutlet, selectors: [[\"\", \"nguCarouselOutlet\", \"\"]] });\r\nNguCarouselOutlet.ctorParameters = () => [\r\n    { type: ViewContainerRef }\r\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarouselOutlet, [{\n        type: Directive,\n        args: [{\n                // tslint:disable-next-line:directive-selector\n                selector: '[nguCarouselOutlet]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }]; }, null); })();\n\n// @dynamic\r\n// @dynamic\r\n// tslint:disable-next-line:component-class-suffix\r\nclass NguCarousel extends NguCarouselStore {\r\n    constructor(_el, _renderer, _differs, platformId, cdr) {\r\n        super();\r\n        this._el = _el;\r\n        this._renderer = _renderer;\r\n        this._differs = _differs;\r\n        this.platformId = platformId;\r\n        this.cdr = cdr;\r\n        this.withAnim = true;\r\n        this.isHovered = false;\r\n        this.carouselLoad = new EventEmitter();\r\n        // tslint:disable-next-line:no-output-on-prefix\r\n        this.onMove = new EventEmitter();\r\n        this._intervalController$ = new Subject();\r\n        this.pointNumbers = [];\r\n    }\r\n    get dataSource() {\r\n        return this._dataSource;\r\n    }\r\n    set dataSource(data) {\r\n        if (data) {\r\n            this._switchDataSource(data);\r\n        }\r\n    }\r\n    /** The setter is used to catch the button if the button has ngIf\r\n     * issue id #91\r\n     */\r\n    set nextBtn(btn) {\r\n        this.listener2 && this.listener2();\r\n        if (btn) {\r\n            this.listener2 = this._renderer.listen(btn.nativeElement, 'click', () => this._carouselScrollOne(1));\r\n        }\r\n    }\r\n    /** The setter is used to catch the button if the button has ngIf\r\n     * issue id #91\r\n     */\r\n    set prevBtn(btn) {\r\n        this.listener1 && this.listener1();\r\n        if (btn) {\r\n            this.listener1 = this._renderer.listen(btn.nativeElement, 'click', () => this._carouselScrollOne(0));\r\n        }\r\n    }\r\n    /**\r\n     * Tracking function that will be used to check the differences in data changes. Used similarly\r\n     * to `ngFor` `trackBy` function. Optimize Items operations by identifying a Items based on its data\r\n     * relative to the function to know if a Items should be added/removed/moved.\r\n     * Accepts a function that takes two parameters, `index` and `item`.\r\n     */\r\n    get trackBy() {\r\n        return this._trackByFn;\r\n    }\r\n    set trackBy(fn) {\r\n        if (isDevMode() && fn != null && typeof fn !== 'function' && console && console.warn) {\r\n            console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\r\n        }\r\n        this._trackByFn = fn;\r\n    }\r\n    ngOnInit() {\r\n        this._dataDiffer = this._differs.find([]).create((_i, item) => {\r\n            return this.trackBy ? this.trackBy(_i, item) : item;\r\n        });\r\n    }\r\n    ngDoCheck() {\r\n        this.arrayChanges = this._dataDiffer.diff(this.dataSource);\r\n        if (this.arrayChanges && this._defDirec) {\r\n            this._observeRenderChanges();\r\n        }\r\n    }\r\n    _switchDataSource(dataSource) {\r\n        this._dataSource = dataSource;\r\n        if (this._defDirec) {\r\n            this._observeRenderChanges();\r\n        }\r\n    }\r\n    _observeRenderChanges() {\r\n        let dataStream;\r\n        if (this._dataSource instanceof Observable) {\r\n            dataStream = this._dataSource;\r\n        }\r\n        else if (Array.isArray(this._dataSource)) {\r\n            dataStream = of(this._dataSource);\r\n        }\r\n        if (dataStream) {\r\n            this._dataSubscription = dataStream\r\n                .pipe(takeUntil(this._intervalController$))\r\n                .subscribe(data => {\r\n                this.renderNodeChanges(data);\r\n                this.isLast = false;\r\n            });\r\n        }\r\n    }\r\n    renderNodeChanges(data, viewContainer = this._nodeOutlet.viewContainer) {\r\n        if (!this.arrayChanges)\r\n            return;\r\n        this.arrayChanges.forEachOperation((item, adjustedPreviousIndex, currentIndex) => {\r\n            const node = this._getNodeDef(data[currentIndex], currentIndex);\r\n            if (item.previousIndex == null) {\r\n                const context = new NguCarouselOutletContext(data[currentIndex]);\r\n                context.index = currentIndex;\r\n                viewContainer.createEmbeddedView(node.template, context, currentIndex);\r\n            }\r\n            else if (currentIndex == null) {\r\n                viewContainer.remove(adjustedPreviousIndex);\r\n            }\r\n            else {\r\n                const view = viewContainer.get(adjustedPreviousIndex);\r\n                viewContainer.move(view, currentIndex);\r\n            }\r\n        });\r\n        this._updateItemIndexContext();\r\n        if (this.carousel) {\r\n            this._storeCarouselData();\r\n        }\r\n    }\r\n    /**\r\n     * Updates the index-related context for each row to reflect any changes in the index of the rows,\r\n     * e.g. first/last/even/odd.\r\n     */\r\n    _updateItemIndexContext() {\r\n        const viewContainer = this._nodeOutlet.viewContainer;\r\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\r\n            const viewRef = viewContainer.get(renderIndex);\r\n            const context = viewRef.context;\r\n            context.count = count;\r\n            context.first = renderIndex === 0;\r\n            context.last = renderIndex === count - 1;\r\n            context.even = renderIndex % 2 === 0;\r\n            context.odd = !context.even;\r\n            context.index = renderIndex;\r\n        }\r\n    }\r\n    _getNodeDef(data, i) {\r\n        if (this._defDirec.length === 1) {\r\n            return this._defDirec.first;\r\n        }\r\n        const nodeDef = this._defDirec.find(def => def.when && def.when(i, data)) || this._defaultNodeDef;\r\n        return nodeDef;\r\n    }\r\n    ngAfterViewInit() {\r\n        this.carousel = this._el.nativeElement;\r\n        this._inputValidation();\r\n        this.carouselCssNode = this._createStyleElem();\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this._carouselInterval();\r\n            if (!this.vertical.enabled) {\r\n                this._touch();\r\n            }\r\n            this.listener3 = this._renderer.listen('window', 'resize', event => {\r\n                this._onResizing(event);\r\n            });\r\n            this._onWindowScrolling();\r\n        }\r\n    }\r\n    ngAfterContentInit() {\r\n        this._observeRenderChanges();\r\n        this.cdr.markForCheck();\r\n    }\r\n    _inputValidation() {\r\n        this.inputs.gridBreakpoints = this.inputs.gridBreakpoints ? this.inputs.gridBreakpoints : new Breakpoints();\r\n        if (this.inputs.grid.xl === undefined) {\r\n            this.inputs.grid.xl = this.inputs.grid.lg;\r\n        }\r\n        this.type = this.inputs.grid.all !== 0 ? 'fixed' : 'responsive';\r\n        this.loop = this.inputs.loop || false;\r\n        this.inputs.easing = this.inputs.easing || 'cubic-bezier(0, 0, 0.2, 1)';\r\n        this.touch.active = this.inputs.touch || false;\r\n        this.RTL = this.inputs.RTL ? true : false;\r\n        this.interval = this.inputs.interval || null;\r\n        this.velocity = typeof this.inputs.velocity === 'number' ? this.inputs.velocity : this.velocity;\r\n        if (this.inputs.vertical && this.inputs.vertical.enabled) {\r\n            this.vertical.enabled = this.inputs.vertical.enabled;\r\n            this.vertical.height = this.inputs.vertical.height;\r\n        }\r\n        this.directionSym = this.RTL ? '' : '-';\r\n        this.point =\r\n            this.inputs.point && typeof this.inputs.point.visible !== 'undefined'\r\n                ? this.inputs.point.visible\r\n                : true;\r\n        this._carouselSize();\r\n    }\r\n    ngOnDestroy() {\r\n        this.carouselInt && this.carouselInt.unsubscribe();\r\n        this._intervalController$.unsubscribe();\r\n        this.carouselLoad.complete();\r\n        this.onMove.complete();\r\n        /** remove listeners */\r\n        clearTimeout(this.onScrolling);\r\n        for (let i = 1; i <= 4; i++) {\r\n            const str = `listener${i}`;\r\n            this[str] && this[str]();\r\n        }\r\n    }\r\n    _onResizing(event) {\r\n        clearTimeout(this.onResize);\r\n        this.onResize = setTimeout(() => {\r\n            if (this.deviceWidth !== event.target.outerWidth) {\r\n                this._setStyle(this.nguItemsContainer.nativeElement, 'transition', ``);\r\n                this._storeCarouselData();\r\n            }\r\n        }, 500);\r\n    }\r\n    /** Get Touch input */\r\n    _touch() {\r\n        if (this.inputs.touch) {\r\n            import('hammerjs').then(() => {\r\n                const hammertime = new Hammer(this.touchContainer.nativeElement);\r\n                hammertime.get('pan').set({ direction: Hammer.DIRECTION_HORIZONTAL });\r\n                hammertime.on('panstart', (ev) => {\r\n                    this.carouselWidth = this.nguItemsContainer.nativeElement.offsetWidth;\r\n                    this.touchTransform = this.transform[this.deviceType];\r\n                    this.dexVal = 0;\r\n                    this._setStyle(this.nguItemsContainer.nativeElement, 'transition', '');\r\n                });\r\n                if (this.vertical.enabled) {\r\n                    hammertime.on('panup', (ev) => {\r\n                        this._touchHandling('panleft', ev);\r\n                    });\r\n                    hammertime.on('pandown', (ev) => {\r\n                        this._touchHandling('panright', ev);\r\n                    });\r\n                }\r\n                else {\r\n                    hammertime.on('panleft', (ev) => {\r\n                        this._touchHandling('panleft', ev);\r\n                    });\r\n                    hammertime.on('panright', (ev) => {\r\n                        this._touchHandling('panright', ev);\r\n                    });\r\n                }\r\n                hammertime.on('panend pancancel', (ev) => {\r\n                    if (Math.abs(ev.velocity) >= this.velocity) {\r\n                        this.touch.velocity = ev.velocity;\r\n                        let direc = 0;\r\n                        if (!this.RTL) {\r\n                            direc = this.touch.swipe === 'panright' ? 0 : 1;\r\n                        }\r\n                        else {\r\n                            direc = this.touch.swipe === 'panright' ? 1 : 0;\r\n                        }\r\n                        this._carouselScrollOne(direc);\r\n                    }\r\n                    else {\r\n                        this.dexVal = 0;\r\n                        this._setStyle(this.nguItemsContainer.nativeElement, 'transition', 'transform 324ms cubic-bezier(0, 0, 0.2, 1)');\r\n                        this._setStyle(this.nguItemsContainer.nativeElement, 'transform', '');\r\n                    }\r\n                });\r\n                hammertime.on('hammer.input', ev => {\r\n                    // allow nested touch events to no propagate, this may have other side affects but works for now.\r\n                    // TODO: It is probably better to check the source element of the event and only apply the handle to the correct carousel\r\n                    ev.srcEvent.stopPropagation();\r\n                });\r\n            });\r\n        }\r\n    }\r\n    /** handle touch input */\r\n    _touchHandling(e, ev) {\r\n        // vertical touch events seem to cause to panstart event with an odd delta\r\n        // and a center of {x:0,y:0} so this will ignore them\r\n        if (ev.center.x === 0) {\r\n            return;\r\n        }\r\n        ev = Math.abs(this.vertical.enabled ? ev.deltaY : ev.deltaX);\r\n        let valt = ev - this.dexVal;\r\n        valt =\r\n            this.type === 'responsive'\r\n                ? (Math.abs(ev - this.dexVal) /\r\n                    (this.vertical.enabled ? this.vertical.height : this.carouselWidth)) *\r\n                    100\r\n                : valt;\r\n        this.dexVal = ev;\r\n        this.touch.swipe = e;\r\n        this._setTouchTransfrom(e, valt);\r\n        this._setTransformFromTouch();\r\n    }\r\n    _setTouchTransfrom(e, valt) {\r\n        const condition = this.RTL ? 'panright' : 'panleft';\r\n        this.touchTransform = e === condition ? valt + this.touchTransform : this.touchTransform - valt;\r\n    }\r\n    _setTransformFromTouch() {\r\n        if (this.touchTransform < 0) {\r\n            this.touchTransform = 0;\r\n        }\r\n        const type = this.type === 'responsive' ? '%' : 'px';\r\n        this._setStyle(this.nguItemsContainer.nativeElement, 'transform', this.vertical.enabled\r\n            ? `translate3d(0, ${this.directionSym}${this.touchTransform}${type}, 0)`\r\n            : `translate3d(${this.directionSym}${this.touchTransform}${type}, 0, 0)`);\r\n    }\r\n    /** this fn used to disable the interval when it is not on the viewport */\r\n    _onWindowScrolling() {\r\n        const top = this.carousel.offsetTop;\r\n        const scrollY = window.scrollY;\r\n        const heightt = window.innerHeight;\r\n        const carouselHeight = this.carousel.offsetHeight;\r\n        const isCarouselOnScreen = top <= scrollY + heightt - carouselHeight / 4 && top + carouselHeight / 2 >= scrollY;\r\n        if (isCarouselOnScreen) {\r\n            this._intervalController$.next(1);\r\n        }\r\n        else {\r\n            this._intervalController$.next(0);\r\n        }\r\n    }\r\n    /** store data based on width of the screen for the carousel */\r\n    _storeCarouselData() {\r\n        const breakpoints = this.inputs.gridBreakpoints;\r\n        this.deviceWidth = isPlatformBrowser(this.platformId) ? window.innerWidth : breakpoints.xl;\r\n        this.carouselWidth = this.carouselMain1.nativeElement.offsetWidth;\r\n        if (this.type === 'responsive') {\r\n            this.deviceType =\r\n                this.deviceWidth >= breakpoints.xl\r\n                    ? 'xl'\r\n                    : this.deviceWidth >= breakpoints.lg\r\n                        ? 'lg'\r\n                        : this.deviceWidth >= breakpoints.md\r\n                            ? 'md'\r\n                            : this.deviceWidth >= breakpoints.sm\r\n                                ? 'sm'\r\n                                : 'xs';\r\n            this.items = this.inputs.grid[this.deviceType];\r\n            this.itemWidth = this.carouselWidth / this.items;\r\n        }\r\n        else {\r\n            this.items = Math.trunc(this.carouselWidth / this.inputs.grid.all);\r\n            this.itemWidth = this.inputs.grid.all;\r\n            this.deviceType = 'all';\r\n        }\r\n        this.slideItems = +(this.inputs.slide < this.items ? this.inputs.slide : this.items);\r\n        this.load = this.inputs.load >= this.slideItems ? this.inputs.load : this.slideItems;\r\n        this.speed = this.inputs.speed && this.inputs.speed > -1 ? this.inputs.speed : 400;\r\n        this._carouselPoint();\r\n    }\r\n    /** Used to reset the carousel */\r\n    reset(withOutAnimation) {\r\n        withOutAnimation && (this.withAnim = false);\r\n        this.carouselCssNode.innerHTML = '';\r\n        this.moveTo(0);\r\n        this._carouselPoint();\r\n    }\r\n    /** Init carousel point */\r\n    _carouselPoint() {\r\n        const Nos = this.dataSource.length - (this.items - this.slideItems);\r\n        this.pointIndex = Math.ceil(Nos / this.slideItems);\r\n        const pointers = [];\r\n        if (this.pointIndex > 1 || !this.inputs.point.hideOnSingleSlide) {\r\n            for (let i = 0; i < this.pointIndex; i++) {\r\n                pointers.push(i);\r\n            }\r\n        }\r\n        this.pointNumbers = pointers;\r\n        this._carouselPointActiver();\r\n        if (this.pointIndex <= 1) {\r\n            this._btnBoolean(1, 1);\r\n        }\r\n        else {\r\n            if (this.currentSlide === 0 && !this.loop) {\r\n                this._btnBoolean(1, 0);\r\n            }\r\n            else {\r\n                this._btnBoolean(0, 0);\r\n            }\r\n        }\r\n    }\r\n    /** change the active point in carousel */\r\n    _carouselPointActiver() {\r\n        const i = Math.ceil(this.currentSlide / this.slideItems);\r\n        this.activePoint = i;\r\n        this.cdr.markForCheck();\r\n    }\r\n    /** this function is used to scoll the carousel when point is clicked */\r\n    moveTo(slide, withOutAnimation) {\r\n        // slide = slide - 1;\r\n        withOutAnimation && (this.withAnim = false);\r\n        if (this.activePoint !== slide && slide < this.pointIndex) {\r\n            let slideremains;\r\n            const btns = this.currentSlide < slide ? 1 : 0;\r\n            switch (slide) {\r\n                case 0:\r\n                    this._btnBoolean(1, 0);\r\n                    slideremains = slide * this.slideItems;\r\n                    break;\r\n                case this.pointIndex - 1:\r\n                    this._btnBoolean(0, 1);\r\n                    slideremains = this.dataSource.length - this.items;\r\n                    break;\r\n                default:\r\n                    this._btnBoolean(0, 0);\r\n                    slideremains = slide * this.slideItems;\r\n            }\r\n            this._carouselScrollTwo(btns, slideremains, this.speed);\r\n        }\r\n    }\r\n    /** set the style of the carousel based the inputs data */\r\n    _carouselSize() {\r\n        this.token = this._generateID();\r\n        let dism = '';\r\n        this.styleid = `.${this.token} > .ngucarousel > .ngu-touch-container > .ngucarousel-items`;\r\n        if (this.inputs.custom === 'banner') {\r\n            this._renderer.addClass(this.carousel, 'banner');\r\n        }\r\n        if (this.inputs.animation === 'lazy') {\r\n            dism += `${this.styleid} > .item {transition: transform .6s ease;}`;\r\n        }\r\n        const breakpoints = this.inputs.gridBreakpoints;\r\n        let itemStyle = '';\r\n        if (this.vertical.enabled) {\r\n            const itemWidthXS = `${this.styleid} > .item {height: ${this.vertical.height /\r\n                +this.inputs.grid.xs}px}`;\r\n            const itemWidthSM = `${this.styleid} > .item {height: ${this.vertical.height /\r\n                +this.inputs.grid.sm}px}`;\r\n            const itemWidthMD = `${this.styleid} > .item {height: ${this.vertical.height /\r\n                +this.inputs.grid.md}px}`;\r\n            const itemWidthLG = `${this.styleid} > .item {height: ${this.vertical.height /\r\n                +this.inputs.grid.lg}px}`;\r\n            const itemWidthXL = `${this.styleid} > .item {height: ${this.vertical.height /\r\n                +this.inputs.grid.xl}px}`;\r\n            itemStyle = `@media (max-width:${breakpoints.sm - 1}px){${itemWidthXS}}\r\n                    @media (max-width:${breakpoints.sm}px){${itemWidthSM}}\r\n                    @media (min-width:${breakpoints.md}px){${itemWidthMD}}\r\n                    @media (min-width:${breakpoints.lg}px){${itemWidthLG}}\r\n                    @media (min-width:${breakpoints.xl}px){${itemWidthXL}}`;\r\n        }\r\n        else if (this.type === 'responsive') {\r\n            const itemWidthXS = this.inputs.type === 'mobile'\r\n                ? `${this.styleid} .item {flex: 0 0 ${95 / +this.inputs.grid.xs}%; width: ${95 /\r\n                    +this.inputs.grid.xs}%;}`\r\n                : `${this.styleid} .item {flex: 0 0 ${100 / +this.inputs.grid.xs}%; width: ${100 /\r\n                    +this.inputs.grid.xs}%;}`;\r\n            const itemWidthSM = `${this.styleid} > .item {flex: 0 0 ${100 /\r\n                +this.inputs.grid.sm}%; width: ${100 / +this.inputs.grid.sm}%}`;\r\n            const itemWidthMD = `${this.styleid} > .item {flex: 0 0 ${100 /\r\n                +this.inputs.grid.md}%; width: ${100 / +this.inputs.grid.md}%}`;\r\n            const itemWidthLG = `${this.styleid} > .item {flex: 0 0 ${100 /\r\n                +this.inputs.grid.lg}%; width: ${100 / +this.inputs.grid.lg}%}`;\r\n            const itemWidthXL = `${this.styleid} > .item {flex: 0 0 ${100 /\r\n                +this.inputs.grid.xl}%; width: ${100 / +this.inputs.grid.xl}%}`;\r\n            itemStyle = `@media (max-width:${breakpoints.sm - 1}px){${itemWidthXS}}\r\n                    @media (min-width:${breakpoints.sm}px){${itemWidthSM}}\r\n                    @media (min-width:${breakpoints.md}px){${itemWidthMD}}\r\n                    @media (min-width:${breakpoints.lg}px){${itemWidthLG}}\r\n                    @media (min-width:${breakpoints.xl}px){${itemWidthXL}}`;\r\n        }\r\n        else {\r\n            itemStyle = `${this.styleid} .item {flex: 0 0 ${this.inputs.grid.all}px; width: ${this.inputs.grid.all}px;}`;\r\n        }\r\n        this._renderer.addClass(this.carousel, this.token);\r\n        if (this.vertical.enabled) {\r\n            this._renderer.addClass(this.nguItemsContainer.nativeElement, 'nguvertical');\r\n            this._renderer.setStyle(this.carouselMain1.nativeElement, 'height', `${this.vertical.height}px`);\r\n        }\r\n        // tslint:disable-next-line:no-unused-expression\r\n        this.RTL && !this.vertical.enabled && this._renderer.addClass(this.carousel, 'ngurtl');\r\n        this._createStyleElem(`${dism} ${itemStyle}`);\r\n        this._storeCarouselData();\r\n    }\r\n    /** logic to scroll the carousel step 1 */\r\n    _carouselScrollOne(Btn) {\r\n        let itemSpeed = this.speed;\r\n        let translateXval = 0;\r\n        let currentSlide = 0;\r\n        const touchMove = Math.ceil(this.dexVal / this.itemWidth);\r\n        this._setStyle(this.nguItemsContainer.nativeElement, 'transform', '');\r\n        if (this.pointIndex === 1) {\r\n            return;\r\n        }\r\n        else if (Btn === 0 && ((!this.loop && !this.isFirst) || this.loop)) {\r\n            const currentSlideD = this.currentSlide - this.slideItems;\r\n            const MoveSlide = currentSlideD + this.slideItems;\r\n            this._btnBoolean(0, 1);\r\n            if (this.currentSlide === 0) {\r\n                currentSlide = this.dataSource.length - this.items;\r\n                itemSpeed = 400;\r\n                this._btnBoolean(0, 1);\r\n            }\r\n            else if (this.slideItems >= MoveSlide) {\r\n                currentSlide = translateXval = 0;\r\n                this._btnBoolean(1, 0);\r\n            }\r\n            else {\r\n                this._btnBoolean(0, 0);\r\n                if (touchMove > this.slideItems) {\r\n                    currentSlide = this.currentSlide - touchMove;\r\n                    itemSpeed = 200;\r\n                }\r\n                else {\r\n                    currentSlide = this.currentSlide - this.slideItems;\r\n                }\r\n            }\r\n            this._carouselScrollTwo(Btn, currentSlide, itemSpeed);\r\n        }\r\n        else if (Btn === 1 && ((!this.loop && !this.isLast) || this.loop)) {\r\n            if (this.dataSource.length <= this.currentSlide + this.items + this.slideItems &&\r\n                !this.isLast) {\r\n                currentSlide = this.dataSource.length - this.items;\r\n                this._btnBoolean(0, 1);\r\n            }\r\n            else if (this.isLast) {\r\n                currentSlide = translateXval = 0;\r\n                itemSpeed = 400;\r\n                this._btnBoolean(1, 0);\r\n            }\r\n            else {\r\n                this._btnBoolean(0, 0);\r\n                if (touchMove > this.slideItems) {\r\n                    currentSlide = this.currentSlide + this.slideItems + (touchMove - this.slideItems);\r\n                    itemSpeed = 200;\r\n                }\r\n                else {\r\n                    currentSlide = this.currentSlide + this.slideItems;\r\n                }\r\n            }\r\n            this._carouselScrollTwo(Btn, currentSlide, itemSpeed);\r\n        }\r\n    }\r\n    /** logic to scroll the carousel step 2 */\r\n    _carouselScrollTwo(Btn, currentSlide, itemSpeed) {\r\n        // tslint:disable-next-line:no-unused-expression\r\n        if (this.dexVal !== 0) {\r\n            const val = Math.abs(this.touch.velocity);\r\n            let somt = Math.floor((this.dexVal / val / this.dexVal) * (this.deviceWidth - this.dexVal));\r\n            somt = somt > itemSpeed ? itemSpeed : somt;\r\n            itemSpeed = somt < 200 ? 200 : somt;\r\n            this.dexVal = 0;\r\n        }\r\n        if (this.withAnim) {\r\n            this._setStyle(this.nguItemsContainer.nativeElement, 'transition', `transform ${itemSpeed}ms ${this.inputs.easing}`);\r\n            this.inputs.animation &&\r\n                this._carouselAnimator(Btn, currentSlide + 1, currentSlide + this.items, itemSpeed, Math.abs(this.currentSlide - currentSlide));\r\n        }\r\n        else {\r\n            this._setStyle(this.nguItemsContainer.nativeElement, 'transition', ``);\r\n        }\r\n        this.itemLength = this.dataSource.length;\r\n        this._transformStyle(currentSlide);\r\n        this.currentSlide = currentSlide;\r\n        this.onMove.emit(this);\r\n        this._carouselPointActiver();\r\n        this._carouselLoadTrigger();\r\n        this.withAnim = true;\r\n    }\r\n    /** boolean function for making isFirst and isLast */\r\n    _btnBoolean(first, last) {\r\n        this.isFirst = !!first;\r\n        this.isLast = !!last;\r\n    }\r\n    _transformString(grid, slide) {\r\n        let collect = '';\r\n        collect += `${this.styleid} { transform: translate3d(`;\r\n        if (this.vertical.enabled) {\r\n            this.transform[grid] = (this.vertical.height / this.inputs.grid[grid]) * slide;\r\n            collect += `0, -${this.transform[grid]}px, 0`;\r\n        }\r\n        else {\r\n            this.transform[grid] = (100 / this.inputs.grid[grid]) * slide;\r\n            collect += `${this.directionSym}${this.transform[grid]}%, 0, 0`;\r\n        }\r\n        collect += `); }`;\r\n        return collect;\r\n    }\r\n    /** set the transform style to scroll the carousel  */\r\n    _transformStyle(slide) {\r\n        let slideCss = '';\r\n        if (this.type === 'responsive') {\r\n            const breakpoints = this.inputs.gridBreakpoints;\r\n            slideCss = `@media (max-width: ${breakpoints.sm - 1}px) {${this._transformString('xs', slide)}}\r\n      @media (min-width: ${breakpoints.sm}px) {${this._transformString('sm', slide)} }\r\n      @media (min-width: ${breakpoints.md}px) {${this._transformString('md', slide)} }\r\n      @media (min-width: ${breakpoints.lg}px) {${this._transformString('lg', slide)} }\r\n      @media (min-width: ${breakpoints.xl}px) {${this._transformString('xl', slide)} }`;\r\n        }\r\n        else {\r\n            this.transform.all = this.inputs.grid.all * slide;\r\n            slideCss = `${this.styleid} { transform: translate3d(${this.directionSym}${this.transform.all}px, 0, 0);`;\r\n        }\r\n        this.carouselCssNode.textContent = slideCss;\r\n    }\r\n    /** this will trigger the carousel to load the items */\r\n    _carouselLoadTrigger() {\r\n        if (typeof this.inputs.load === 'number') {\r\n            this.dataSource.length - this.load <= this.currentSlide + this.items &&\r\n                this.carouselLoad.emit(this.currentSlide);\r\n        }\r\n    }\r\n    /** generate Class for each carousel to set specific style */\r\n    _generateID() {\r\n        let text = '';\r\n        const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n        for (let i = 0; i < 6; i++) {\r\n            text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n        }\r\n        return `ngucarousel${text}`;\r\n    }\r\n    /** handle the auto slide */\r\n    _carouselInterval() {\r\n        const container = this.carouselMain1.nativeElement;\r\n        if (this.interval && this.loop) {\r\n            this.listener4 = this._renderer.listen('window', 'scroll', () => {\r\n                clearTimeout(this.onScrolling);\r\n                this.onScrolling = setTimeout(() => {\r\n                    this._onWindowScrolling();\r\n                }, 600);\r\n            });\r\n            const play$ = fromEvent(container, 'mouseleave').pipe(mapTo(1));\r\n            const pause$ = fromEvent(container, 'mouseenter').pipe(mapTo(0));\r\n            const touchPlay$ = fromEvent(container, 'touchstart').pipe(mapTo(1));\r\n            const touchPause$ = fromEvent(container, 'touchend').pipe(mapTo(0));\r\n            const interval$ = interval(this.inputs.interval.timing).pipe(mapTo(1));\r\n            setTimeout(() => {\r\n                this.carouselInt = merge(play$, touchPlay$, pause$, touchPause$, this._intervalController$)\r\n                    .pipe(startWith(1), switchMap(val => {\r\n                    this.isHovered = !val;\r\n                    this.cdr.markForCheck();\r\n                    return val ? interval$ : EMPTY;\r\n                }))\r\n                    .subscribe(res => {\r\n                    this._carouselScrollOne(1);\r\n                });\r\n            }, this.interval.initialDelay);\r\n        }\r\n    }\r\n    _updateItemIndexContextAni() {\r\n        const viewContainer = this._nodeOutlet.viewContainer;\r\n        for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\r\n            const viewRef = viewContainer.get(renderIndex);\r\n            const context = viewRef.context;\r\n            context.count = count;\r\n            context.first = renderIndex === 0;\r\n            context.last = renderIndex === count - 1;\r\n            context.even = renderIndex % 2 === 0;\r\n            context.odd = !context.even;\r\n            context.index = renderIndex;\r\n        }\r\n    }\r\n    /** animate the carousel items */\r\n    _carouselAnimator(direction, start, end, speed, length, viewContainer = this._nodeOutlet.viewContainer) {\r\n        let val = length < 5 ? length : 5;\r\n        val = val === 1 ? 3 : val;\r\n        const collectIndex = [];\r\n        if (direction === 1) {\r\n            for (let i = start - 1; i < end; i++) {\r\n                collectIndex.push(i);\r\n                val = val * 2;\r\n                const viewRef = viewContainer.get(i);\r\n                const context = viewRef.context;\r\n                context.animate = { value: true, params: { distance: val } };\r\n            }\r\n        }\r\n        else {\r\n            for (let i = end - 1; i >= start - 1; i--) {\r\n                collectIndex.push(i);\r\n                val = val * 2;\r\n                const viewRef = viewContainer.get(i);\r\n                const context = viewRef.context;\r\n                context.animate = { value: true, params: { distance: -val } };\r\n            }\r\n        }\r\n        this.cdr.markForCheck();\r\n        setTimeout(() => {\r\n            this._removeAnimations(collectIndex);\r\n        }, speed * 0.7);\r\n    }\r\n    _removeAnimations(indexs) {\r\n        const viewContainer = this._nodeOutlet.viewContainer;\r\n        indexs.forEach(i => {\r\n            const viewRef = viewContainer.get(i);\r\n            const context = viewRef.context;\r\n            context.animate = { value: false, params: { distance: 0 } };\r\n        });\r\n        this.cdr.markForCheck();\r\n    }\r\n    /** Short form for setElementStyle */\r\n    _setStyle(el, prop, val) {\r\n        this._renderer.setStyle(el, prop, val);\r\n    }\r\n    /** For generating style tag */\r\n    _createStyleElem(datas) {\r\n        const styleItem = this._renderer.createElement('style');\r\n        if (datas) {\r\n            const styleText = this._renderer.createText(datas);\r\n            this._renderer.appendChild(styleItem, styleText);\r\n        }\r\n        this._renderer.appendChild(this.carousel, styleItem);\r\n        return styleItem;\r\n    }\r\n}\nNguCarousel.ɵfac = function NguCarousel_Factory(t) { return new (t || NguCarousel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nNguCarousel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NguCarousel, selectors: [[\"ngu-carousel\"]], contentQueries: function NguCarousel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NguCarouselNextDirective, 1, ElementRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NguCarouselPrevDirective, 1, ElementRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NguCarouselDefDirective, 0);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nextBtn = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.prevBtn = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._defDirec = _t);\n    } }, viewQuery: function NguCarousel_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(NguCarouselOutlet, 3);\n        ɵngcc0.ɵɵviewQuery(_c0, 3, ElementRef);\n        ɵngcc0.ɵɵviewQuery(_c1, 3, ElementRef);\n        ɵngcc0.ɵɵviewQuery(_c2, 3, ElementRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nodeOutlet = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.carouselMain1 = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.nguItemsContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.touchContainer = _t.first);\n    } }, inputs: { dataSource: \"dataSource\", trackBy: \"trackBy\", inputs: \"inputs\" }, outputs: { carouselLoad: \"carouselLoad\", onMove: \"onMove\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c4, decls: 11, vars: 0, consts: [[1, \"ngucarousel\"], [\"ngucarousel\", \"\"], [1, \"ngu-touch-container\"], [\"touchContainer\", \"\"], [1, \"ngucarousel-items\"], [\"nguItemsContainer\", \"\"], [\"nguCarouselOutlet\", \"\"], [1, \"nguclearFix\"]], template: function NguCarousel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c3);\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementStart(3, \"div\", 2, 3);\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4, 5);\n        ɵngcc0.ɵɵelementContainer(7, 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(8, \"div\", 7);\n        ɵngcc0.ɵɵprojection(9, 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(10, 2);\n    } }, directives: [NguCarouselOutlet], styles: [\"[_nghost-%COMP%]{display:block;position:relative}.ngurtl[_nghost-%COMP%]{direction:rtl}.ngucarousel[_ngcontent-%COMP%]{height:100%;overflow:hidden;position:relative}.ngucarousel[_ngcontent-%COMP%]   .ngucarousel-items[_ngcontent-%COMP%]{display:flex;height:100%;position:relative}.nguvertical[_ngcontent-%COMP%]{flex-direction:column}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]{bottom:20px;position:absolute;width:100%}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{background:hsla(0,0%,100%,.55)}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%]{background:#fff}.banner[_ngcontent-%COMP%]   .ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{cursor:pointer}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]{box-sizing:border-box;list-style-type:none;margin:0;overflow:auto;padding:12px;text-align:center;white-space:nowrap}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]{background:rgba(0,0,0,.55);border-radius:50%;display:inline-block;margin:0 4px;padding:4px;transition:.4s;transition-timing-function:cubic-bezier(.17,.67,.83,.67)}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%]{background:#6b6b6b;transform:scale(1.8)}.ngucarouselPointDefault[_ngcontent-%COMP%]   .ngucarouselPoint[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover{cursor:pointer}.nguclearFix[_ngcontent-%COMP%]{clear:both}\"], changeDetection: 0 });\r\nNguCarousel.ctorParameters = () => [\r\n    { type: ElementRef },\r\n    { type: Renderer2 },\r\n    { type: IterableDiffers },\r\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\r\n    { type: ChangeDetectorRef }\r\n];\r\nNguCarousel.propDecorators = {\r\n    inputs: [{ type: Input }],\r\n    carouselLoad: [{ type: Output }],\r\n    onMove: [{ type: Output }],\r\n    dataSource: [{ type: Input, args: ['dataSource',] }],\r\n    _defDirec: [{ type: ContentChildren, args: [NguCarouselDefDirective,] }],\r\n    _nodeOutlet: [{ type: ViewChild, args: [NguCarouselOutlet, { static: true },] }],\r\n    nextBtn: [{ type: ContentChild, args: [NguCarouselNextDirective, /* TODO: add static flag */ { read: ElementRef },] }],\r\n    prevBtn: [{ type: ContentChild, args: [NguCarouselPrevDirective, /* TODO: add static flag */ { read: ElementRef },] }],\r\n    carouselMain1: [{ type: ViewChild, args: ['ngucarousel', { read: ElementRef, static: true },] }],\r\n    nguItemsContainer: [{ type: ViewChild, args: ['nguItemsContainer', { read: ElementRef, static: true },] }],\r\n    touchContainer: [{ type: ViewChild, args: ['touchContainer', { read: ElementRef, static: true },] }],\r\n    trackBy: [{ type: Input }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarousel, [{\n        type: Component,\n        args: [{\n                selector: 'ngu-carousel',\n                template: \"<div #ngucarousel class=\\\"ngucarousel\\\">\\r\\n  <ng-content select=\\\"[NguCarouselPrev]\\\"></ng-content>\\r\\n  <div #touchContainer class=\\\"ngu-touch-container\\\">\\r\\n    <div #nguItemsContainer class=\\\"ngucarousel-items\\\">\\r\\n      <ng-container nguCarouselOutlet></ng-container>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"nguclearFix\\\"></div>\\r\\n  <ng-content select=\\\"[NguCarouselNext]\\\"></ng-content>\\r\\n</div>\\r\\n<ng-content select=\\\"[NguCarouselPoint]\\\"></ng-content>\\r\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\":host{display:block;position:relative}:host.ngurtl{direction:rtl}.ngucarousel{height:100%;overflow:hidden;position:relative}.ngucarousel .ngucarousel-items{display:flex;height:100%;position:relative}.nguvertical{flex-direction:column}.banner .ngucarouselPointDefault .ngucarouselPoint{bottom:20px;position:absolute;width:100%}.banner .ngucarouselPointDefault .ngucarouselPoint li{background:hsla(0,0%,100%,.55)}.banner .ngucarouselPointDefault .ngucarouselPoint li.active{background:#fff}.banner .ngucarouselPointDefault .ngucarouselPoint li:hover{cursor:pointer}.ngucarouselPointDefault .ngucarouselPoint{box-sizing:border-box;list-style-type:none;margin:0;overflow:auto;padding:12px;text-align:center;white-space:nowrap}.ngucarouselPointDefault .ngucarouselPoint li{background:rgba(0,0,0,.55);border-radius:50%;display:inline-block;margin:0 4px;padding:4px;transition:.4s;transition-timing-function:cubic-bezier(.17,.67,.83,.67)}.ngucarouselPointDefault .ngucarouselPoint li.active{background:#6b6b6b;transform:scale(1.8)}.ngucarouselPointDefault .ngucarouselPoint li:hover{cursor:pointer}.nguclearFix{clear:both}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.IterableDiffers }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { carouselLoad: [{\n            type: Output\n        }], onMove: [{\n            type: Output\n        }], dataSource: [{\n            type: Input,\n            args: ['dataSource']\n        }], nextBtn: [{\n            type: ContentChild,\n            args: [NguCarouselNextDirective, /* TODO: add static flag */ { read: ElementRef }]\n        }], prevBtn: [{\n            type: ContentChild,\n            args: [NguCarouselPrevDirective, /* TODO: add static flag */ { read: ElementRef }]\n        }], trackBy: [{\n            type: Input\n        }], inputs: [{\n            type: Input\n        }], _defDirec: [{\n            type: ContentChildren,\n            args: [NguCarouselDefDirective]\n        }], _nodeOutlet: [{\n            type: ViewChild,\n            args: [NguCarouselOutlet, { static: true }]\n        }], carouselMain1: [{\n            type: ViewChild,\n            args: ['ngucarousel', { read: ElementRef, static: true }]\n        }], nguItemsContainer: [{\n            type: ViewChild,\n            args: ['nguItemsContainer', { read: ElementRef, static: true }]\n        }], touchContainer: [{\n            type: ViewChild,\n            args: ['touchContainer', { read: ElementRef, static: true }]\n        }] }); })();\n\nclass NguItemComponent {\r\n    constructor() {\r\n        this.classes = true;\r\n    }\r\n}\nNguItemComponent.ɵfac = function NguItemComponent_Factory(t) { return new (t || NguItemComponent)(); };\nNguItemComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NguItemComponent, selectors: [[\"ngu-item\"]], hostVars: 2, hostBindings: function NguItemComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"item\", ctx.classes);\n    } }, ngContentSelectors: _c5, decls: 1, vars: 0, template: function NguItemComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\"\"] });\r\nNguItemComponent.propDecorators = {\r\n    classes: [{ type: HostBinding, args: ['class.item',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguItemComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngu-item',\n                template: \"<ng-content></ng-content>\\r\\n\",\n                styles: [\"\"]\n            }]\n    }], function () { return []; }, { classes: [{\n            type: HostBinding,\n            args: ['class.item']\n        }] }); })();\n\nclass NguTileComponent {\r\n    constructor() {\r\n        this.classes = true;\r\n    }\r\n}\nNguTileComponent.ɵfac = function NguTileComponent_Factory(t) { return new (t || NguTileComponent)(); };\nNguTileComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NguTileComponent, selectors: [[\"ngu-tile\"]], hostVars: 2, hostBindings: function NguTileComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"item\", ctx.classes);\n    } }, ngContentSelectors: _c5, decls: 2, vars: 0, consts: [[1, \"tile\"]], template: function NguTileComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"[_nghost-%COMP%]{box-sizing:border-box;padding:10px}.tile[_ngcontent-%COMP%]{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}\"] });\r\nNguTileComponent.propDecorators = {\r\n    classes: [{ type: HostBinding, args: ['class.item',] }]\r\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguTileComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngu-tile',\n                template: \"<div class=\\\"tile\\\">\\r\\n  <ng-content></ng-content>\\r\\n</div>\\r\\n\",\n                styles: [\":host{box-sizing:border-box;padding:10px}.tile{box-shadow:0 2px 5px 0 rgba(0,0,0,.16),0 2px 10px 0 rgba(0,0,0,.12)}\"]\n            }]\n    }], function () { return []; }, { classes: [{\n            type: HostBinding,\n            args: ['class.item']\n        }] }); })();\n\nclass NguCarouselModule {\r\n}\nNguCarouselModule.ɵfac = function NguCarouselModule_Factory(t) { return new (t || NguCarouselModule)(); };\nNguCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NguCarouselModule });\nNguCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NguCarouselModule, { declarations: function () { return [NguCarousel, NguItemComponent, NguTileComponent, NguCarouselPointDirective, NguCarouselItemDirective, NguCarouselNextDirective, NguCarouselPrevDirective, NguCarouselDefDirective, NguCarouselOutlet]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NguCarousel, NguItemComponent, NguTileComponent, NguCarouselPointDirective, NguCarouselItemDirective, NguCarouselNextDirective, NguCarouselPrevDirective, NguCarouselDefDirective, NguCarouselOutlet]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NguCarouselModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                exports: [\n                    NguCarousel,\n                    NguItemComponent,\n                    NguTileComponent,\n                    NguCarouselPointDirective,\n                    NguCarouselItemDirective,\n                    NguCarouselNextDirective,\n                    NguCarouselPrevDirective,\n                    NguCarouselDefDirective,\n                    NguCarouselOutlet\n                ],\n                declarations: [\n                    NguCarousel,\n                    NguItemComponent,\n                    NguTileComponent,\n                    NguCarouselPointDirective,\n                    NguCarouselItemDirective,\n                    NguCarouselNextDirective,\n                    NguCarouselPrevDirective,\n                    NguCarouselDefDirective,\n                    NguCarouselOutlet\n                ]\n            }]\n    }], null, null); })();\n\n/*\r\n * Public API Surface of carousel\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { NguCarousel, NguCarouselConfig, NguCarouselDefDirective, NguCarouselItemDirective, NguCarouselModule, NguCarouselNextDirective, NguCarouselOutlet, NguCarouselPointDirective, NguCarouselPrevDirective, NguCarouselStore, NguItemComponent, NguTileComponent, ItemsControl as ɵa, NguButton as ɵb };\n\n//# sourceMappingURL=ngu-carousel.js.map","import { Overlay } from '@angular/cdk/overlay';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport {BehaviorSubject, Observable, Subject} from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { Employee, EmployeeService } from 'src/app/core';\r\nimport { CoreService } from 'src/app/core/services/core.service';\r\nimport { EmployeeEditorDialogComponent } from '../../components/employee-editor-dialog/employee-editor-dialog.component';\r\nimport {MockEmployee} from '../../../core/mock/mockEmployee';\r\nimport {MockEmployeeList} from '../../../core/mock/mockEmployeeList';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'crm-employee-detail',\r\n  templateUrl: './employee-detail.component.html',\r\n  styleUrls: ['./employee-detail.component.scss']\r\n})\r\nexport class EmployeeDetailComponent implements OnInit {\r\n  displayModal: boolean;\r\n\r\n  employee$: Observable<Employee>;\r\n  loading$: Subject<boolean> = new BehaviorSubject<boolean>(true);\r\n\r\n  employees$: Observable<Employee[]>;\r\n\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private router: Router, private employeeService: EmployeeService, private coreService: CoreService,\r\n              private dialog: MatDialog, private overlay: Overlay) {\r\n    this.displayModal = false;\r\n    this.loading$.next(true);\r\n    this.employees$ = this.employeeService.getEmployees();\r\n\r\n    this.employee$ = this.route.paramMap.pipe(\r\n       switchMap(params => this.employeeService.getEmployee(params.get('id')!)),\r\n      );\r\n    this.employee$.subscribe(() => this.loading$.next(false));\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  getLoading(): Observable<boolean> {\r\n    return this.loading$;\r\n  }\r\n\r\n  // tslint:disable-next-line:typedef\r\n  handleUpdate(empl: Employee) {\r\n    const dialogRef = this.dialog.open(EmployeeEditorDialogComponent, {\r\n      width: '800px',\r\n      height: 'auto',\r\n      disableClose: true,\r\n      autoFocus: true,\r\n      scrollStrategy: this.overlay.scrollStrategies.noop(),\r\n      data: empl\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n      if (result) {\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n    showModalDialog() {\r\n        this.displayModal = true;\r\n    }\r\n\r\n  showEmpInformation(id: string) {\r\n\r\n  }\r\n\r\n  updateProfile() {\r\n    // @ts-ignore\r\n    const fullname: string = document.getElementById(\"fullname\").value;\r\n    const emp: Employee = {\r\n      id: '7',\r\n      fullName: fullname\r\n    }\r\n    alert(JSON.stringify(emp, null, 2));\r\n    //this.employee$ = this.route.paramMap.pipe(\r\n    //    switchMap(params => this.employeeService.updateEmployee(params.get('id')!, emp)),\r\n    //);\r\n  }\r\n}\r\n","\r\n\r\n<p-card>\r\n    <!--<p-progressSpinner class=\"progress-spinner\" *ngIf=\"(loading$)\"></p-progressSpinner>-->\r\n    <p-dialog header=\"View Employee Personal Information\" [(visible)]=\"displayModal\"\r\n              [modal]=\"true\" [style]=\"{width: '90vw'}\"\r\n              [baseZIndex]=\"10000\"\r\n              [draggable]=\"false\" [resizable]=\"false\">\r\n        <ng-container *ngrxLet=\"employee$ as employee\" class=\"p-m-0\">\r\n            <p-card>\r\n                <div class=\"p-fluid\">\r\n                    <h3 style=\"color: #0066c0; font-weight: bold;\">Personal Information</h3>\r\n                    <div class=\"p-col-12 p-d-flex\">\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"fullname\"\r\n                                       class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Full Name</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input value=\"{{employee.fullName}}\"\r\n                                           id=\"fullname\" type=\"text\" pInputText>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"vnfullname\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">VN Name</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"vnfullname\" value=\"N/A\"\r\n                                           type=\"text\" pInputText [readOnly]=\"true\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"dob\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Date of Birth</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"dob\" pInputText type=\"text\"\r\n                                           value=\"{{employee.birthDay | date:'dd/MM/yyyy'}}\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"p-col-12 p-d-flex\">\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"placeOfBirth\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Place of Birth</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"placeOfBirth\" type=\"text\" pInputText\r\n                                           value=\"{{employee.placeOfBirth}}\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"vnPlaceOfBirth\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">VN Place of Birth</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"vnPlaceOfBirth\" type=\"text\" pInputText\r\n                                           value=\"N/A\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"placeOfOrigin\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Place of Origin</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"placeOfOrigin\" type=\"text\" pInputText\r\n                                           value=\"N/A\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"p-col-12 p-d-flex\">\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"vnPlaceOfOrigin\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">VN Place of Origin</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"vnPlaceOfOrigin\" type=\"text\" pInputText\r\n                                           value=\"N/A\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"nationality\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Nationality</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"nationality\" type=\"text\" pInputText\r\n                                           value=\"N/A\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"issueLocation\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">VN Place of Birth</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"issueLocation\" type=\"text\" pInputText\r\n                                           value=\"N/A\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"p-col-12 p-d-flex\">\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"gender\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Gender</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"gender\" type=\"text\" pInputText\r\n                                           value=\"{{employee.gender}}\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"degree\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Degree</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"degree\" type=\"text\" pInputText\r\n                                           value=\"{{employee.degree}}\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"placeOfOrigin\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Other Degree</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"otherDegree\" type=\"text\" pInputText\r\n                                           value=\"N/A\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"p-col-12 p-d-flex\">\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"idNumber\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">ID Number</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"idNumber\" type=\"text\" pInputText\r\n                                           value=\"{{employee.idNumber}}\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"p-col-4\">\r\n                            <div class=\"p-field p-grid\">\r\n                                <label for=\"issueDate\" class=\"p-col-12 p-mb-2 p-md-2 p-mb-md-0\">Issue Date</label>\r\n                                <div class=\"p-col-12 p-md-10\">\r\n                                    <input id=\"issueDate\" type=\"text\" pInputText\r\n                                           value=\"{{employee.issueDate | date:'dd/MM/yyyy'}}\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </p-card>\r\n\r\n        </ng-container>\r\n        <ng-template pTemplate=\"footer\">\r\n            <p-button icon=\"pi pi-check\" (click)=\"updateProfile()\" label=\"Update Profile\"\r\n                      styleClass=\"p-button-text\"></p-button>\r\n        </ng-template>\r\n    </p-dialog>\r\n\r\n    <div *ngIf=\"!(employee$ | async)\">\r\n        <h3 class=\"p-mb-3\" style=\"color:red;\">The server is occurred an error! Please try again later!</h3>\r\n        <div class=\"p-d-flex\">\r\n            <p-card class=\"p-mr-3\">\r\n                <h3><i style=\"font-size: 2.5rem;\" class=\"pi pi-user\"></i></h3>\r\n                <h3 class=\"p-card-content\"><b>View personal profile detail</b></h3>\r\n            </p-card>\r\n\r\n            <p-card class=\"p-mr-3\">\r\n                <h3><i style=\"font-size: 2.5rem;\" class=\"pi pi-briefcase\"></i></h3>\r\n\r\n                <h3 class=\"p-card-content\"><b>View my resume</b></h3>\r\n            </p-card>\r\n        </div>\r\n    </div>\r\n    <div>\r\n        <div class=\"p-flex-row\">\r\n            <div class=\"p-mr-auto\">\r\n                <h1>Employee Profile Detail</h1>\r\n            </div>\r\n            <div class=\"p-mr-auto\">\r\n                <button pButton (click)=\"showModalDialog()\"\r\n                        class=\"p-button-success p-button-sm\"\r\n                        icon=\"pi pi-pencil\" label=\"Edit profile\"></button>\r\n            </div>\r\n        </div>\r\n        <ng-container *ngrxLet=\"employee$ as employee\">\r\n            <div class=\"p-d-flex p-flex-column p-flex-md-row\">\r\n                <p-table class=\"p-mb-2 p-mr-2\" [value]=\"[employee]\">\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th class=\"stiky-column\" style=\"font-family: sans-serif; color: #0066c0\">\r\n                                <b>Personal Information</b>\r\n                            </th>\r\n                            <th class=\"stiky-column\"></th>\r\n                            <th class=\"stiky-column\"></th>\r\n                            <th class=\"stiky-column\"></th>\r\n                            <th class=\"stiky-column\"></th>\r\n                            <th class=\"stiky-column\"></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-emp>\r\n                        <tr>\r\n                            <td>Full Name</td>\r\n                            <td class=\"emp-table-row-title-value\">\r\n                                <p-tag value=\"{{emp.fullName}}\" severity=\"info\"></p-tag>\r\n                            </td>\r\n\r\n                            <td>VN Name</td>\r\n                            <td class=\"emp-table-row-title-value\">\r\n                                <p-tag value=\"N/A\" severity=\"info\"></p-tag>\r\n                            </td>\r\n\r\n                            <td>Date of Birth</td>\r\n                            <td class=\"emp-table-row-title-value\">\r\n                                <p-tag value=\"{{emp.birthDay | date:'dd/MM/yyyy'}}\" severity=\"info\"></p-tag>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Place of Birth</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.placeOfBirth}}</td>\r\n\r\n                            <td>VN Place of Birth</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n\r\n                            <td>Place of Origin</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>VN Place of Origin</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n\r\n                            <td>Nationality</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n\r\n                            <td>Gender</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.gender}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Degree</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.degree}}</td>\r\n\r\n                            <td>Other Degree</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n\r\n                            <td>ID Number</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Issue Date</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.issueDate | date:'dd/MM/yyyy'}}</td>\r\n\r\n                            <td>Issue Location</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n\r\n                            <td>VN Issue Location</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Race</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.race}}</td>\r\n\r\n                            <td>Religion</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.religion}}</td>\r\n\r\n                            <td>Current Status</td>\r\n                            <td class=\"emp-table-row-title-value\">\r\n                                <p-tag value=\"Contracted\" severity=\"success\"></p-tag>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Married Status</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.marriedStatus}}</td>\r\n\r\n                            <td>Major</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.major}}</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <div class=\"p-mb-2 p-mr-2\">\r\n                    <td style=\"width: 120px; height: 120px;\"><img src=\"{{employee.image}}\" alt=\"\"/>\r\n                    </td>\r\n\r\n                </div>\r\n            </div>\r\n            <div class=\"p-d-flex p-flex-column p-flex-md-row\">\r\n\r\n                <p-table class=\"p-mb-2 p-mr-2\" [value]=\"[employee]\">\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th class=\"p-mb-auto\"\r\n                                style=\"font-family: sans-serif; color: #0066c0\">At Company\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-emp>\r\n                        <tr>\r\n                            <td>Employee ID</td>\r\n                            <td class=\"emp-table-row-title-value\" style=\"color: green\">\r\n                                <p-tag value=\"{{emp.employeeID}}\" severity=\"success\"></p-tag>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Start Date</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.placeOfBirth}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Contracted Date</td>\r\n                            <td class=\"emp-table-row-title-value\">\r\n                                <p-tag value=\"{{emp.contractedDate | date:'dd/MM/yyyy'}}\" severity=\"success\">\r\n\r\n                                </p-tag>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Department</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.department}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Job Title</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.jobTitle}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Tax ID</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.taxID}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Issue Date</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.issueDate | date:'dd/MM/yyyy'}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Insurance Book No</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.insuranceBookNo}}</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <p-table class=\"p-mb-2 p-mr-2\" [value]=\"[employee]\">\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th class=\"p-mb-auto\"\r\n                                style=\"font-family: sans-serif; color: #0066c0\">Contact\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-emp>\r\n                        <tr>\r\n                            <td>Home Phone</td>\r\n                            <td class=\"emp-table-row-title-value\">\r\n                                N/A\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Cell Phone</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.cellPhone}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Floor</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Ext Number</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Personal Email</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Office Email</td>\r\n                            <td class=\"emp-table-row-title-value\">N/A</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n                <p-table class=\"p-mb-2 p-mr-2\" [value]=\"[employee]\">\r\n                    <ng-template pTemplate=\"header\">\r\n                        <tr>\r\n                            <th class=\"p-mb-auto\"\r\n                                style=\"font-family: sans-serif; color: #0066c0\">Bank Account\r\n                            </th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </ng-template>\r\n                    <ng-template pTemplate=\"body\" let-emp>\r\n                        <tr>\r\n                            <td>Bank Name</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.bankName}}</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Bank Account</td>\r\n                            <td class=\"emp-table-row-title-value\">{{emp.bankAccount}}</td>\r\n                        </tr>\r\n                    </ng-template>\r\n                </p-table>\r\n            </div>\r\n\r\n        </ng-container>\r\n    </div>\r\n    <!--<ng-container *ngIf=\"employee$|async as empl\">\r\n      <p-button label=\"Update\" (onClick)=\"handleUpdate(empl)\"></p-button>\r\n\r\n    <ng-template pTemplate=\"body\" let-department>\r\n\r\n    </ng-template>\r\n      <div class=\"s-container\">\r\n        <div>Name: {{empl.name}} fgds</div>\r\n      </div>\r\n\r\n    </ng-container>-->\r\n\r\n\r\n</p-card>\r\n<crm-footer></crm-footer>","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared';\r\nimport { EmployeeRoutingModule } from './employee-routing.module';\r\nimport { NguCarouselModule } from '@ngu/carousel';\r\nimport { EmployeeDetailComponent } from './pages/employee-detail/employee-detail.component';\r\nimport { EmployeeEditorDialogComponent } from './components/employee-editor-dialog/employee-editor-dialog.component';\r\nimport {TableModule} from \"primeng/table\";\r\nimport {ReactiveComponentModule} from \"@ngrx/component\";\r\nimport {ProgressSpinnerModule} from \"primeng/progressspinner\";\r\nimport {BreadcrumbModule} from \"primeng/breadcrumb\";\r\nimport {CardModule} from \"primeng/card\";\r\nimport {TagModule} from \"primeng/tag\";\r\nimport {DialogModule} from \"primeng/dialog\";\r\nimport {FieldsetModule} from \"primeng/fieldset\";\r\nimport {InputText, InputTextModule} from \"primeng/inputtext\";\r\nimport {CalendarModule} from \"primeng/calendar\";\r\nimport { EmployeeHomeComponent } from './components/employee-home/employee-home.component';\r\n\r\n@NgModule({\r\n  declarations: [EmployeeDetailComponent, EmployeeEditorDialogComponent, EmployeeHomeComponent],\r\n    imports: [\r\n        SharedModule,\r\n        EmployeeRoutingModule,\r\n        NguCarouselModule,\r\n        TableModule,\r\n        ReactiveComponentModule,\r\n        ProgressSpinnerModule,\r\n        BreadcrumbModule,\r\n        CardModule,\r\n        TagModule,\r\n        DialogModule,\r\n        InputTextModule,\r\n        CalendarModule,\r\n\r\n    ],\r\n  entryComponents: [\r\n    EmployeeEditorDialogComponent\r\n  ]\r\n})\r\nexport class EmployeeModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'crm-employee-home',\r\n  templateUrl: './employee-home.component.html',\r\n  styleUrls: ['./employee-home.component.scss']\r\n})\r\nexport class EmployeeHomeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}