{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/pages/signup/signup.component.ts","./src/app/auth/pages/signup/signup.component.html","./src/app/auth/CustomErrorStateMatcher.ts","./src/app/auth/pages/signin/signin.component.ts","./src/app/auth/pages/signin/signin.component.html","./src/app/auth/pages/auth.component.ts","./src/app/auth/pages/auth.component.html","./node_modules/primeng/__ivy_ngcc__/fesm2015/primeng-autocomplete.js","./src/app/auth/auth.module.ts","./src/app/auth/pages/index.ts","./src/app/auth/pages/reset-pwd/reset-pwd.component.ts","./src/app/auth/pages/reset-pwd/reset-pwd.component.html","./node_modules/ng-recaptcha/__ivy_ngcc__/fesm2015/ng-recaptcha.js","./src/app/auth/pages/forgot-pwd/forgot-pwd.component.ts","./src/app/auth/pages/forgot-pwd/forgot-pwd.component.html"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACK;AACqD;;;AAEjH,MAAM,UAAU,GAAW;IACvB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oDAAa;QACxB,QAAQ,EAAE;YACN,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sDAAe,EAAE,WAAW,EAAE,CAAC,wDAAW,CAAC,EAAC;YACzE,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,sDAAe,EAAE,WAAW,EAAE,CAAC,wDAAW,CAAC,EAAC;YACzE,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,yDAAkB,EAAE,WAAW,EAAE,CAAC,wDAAW,CAAC,EAAC;YAC/E,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,wDAAiB,EAAE,WAAW,EAAE,CAAC,0DAAa,CAAC,EAAC;YAC/E,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,QAAQ,EAAE,SAAS,EAAE,MAAM,EAAC;SACvD;KACJ;CACJ,CAAC;AAUK,MAAM,iBAAiB;;kFAAjB,iBAAiB;gGAAjB,iBAAiB;oGAPnB;YACP,4DAAY,CAAC,QAAQ,CAAC,UAAU,CAAC;SAClC,EAEC,4DAAY;mIAGH,iBAAiB,uFAH1B,4DAAY;;;;;;;;;;;;;ACvBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmG;AAG3B;AACrB;;;;;;;;;;AAU5C,MAAM,eAAe;IAM1B,YAAoB,EAAe,EACzB,MAAc,EACd,WAAwB,EACxB,aAA4B;QAHlB,OAAE,GAAF,EAAE,CAAa;QACzB,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,kBAAa,GAAb,aAAa,CAAe;QAPtC,YAAO,GAAY,KAAK,CAAC;QASrB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9D,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACxC,IAAI,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAClC,EAAE;YACD,SAAS,EAAE,IAAI,CAAC,0BAA0B,CAAC,UAAU,EAAE,iBAAiB,CAAC;SAC1E,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,IAAI,gFAAuB,EAAE,CAAC;IACjD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;IACnC,CAAC;IAED,QAAQ,CAAC,eAAuB;QAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,OAAO,CAAC,GAAG,CAAC,4BAA4B,eAAe,EAAE,CAAC,CAAC;IAE7D,CAAC;IAED,SAAS;QACP,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAG5C,0BAA0B,CAAC,WAAmB,EAAE,mBAA2B;QACzE,OAAO,CAAC,SAAoB,EAAE,EAAE;YAC5B,MAAM,OAAO,GAAG,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;YAChD,MAAM,eAAe,GAAG,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;YAChE,IAAI,eAAe,CAAC,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,kBAAkB,EAAE;gBACtE,OAAO;aACV;YACD,IAAI,OAAO,CAAC,KAAK,KAAK,eAAe,CAAC,KAAK,EAAE;gBACzC,eAAe,CAAC,SAAS,CAAC,EAAE,kBAAkB,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3D;iBAAM;gBACH,eAAe,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aACnC;QACL,CAAC;IACL,CAAC;IAGC,QAAQ;QACN,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;aAC3C,SAAS,CACR,IAAI,CAAC,EAAE;YACL,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAC9C,CAAC,CACF;IACL,CAAC;;8EAhEU,eAAe;+FAAf,eAAe,2GAFf,CAAC,0DAAc,CAAC;QCb7B,0EAAmD;QACjD,yEAAqB;QACnB,yEAA2B;QACzB,qEAAI;QAAA,yEAAc;QAAA,4DAAK;QACvB,yEAAsF;QAClF,yEAAgC;QAC9B,0EAA4B;QAC1B,sEACgE;QAClE,4DAAO;QACL,yEAA2B;QACvB,0EAC+C;QAC3C,uFACJ;QAAA,4DAAM;QACN,0EAEyB;QACrB,+EACJ;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAgC;QAC9B,2EAA4B;QAC1B,uEAA6H;QAC/H,4DAAO;QACT,0EAA2B;QACvB,0EACmD;QAC/C,gGACJ;QAAA,4DAAM;QACN,0EAEyB;QACrB,+EACJ;QAAA,4DAAM;QACV,4DAAM;QACR,4DAAM;QACJ,2EAAmD;QAC/C,0EAA2B;QACzB,wEAAyG;QAC3G,4DAAM;QACN,0EAA2B;QACzB,0EAEyB;QACvB,kFACF;QAAA,4DAAM;QACN,0EAAsE;QACpE,yGACF;QAAA,4DAAM;QACR,4DAAM;QACV,4DAAM;QACN,0EAAgC;QAC5B,0EAA2B;QACzB,wEACyC;QAC3C,4DAAM;QACN,0EAA2B;QACvB,0EAGyB;QACvB,2FACF;QAAA,4DAAM;QACN,0EACyB;QACvB,yGACF;QAAA,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAAgC;QAK5B,2EAAyB;QACrB,kFAE+D;QAFD,wJAAY,oBAAgB,IAAC;QAG3F,4DAAa;QACjB,4DAAM;QAEV,4DAAM;QAEN,2EAAyB;QACrB,0EAA2B;QACzB,8EAC8F;QADpD,wIAAS,cAAU,IAAC;QACgC,kEAAM;QAAA,4DAAS;QAC/G,4DAAM;QACV,4DAAM;QAKV,4DAAM;QAER,4DAAM;QACR,4DAAM;QACR,4DAAO;QACP,2EAA+B;QAAC,4FAA+B;QAAA,yEAAsC;QAAA,mEAAO;QAAA,4DAAI;QAAA,4DAAM;;QApG5F,qFAAwB;QAW3B,2DACqB;QADrB,yIACqB;QAGrB,0DACiE;QADjE,0LACiE;QAWrE,0DACyB;QADzB,sIACyB;QAGzB,0DACqE;QADrE,0LACqE;QAWnE,0DAC4E;QAD5E,mMAC4E;QAI5E,0DAA4C;QAA5C,yGAA4C;QAW1C,0DAE2C;QAF3C,wNAE2C;QAI3C,0DAA4D;QAA5D,yHAA4D;QAuBtB,0DAAgD;QAAhD,gHAAgD;QAY1C,0DAAiC;QAAjC,8IAAiC;;;;;;;;;;;;;;ACjGpG;AAAA;AAAO,MAAM,uBAAuB;IAClC,YAAY,CAAC,OAA2B,EAAE,IAAwC;;QAChF,MAAM,WAAW,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,WAAI,OAAO,CAAC,MAAM,0CAAE,KAAK,EAAC,CAAC;QAC5E,MAAM,aAAa,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACtG,MAAM,SAAS,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC,CAAC;QAClF,MAAM,OAAO,GAAG,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;QAC/C,OAAO,SAAS,IAAI,OAAO,IAAI,CAAE,WAAW,IAAI,aAAa,CAAE,CAAC;IAClE,CAAC;CACF;;;;;;;;;;;;;ACVD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoE;AAGjB;;;;;;;;;;AAY5C,MAAM,eAAe;IAG1B,YAAqB,EAAe,EAC1B,KAAqB,EACrB,WAAwB,EACxB,MAAc,EACd,aAA4B;QAJjB,OAAE,GAAF,EAAE,CAAa;QAC1B,UAAK,GAAL,KAAK,CAAgB;QACrB,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;QACd,kBAAa,GAAb,aAAa,CAAe;QAEpC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,KAAK,CAAC,CAAC;YACpD,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;IAEL,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE5C,QAAQ;QACN,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,IAAI,CAAC;IACnC,CAAC;IAEA,KAAK;QACJ,MAAM,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC;aACtC,SAAS,CACR,IAAI,CAAC,EAAE;YACR,8EAA8E;YACvE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;YAEtC,+CAA+C;QACnD,CAAC,CACF,CAAC;IACN,CAAC;;8EAjCU,eAAe;+FAAf,eAAe,2GAHf,CAAC,0DAAc,CAAC;QCb7B,0EAAmD;QAC/C,yEAAqB;QACjB,yEAA2B;QACvB,qEAAI;QAAA,kEAAO;QAAA,4DAAK;QAChB,yEAAsF;QAClF,yEAAyB;QACrB,0EAA4B;QACpB,sEACoE;QAC5E,4DAAO;QACP,yEAA2B;QACvB,0EACyB;QACrB,4EAAe;QAAA,qEAAG;QAAA,iEAAK;QAAA,4DAAI;QAAC,2EAChC;QAAA,4DAAM;QACV,4DAAM;QACN,0EAA2B;QACvB,0EACyB;QACrB,sEAAS;QAAA,qEAAG;QAAA,oEAAQ;QAAA,4DAAI;QAC5B,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,0EAAmD;QAC/C,0EAA2B;QACvB,wEACgB;QACpB,4DAAM;QACN,0EAA2B;QACvB,2EAC4C;QACxC,4EAA0B;QAAA,gFAAoB;QAAA,4DAAO;QACzD,4DAAM;QACV,4DAAM;QACV,4DAAM;QACN,2EAAkD;QAC9C,yEAAwC;QAAA,iFAAqB;QAAA,4DAAI;QACrE,4DAAM;QACN,0EAAyB;QACrB,sEAAiC;QACjC,0EAA2B;QACvB,8EAGwC;QAFhC,wIAAS,WAAO,IAAC;QAEe,qEACxC;QAAA,4DAAS;QACb,4DAAM;QACN,qEAAiC;QACrC,4DAAM;QACV,4DAAM;QAEV,4DAAM;QACV,4DAAM;QACV,4DAAO;QACP,2EAA+B;QAAC,4EAAe;QAAA,yEAAqC;QAAA,+EAAmB;QAAA,4DAAI;QAAA,4DAAM;;QAtDvF,qFAAwB;QAWrB,2DAAqC;QAArC,kGAAqC;QAMrC,0DAAoH;QAApH,0LAAoH;QAYpH,0DACsC;QADtC,2JACsC;QAM5C,0DAAoC;QAApC,6IAAoC;QAQ3B,0DAA+B;QAA/B,4FAA+B;QAUb,0DAAiC;QAAjC,6IAAiC;;;;;;;;;;;;;;;;;;;;;;AC/C5E,MAAM,aAAa;IAExB,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;0EALU,aAAa;6FAAb,aAAa;QCJ1B,yEAAiG;QAE7F,uEAA+B;QAC3B,oEAEoB;QACxB,4DAAI;QAEJ,sEAAK;QACD,2EAA+B;QACnC,4DAAM;QACV,4DAAM;;;;;;;;;;;;;;ACdN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgO;AACjL;AAC2B;AACtB;AACN;AACA;AACY;AACc;AACT;AACZ;;AAEX;AACE;AACD;AACA;;AAEzC;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS,mDAAmD;AAC3F,iDAAiD;AACjD,gBAAgB,8DAAuB;AACvC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,iFAAiF,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,oCAAoC,EAAE,kFAAkF,CAAC,2DAAoB,MAAM,gBAAgB,2DAAoB,GAAG,+BAA+B,EAAE,sFAAsF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,kCAAkC,EAAE,kFAAkF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,gCAAgC,EAAE,kFAAkF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,qCAAqC,EAAE,gFAAgF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,oCAAoC,EAAE,oFAAoF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,sCAAsC,EAAE,kFAAkF,CAAC,2DAAoB,MAAM,iBAAiB,2DAAoB,GAAG,qCAAqC,EAAE;AACv+C,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,wDAAiB,+EAA+E,6DAAsB;AAC1H,IAAI,yDAAkB;AACtB,CAAC;AACD,kEAAkE;AAClE,IAAI,gEAAyB;AAC7B,CAAC;AACD,0DAA0D;AAC1D,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,oBAAoB,2DAAoB;AACxC,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,0DAA0D;AAC1D,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,mFAAmF,CAAC,2DAAoB,OAAO,CAAC,2DAAoB,GAAG,cAAc,yDAAkB,IAAI,iBAAiB,2DAAoB,IAAI,iCAAiC,EAAE;AAC5Q,IAAI,0DAAmB;AACvB,CAAC;AACD,2BAA2B,SAAS,iBAAiB;AACrD,mDAAmD;AACnD,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,8EAA8E,6DAAsB;AACzH,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,+BAA+B,SAAS,mCAAmC;AAC3E,8CAA8C;AAC9C,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,qEAAqE,CAAC,2DAAoB,OAAO,cAAc,yDAAkB,IAAI,qBAAqB,EAAE;AACjL,IAAI,wDAAiB;AACrB,IAAI,4DAAqB;AACzB,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,8EAA8E,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,gCAAgC,EAAE,+EAA+E,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,qCAAqC,EAAE,mFAAmF,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,kCAAkC,EAAE,+EAA+E,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,gCAAgC,EAAE,+EAA+E,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,qCAAqC,EAAE,6EAA6E,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,oCAAoC,EAAE,iFAAiF,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,sCAAsC,EAAE,+EAA+E,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,qCAAqC,EAAE;AAC39C,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,CAAC;AACD,6CAA6C;AAC7C,IAAI,uDAAgB;AACpB,CAAC;AACD,kDAAkD;AAClD,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,mFAAmF,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,4CAA4C,EAAE;AAC1N,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,CAAC;AACD,mFAAmF;AACnF,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,yBAAyB,2DAAoB;AAC7C,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,2FAA2F;AAC3F,IAAI,gEAAyB;AAC7B,CAAC;AACD,2FAA2F;AAC3F,IAAI,gEAAyB;AAC7B,CAAC;AACD,4EAA4E;AAC5E,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,IAAI,wDAAiB;AACrB,CAAC;AACD;AACA,IAAI,2DAAoB;AACxB,iBAAiB,yDAAkB;AACnC,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,uEAAuE,6DAAsB;AAClH,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,sDAAsD,6DAAsB;AACjG,CAAC;AACD,8DAA8D;AAC9D,IAAI,qEAA8B;AAClC,IAAI,wDAAiB;AACrB,IAAI,mEAA4B;AAChC,CAAC;AACD,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,6EAA6E;AAC7E,IAAI,gEAAyB;AAC7B,CAAC;AACD,8DAA8D;AAC9D,IAAI,qEAA8B;AAClC,IAAI,wDAAiB;AACrB,IAAI,mEAA4B;AAChC,CAAC;AACD,IAAI,2DAAoB;AACxB,iBAAiB,yDAAkB;AACnC,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,sDAAsD,6DAAsB;AACjG,CAAC;AACD,yEAAyE;AACzE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,uBAAuB,2DAAoB;AAC3C,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,iFAAiF;AACjF,IAAI,gEAAyB;AAC7B,CAAC;AACD,2BAA2B,SAAS,qBAAqB;AACzD,+BAA+B,SAAS,4BAA4B;AACpE,kEAAkE;AAClE,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,yFAAyF,CAAC,2DAAoB,OAAO,kCAAkC,iBAAiB,2DAAoB,IAAI,uCAAuC,EAAE;AAC9P,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,0DAAmB;AACvB,CAAC;AACD;AACA;AACA,oBAAoB,2DAAoB;AACxC,IAAI,wDAAiB,YAAY,6DAAsB;AACvD,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB,sEAAsE,6DAAsB;AACjH,CAAC;AACD,kEAAkE;AAClE,IAAI,4DAAqB;AACzB,IAAI,oDAAa;AACjB,IAAI,0DAAmB;AACvB,CAAC;AACD,oBAAoB,2DAAoB;AACxC,IAAI,uDAAgB;AACpB,IAAI,+DAAwB;AAC5B,CAAC;AACD,6DAA6D;AAC7D,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,CAAC;AACD;AACA,oBAAoB,2DAAoB;AACxC,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,0BAA0B,6CAA6C;AACvE,gCAAgC,SAAS,sDAAsD;AAC/F,4BAA4B,SAAS,gCAAgC;AACrE,+CAA+C;AAC/C,iBAAiB,8DAAuB;AACxC,IAAI,4DAAqB;AACzB,IAAI,wDAAiB,0HAA0H,CAAC,2DAAoB,OAAO,iBAAiB,2DAAoB,GAAG,gDAAgD,EAAE;AACrQ,IAAI,4DAAqB;AACzB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB;AACrB,IAAI,wDAAiB,8EAA8E,oEAA6B;AAChI,IAAI,0DAAmB;AACvB,IAAI,0DAAmB;AACvB,CAAC;AACD,mBAAmB,2DAAoB;AACvC,IAAI,wDAAiB;AACrB,IAAI,yDAAkB;AACtB,IAAI,wDAAiB,YAAY,6DAAsB,+DAA+D,6DAAsB,WAAW,6DAAsB;AAC7K,IAAI,uDAAgB;AACpB,IAAI,yDAAkB;AACtB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,IAAI,uDAAgB;AACpB,IAAI,wDAAiB;AACrB,CAAC;AACD,gCAAgC,SAAS,8FAA8F;AACvI;AACA,aAAa,gEAAiB;AAC9B,iBAAiB,gEAAU;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,0DAAY;AAC9C,4BAA4B,0DAAY;AACxC,8BAA8B,0DAAY;AAC1C,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC,mCAAmC,0DAAY;AAC/C,2BAA2B,0DAAY;AACvC,2BAA2B,0DAAY;AACvC,0BAA0B,0DAAY;AACtC,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,qCAAqC;AACrC;AACA;AACA;AACA;AACA,sBAAsB,uEAAiB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,mCAAmC,sDAAU;AAC7C;AACA,wBAAwB,sDAAU;AAClC;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,yDAAW;AACrD;AACA;AACA,uCAAuC,yDAAW;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kCAAkC,sDAAU;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4EAA4E,sDAAU;AACtF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sDAAU;AAC1B;AACA,8CAA8C,sDAAU;AACxD;AACA;AACA;AACA;AACA,gCAAgC,yDAAW;AAC3C,yBAAyB,MAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,sDAAU;AACtB;AACA,YAAY,sDAAU;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,sDAAU;AACliDAAiD,yDAAW;AAC5D;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD,oBAAoB,yDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,wBAAwB;AACnD,oBAAoB,yDAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,iBAAiB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,yEAA6B;AAClE;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,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kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAA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kB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA,wEAAwE,2CAA2C;AACnH,6BAA6B,8DAAuB,EAAE,8BAA8B;AACpF,6BAA6B,8DAAuB,GAAG;AACvD,cAAc,oDAAoD,gEAAyB,yBAAyB,oEAAoE,EAAE,EAAE;AAC5L,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA,4DAA4D,qCAAqC;AACjG,uBAAuB,8DAAuB,EAAE,wBAAwB;AACxE,uBAAuB,8DAAuB,EAAE,0EAA0E;AAC1H,cAAc,oDAAoD,gEAAyB,mBAAmB,kEAAkE,EAAE,EAAE;AACpL,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,sDAAQ;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,eAAe,EAAE;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,yEAAiB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,4CAAO;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,4CAAO;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,OAAO;AACtB,iBAAiB,mBAAmB;AACpC;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,gBAAgB;AACrE;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,4CAA4C,SAAS;AACrD;AACA;AACA;AACA;AACA;AACA,wDAAwD,gBAAgB;AACxE;AACA,qBAAqB;AACrB,iBAAiB;AAC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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { NoAuthGuard, ResetPwdGuard } from '../core/guards';\r\nimport { AuthComponent, SigninComponent, SignupComponent, ForgotPwdComponent, ResetPwdComponent } from './pages';\r\n\r\nconst authRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: AuthComponent,\r\n        children: [\r\n            { path: 'signin', component: SigninComponent, canActivate: [NoAuthGuard]},\r\n            { path: 'signup', component: SignupComponent, canActivate: [NoAuthGuard]},\r\n            { path: 'forgotpwd', component: ForgotPwdComponent, canActivate: [NoAuthGuard]},\r\n            { path: 'resetpwd', component: ResetPwdComponent, canActivate: [ResetPwdGuard]},\r\n            { path: '', redirectTo: 'signin', pathMatch: 'full'}\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forChild(authRoutes),\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../core';\r\nimport { CustomErrorStateMatcher } from '../../CustomErrorStateMatcher';\r\nimport {Message,MessageService} from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport {PasswordModule} from 'primeng/password';\r\n\r\n@Component({\r\n  selector: 'crm-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n  providers: [MessageService],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  captcha: boolean = false;\r\n  signupForm: FormGroup;\r\n  matcher: CustomErrorStateMatcher;\r\n\r\n  constructor(private fb: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private primengConfig: PrimeNGConfig) {\r\n\r\n      this.signupForm = this.fb.group({\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: ['', [Validators.required, Validators.minLength(8)]],\r\n        confirmPassword: ['', Validators.required],\r\n          name: ['', Validators.required],\r\n      }, {\r\n        validator: this.confirmedPasswordValidator('password', 'confirmPassword')\r\n      });\r\n\r\n      this.matcher = new CustomErrorStateMatcher();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n\r\n  resolved(captchaResponse: string) {\r\n    this.captcha = true;\r\n    console.log(`Resolved response token: ${captchaResponse}`);\r\n\r\n  }\r\n\r\n  isCaptcha(){\r\n    return this.captcha;\r\n  }\r\n\r\n  get f() { return this.signupForm.controls; }\r\n\r\n\r\n  confirmedPasswordValidator(controlName: string, matchingControlName: string){\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n        if (matchingControl.errors && !matchingControl.errors.confirmedValidator) {\r\n            return;\r\n        }\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ confirmedValidator: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n  register() {\r\n    this.authService.signup(this.signupForm.value)\r\n      .subscribe(\r\n        user => {\r\n          console.log(user);\r\n          this.router.navigate(['employee', user.id]);\r\n        } \r\n      )\r\n  }\r\n}\r\n","<form class=\"signup-form\" [formGroup]=\"signupForm\">\r\n  <div class=\"crm-box\">\r\n    <div class=\"crm-box-inner\">\r\n      <h1>Create account</h1>\r\n      <div class=\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\" style=\"margin: 10px 0px\">\r\n          <div class=\"ui-grid-row p-mt-3\">\r\n            <span class=\"ui-grid-col-6\">\r\n              <input style=\"width: 100%\" pInputText placeholder=\"Fullname*\" type=\"text\"\r\n                     formControlName=\"fullname\" class=\"form-control\" required>\r\n            </span>\r\n              <div class=\"ui-grid-col-4\">\r\n                  <div [hidden]=\"!f.email.hasError('fullname') ||\r\n               f.email.hasError('required')\" style=\"color: red;\">\r\n                      Please enter a valid name\r\n                  </div>\r\n                  <div [hidden]=\"!f.email.hasError('required') ||\r\n               signupForm.controls['email'].valid ||!signupForm.controls['email'].dirty\"\r\n                       style=\"color: red;\">\r\n                      Email is required\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"ui-grid-row p-mt-3\">\r\n            <span class=\"ui-grid-col-6\">\r\n              <input style=\"width: 100%\" pInputText placeholder=\"Email*\" type=\"text\" formControlName=\"email\" class=\"form-control\" required>\r\n            </span>\r\n          <div class=\"ui-grid-col-4\">\r\n              <div [hidden]=\"!f.email.hasError('email') ||\r\n               f.email.hasError('required')\" style=\"color: red;\">\r\n                  Please enter a valid email address\r\n              </div>\r\n              <div [hidden]=\"!f.email.hasError('required') ||\r\n               signupForm.controls['email'].valid ||!signupForm.controls['email'].dirty\"\r\n                   style=\"color: red;\">\r\n                  Email is required\r\n              </div>\r\n          </div>\r\n        </div>\r\n          <div class=\"ui-grid-row\" style=\"margin-top: 12px;\">\r\n              <div class=\"ui-grid-col-6\">\r\n                <input style=\"width: 100%\" pInputText type=\"password\" placeholder=\"Password*\" formControlName=\"password\">\r\n              </div>\r\n              <div class=\"ui-grid-col-4\">\r\n                <div [hidden]=\"!f.password.hasError('required') ||\r\n                 signupForm.controls['password'].valid || !signupForm.controls['password'].dirty\"\r\n                     style=\"color: red;\">\r\n                  Password is required\r\n                </div>\r\n                <div [hidden]=\"!f.password.hasError('minlength')\" style=\"color: red;\">\r\n                  Password must be at least 8 characters long\r\n                </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"ui-grid-row p-mt-3\">\r\n              <div class=\"ui-grid-col-6\">\r\n                <input style=\"width: 100%\" pInputText type=\"password\" placeholder=\"Re-enter password*\"\r\n                       formControlName=\"confirmPassword\">\r\n              </div>\r\n              <div class=\"ui-grid-col-4\">\r\n                  <div [hidden]=\"!f.confirmPassword.hasError('required')\r\n                   || signupForm.controls['confirmPassword'].valid ||\r\n                    !signupForm.controls['confirmPassword'].dirty\"\r\n                       style=\"color: red;\">\r\n                    Re-enter password is required\r\n                  </div>\r\n                  <div [hidden]=\"!f.confirmPassword.hasError('confirmedValidator')\"\r\n                       style=\"color: red;\">\r\n                    Password and Confirm Password must be match\r\n                  </div>\r\n              </div>\r\n          </div>\r\n          <div class=\"ui-grid-row p-mt-2\">\r\n            <!--\r\n              the SITE_KEY is the sitekey from your admin console.\r\n              use form control for validation\r\n            -->\r\n              <div class=\"g-recaptcha\">\r\n                  <re-captcha style=\"transform: scale(0.4); margin-left: 14px;\" (resolved)=\"resolved($event)\"\r\n                              formControlName=\"recaptchaReactive\"\r\n                              siteKey=\"6LcHUp4aAAAAABFyGxRcKbAURjynoXA-nVpt2eHw\">\r\n                  </re-captcha>\r\n              </div>\r\n\r\n          </div>\r\n\r\n          <div class=\"ui-grid-row\">\r\n              <div class=\"ui-grid-col-6\">\r\n                <button pButton style=\"margin-top: 14px;\" (click)=\"register()\"\r\n                        class=\"p-button-warning p-button-sm\" [disabled]=\"signupForm.invalid  || !isCaptcha()\">Create</button>\r\n              </div>\r\n          </div>\r\n\r\n          \r\n\r\n          \r\n      </div>  \r\n    \r\n    </div>\r\n  </div>\r\n</form>\r\n<div style=\"margin-top: 12px;\"> Already have an account?&nbsp; <a  [routerLink]=\"['/auth','signin']\">Sign in</a></div>","import { ErrorStateMatcher } from '@angular/material/core';\r\nimport { FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\n\r\nexport class CustomErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const invalidCtrl = !!(control && control.invalid && control.parent?.dirty);\r\n    const invalidParent = !!(control && control.parent && control.parent.invalid && control.parent.dirty);\r\n    const hasErrors = !!(control && control.parent && control.parent.errors !== null);\r\n    const touched = !!(control && control.touched);\r\n    return hasErrors && touched && ( invalidCtrl || invalidParent );\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AuthService} from '../../../core';\r\nimport {Message,MessageService} from 'primeng/api';\r\nimport { PrimeNGConfig } from 'primeng/api';\r\nimport {PasswordModule} from 'primeng/password';\r\n\r\n\r\n@Component({\r\n  selector: 'crm-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss'],\r\n  providers: [MessageService],\r\n})\r\n\r\nexport class SigninComponent implements OnInit {\r\n\r\n  signinForm: FormGroup;\r\n  constructor( private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private primengConfig: PrimeNGConfig) {\r\n\r\n    this.signinForm = this.fb.group({\r\n        email: ['', [Validators.required, Validators.email]],\r\n        password: ['', Validators.required],\r\n    });\r\n\r\n  }\r\n\r\n  get f() { return this.signinForm.controls; }\r\n\r\n  ngOnInit() {\r\n    this.primengConfig.ripple = true;\r\n  }\r\n\r\n   login() {\r\n    const credentials = this.signinForm.value;\r\n    this.authService.attemptAuth(credentials)\r\n      .subscribe(\r\n        user => {\r\n       //   const redirectUrl = this.route.snapshot.queryParams['redirectUrl'] || '';\r\n              this.router.navigate([\"/employee\"]);\r\n\r\n            // this.router.navigate(['employee', user.id]);\r\n        }\r\n      );\r\n  }\r\n  \r\n}\r\n","<form class=\"signin-form\" [formGroup]=\"signinForm\">\r\n    <div class=\"crm-box\">\r\n        <div class=\"crm-box-inner\">\r\n            <h1>Sign-In</h1>\r\n            <div class=\"ui-grid ui-grid-responsive ui-grid-pad ui-fluid\" style=\"margin: 10px 0px\">\r\n                <div class=\"ui-grid-row\">\r\n                    <span class=\"ui-grid-col-6\">\r\n                            <input pInputText placeholder=\"Email*\" type=\"text\"\r\n                                   formControlName=\"email\" name=\"email\" class=\"p-autocomplete\"/>\r\n                    </span>\r\n                    <div class=\"ui-grid-col-4\">\r\n                        <div [hidden]=\"!f.email.hasError('email')\"\r\n                             style=\"color: red;\">\r\n                            Please enter a <b>valid</b> email address\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"ui-grid-col-4\">\r\n                        <div [hidden]=\"!f.email.hasError('required') || signinForm.controls['email'].valid ||!signinForm.controls['email'].dirty\"\r\n                             style=\"color: red;\">\r\n                            Email is <b>required</b>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"ui-grid-row\" style=\"margin-top: 12px;\">\r\n                    <div class=\"ui-grid-col-6\">\r\n                        <input pInputText placeholder=\"Password*\" type=\"password\" formControlName=\"password\" name=\"password\"\r\n                               required>\r\n                    </div>\r\n                    <div class=\"ui-grid-col-4\">\r\n                        <div [hidden]=\"signinForm.controls['password'].valid\r\n                         || !signinForm.controls['password'].dirty\">\r\n                            <span style=\"color: red;\">Password is required</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div style=\"text-align: right; margin-top: 12px;\">\r\n                    <a [routerLink]=\"['/auth','forgotpwd']\">Forgot your password?</a>\r\n                </div>\r\n                <div class=\"ui-grid-row\">\r\n                    <div class=\"ui-grid-col-2\"></div>\r\n                    <div class=\"ui-grid-col-6\">\r\n                        <button pButton style=\"margin-top: 14px;\"\r\n                                (click)=\"login()\"\r\n                                class=\"p-button-raised p-button-sm p-button-warning\"\r\n                                [disabled]=\"signinForm.invalid\">Continue\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"ui-grid-col-4\"></div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</form>\r\n<div style=\"margin-top: 12px;\"> New to? &nbsp; <a [routerLink]=\"['/auth','signup']\">Create your account</a></div>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'crm-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.scss']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","\r\n\r\n\r\n<div class=\"auth-container\" fxLayout=\"column\" fxLayoutAlign=\"start center\" style=\"height: 100%;\">\r\n\r\n    <a href=\"https://logigear.com\">\r\n        <img class=\"auth-logigear-logo\"\r\n        src=\"../../../assets/img/logo/logigear-logo.png\"\r\n        alt=\"LogiGear icon\">\r\n    </a>\r\n\r\n    <div>\r\n        <router-outlet></router-outlet>\r\n    </div>\r\n</div>","import { forwardRef, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Renderer2, ChangeDetectorRef, IterableDiffers, Input, Output, ViewChild, ContentChildren, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { trigger, transition, style, animate } from '@angular/animations';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { ButtonModule } from 'primeng/button';\nimport { RippleModule } from 'primeng/ripple';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ObjectUtils } from 'primeng/utils';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'primeng/button';\nimport * as ɵngcc3 from 'primeng/ripple';\n\nconst _c0 = [\"container\"];\nconst _c1 = [\"in\"];\nconst _c2 = [\"multiIn\"];\nconst _c3 = [\"multiContainer\"];\nconst _c4 = [\"ddBtn\"];\nconst _c5 = function (a0, a1) { return { \"p-autocomplete-dd-input\": a0, \"p-disabled\": a1 }; };\nfunction AutoComplete_input_2_Template(rf, ctx) { if (rf & 1) {\n    const _r8 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"input\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_input_2_Template_input_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7.onInputClick($event); })(\"input\", function AutoComplete_input_2_Template_input_input_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.onInput($event); })(\"keydown\", function AutoComplete_input_2_Template_input_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.onKeydown($event); })(\"keyup\", function AutoComplete_input_2_Template_input_keyup_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onKeyup($event); })(\"focus\", function AutoComplete_input_2_Template_input_focus_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.onInputFocus($event); })(\"blur\", function AutoComplete_input_2_Template_input_blur_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onInputBlur($event); })(\"change\", function AutoComplete_input_2_Template_input_change_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.onInputChange($event); })(\"paste\", function AutoComplete_input_2_Template_input_paste_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r8); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15.onInputPaste($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r1.inputStyleClass);\n    ɵngcc0.ɵɵproperty(\"ngStyle\", ctx_r1.inputStyle)(\"autocomplete\", ctx_r1.autocomplete)(\"ngClass\", ɵngcc0.ɵɵpureFunction2(23, _c5, ctx_r1.dropdown, ctx_r1.disabled))(\"value\", ctx_r1.inputFieldValue)(\"readonly\", ctx_r1.readonly)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵattribute(\"type\", ctx_r1.type)(\"id\", ctx_r1.inputId)(\"required\", ctx_r1.required)(\"name\", ctx_r1.name)(\"aria-controls\", ctx_r1.listId)(\"aria-expanded\", ctx_r1.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\")(\"autofocus\", ctx_r1.autofocus)(\"placeholder\", ctx_r1.placeholder)(\"size\", ctx_r1.size)(\"maxlength\", ctx_r1.maxlength)(\"tabindex\", ctx_r1.tabindex)(\"aria-label\", ctx_r1.ariaLabel)(\"aria-labelledby\", ctx_r1.ariaLabelledBy)(\"aria-required\", ctx_r1.required);\n} }\nfunction AutoComplete_ul_3_li_2_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutoComplete_ul_3_li_2_span_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 20);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const val_r19 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r22 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r22.resolveFieldData(val_r19));\n} }\nfunction AutoComplete_ul_3_li_2_span_4_Template(rf, ctx) { if (rf & 1) {\n    const _r26 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 21);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_ul_3_li_2_span_4_Template_span_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); ɵngcc0.ɵɵnextContext(); const _r20 = ɵngcc0.ɵɵreference(1); const ctx_r25 = ɵngcc0.ɵɵnextContext(2); return ctx_r25.removeItem(_r20); });\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c6 = function (a0) { return { $implicit: a0 }; };\nfunction AutoComplete_ul_3_li_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15, 16);\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_ul_3_li_2_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵtemplate(3, AutoComplete_ul_3_li_2_span_3_Template, 2, 1, \"span\", 18);\n    ɵngcc0.ɵɵtemplate(4, AutoComplete_ul_3_li_2_span_4_Template, 1, 0, \"span\", 19);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const val_r19 = ctx.$implicit;\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r17.selectedItemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(4, _c6, val_r19));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.selectedItemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r17.disabled && !ctx_r17.readonly);\n} }\nconst _c7 = function (a0, a1) { return { \"p-disabled\": a0, \"p-focus\": a1 }; };\nfunction AutoComplete_ul_3_Template(rf, ctx) { if (rf & 1) {\n    const _r28 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ul\", 9, 10);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_ul_3_Template_ul_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r28); const _r18 = ɵngcc0.ɵɵreference(5); return _r18.focus(); });\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_ul_3_li_2_Template, 5, 6, \"li\", 11);\n    ɵngcc0.ɵɵelementStart(3, \"li\", 12);\n    ɵngcc0.ɵɵelementStart(4, \"input\", 13, 14);\n    ɵngcc0.ɵɵlistener(\"input\", function AutoComplete_ul_3_Template_input_input_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.onInput($event); })(\"click\", function AutoComplete_ul_3_Template_input_click_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r30 = ɵngcc0.ɵɵnextContext(); return ctx_r30.onInputClick($event); })(\"keydown\", function AutoComplete_ul_3_Template_input_keydown_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r31 = ɵngcc0.ɵɵnextContext(); return ctx_r31.onKeydown($event); })(\"keyup\", function AutoComplete_ul_3_Template_input_keyup_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r32 = ɵngcc0.ɵɵnextContext(); return ctx_r32.onKeyup($event); })(\"focus\", function AutoComplete_ul_3_Template_input_focus_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r33 = ɵngcc0.ɵɵnextContext(); return ctx_r33.onInputFocus($event); })(\"blur\", function AutoComplete_ul_3_Template_input_blur_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r34 = ɵngcc0.ɵɵnextContext(); return ctx_r34.onInputBlur($event); })(\"change\", function AutoComplete_ul_3_Template_input_change_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r35 = ɵngcc0.ɵɵnextContext(); return ctx_r35.onInputChange($event); })(\"paste\", function AutoComplete_ul_3_Template_input_paste_4_listener($event) { ɵngcc0.ɵɵrestoreView(_r28); const ctx_r36 = ɵngcc0.ɵɵnextContext(); return ctx_r36.onInputPaste($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(20, _c7, ctx_r2.disabled, ctx_r2.focus));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r2.value);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵclassMap(ctx_r2.inputStyleClass);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r2.disabled)(\"readonly\", ctx_r2.readonly)(\"autocomplete\", ctx_r2.autocomplete)(\"ngStyle\", ctx_r2.inputStyle);\n    ɵngcc0.ɵɵattribute(\"type\", ctx_r2.type)(\"id\", ctx_r2.inputId)(\"placeholder\", ctx_r2.value && ctx_r2.value.length ? null : ctx_r2.placeholder)(\"tabindex\", ctx_r2.tabindex)(\"maxlength\", ctx_r2.maxlength)(\"autofocus\", ctx_r2.autofocus)(\"aria-label\", ctx_r2.ariaLabel)(\"aria-labelledby\", ctx_r2.ariaLabelledBy)(\"aria-required\", ctx_r2.required)(\"aria-controls\", ctx_r2.listId)(\"aria-expanded\", ctx_r2.overlayVisible)(\"aria-activedescendant\", \"p-highlighted-option\");\n} }\nfunction AutoComplete_i_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"i\", 22);\n} }\nfunction AutoComplete_button_5_Template(rf, ctx) { if (rf & 1) {\n    const _r39 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 23, 24);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_button_5_Template_button_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r39); const ctx_r38 = ɵngcc0.ɵɵnextContext(); return ctx_r38.handleDropdownClick($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"icon\", ctx_r4.dropdownIcon)(\"disabled\", ctx_r4.disabled);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r4.tabindex);\n} }\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const optgroup_r46 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r47 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r47.getOptionGroupLabel(optgroup_r46) || \"empty\");\n} }\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutoComplete_div_6_ng_container_3_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 30);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_3_ng_template_1_span_1_Template, 2, 1, \"span\", 27);\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, AutoComplete_div_6_ng_container_3_ng_template_1_ng_container_3_Template, 1, 0, \"ng-container\", 17);\n} if (rf & 2) {\n    const optgroup_r46 = ctx.$implicit;\n    ɵngcc0.ɵɵnextContext(2);\n    const _r43 = ɵngcc0.ɵɵreference(6);\n    const ctx_r45 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r45.groupTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r45.groupTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(5, _c6, optgroup_r46));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r43)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(7, _c6, ctx_r45.getOptionGroupChildren(optgroup_r46)));\n} }\nfunction AutoComplete_div_6_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_3_ng_template_1_Template, 4, 9, \"ng-template\", 29);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r41 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r41.suggestions);\n} }\nfunction AutoComplete_div_6_ng_container_4_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nfunction AutoComplete_div_6_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_container_4_ng_container_1_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    ɵngcc0.ɵɵnextContext();\n    const _r43 = ɵngcc0.ɵɵreference(6);\n    const ctx_r42 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", _r43)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c6, ctx_r42.suggestions));\n} }\nfunction AutoComplete_div_6_ng_template_5_li_0_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r55 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r57 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r57.resolveFieldData(option_r55));\n} }\nfunction AutoComplete_div_6_ng_template_5_li_0_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0);\n} }\nconst _c8 = function (a0) { return { \"p-highlight\": a0 }; };\nconst _c9 = function (a0, a1) { return { $implicit: a0, index: a1 }; };\nfunction AutoComplete_div_6_ng_template_5_li_0_Template(rf, ctx) { if (rf & 1) {\n    const _r61 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 33);\n    ɵngcc0.ɵɵlistener(\"click\", function AutoComplete_div_6_ng_template_5_li_0_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r61); const option_r55 = ctx.$implicit; const ctx_r60 = ɵngcc0.ɵɵnextContext(3); return ctx_r60.selectItem(option_r55); });\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_5_li_0_span_1_Template, 2, 1, \"span\", 27);\n    ɵngcc0.ɵɵtemplate(2, AutoComplete_div_6_ng_template_5_li_0_ng_container_2_Template, 1, 0, \"ng-container\", 17);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const option_r55 = ctx.$implicit;\n    const idx_r56 = ctx.index;\n    const ctx_r53 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction1(5, _c8, option_r55 === ctx_r53.highlightOption))(\"id\", ctx_r53.highlightOption == option_r55 ? \"p-highlighted-option\" : \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r53.itemTemplate);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r53.itemTemplate)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(7, _c9, option_r55, idx_r56));\n} }\nfunction AutoComplete_div_6_ng_template_5_li_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 34);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r54 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r54.emptyMessage);\n} }\nfunction AutoComplete_div_6_ng_template_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, AutoComplete_div_6_ng_template_5_li_0_Template, 3, 10, \"li\", 31);\n    ɵngcc0.ɵɵtemplate(1, AutoComplete_div_6_ng_template_5_li_1_Template, 2, 1, \"li\", 32);\n} if (rf & 2) {\n    const suggestionsToDisplay_r52 = ctx.$implicit;\n    const ctx_r44 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", suggestionsToDisplay_r52);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r44.noResults && ctx_r44.emptyMessage);\n} }\nconst _c10 = function () { return [\"p-autocomplete-panel p-component\"]; };\nconst _c11 = function (a0, a1) { return { showTransitionParams: a0, hideTransitionParams: a1 }; };\nconst _c12 = function (a1) { return { value: \"visible\", params: a1 }; };\nfunction AutoComplete_div_6_Template(rf, ctx) { if (rf & 1) {\n    const _r63 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0, 25);\n    ɵngcc0.ɵɵlistener(\"@overlayAnimation.start\", function AutoComplete_div_6_Template_div_animation_overlayAnimation_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r63); const ctx_r62 = ɵngcc0.ɵɵnextContext(); return ctx_r62.onOverlayAnimationStart($event); });\n    ɵngcc0.ɵɵelementStart(2, \"ul\", 26);\n    ɵngcc0.ɵɵtemplate(3, AutoComplete_div_6_ng_container_3_Template, 2, 1, \"ng-container\", 27);\n    ɵngcc0.ɵɵtemplate(4, AutoComplete_div_6_ng_container_4_Template, 2, 4, \"ng-container\", 27);\n    ɵngcc0.ɵɵtemplate(5, AutoComplete_div_6_ng_template_5_Template, 2, 2, \"ng-template\", null, 28, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r5.panelStyleClass);\n    ɵngcc0.ɵɵstyleProp(\"max-height\", ctx_r5.scrollHeight);\n    ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction0(10, _c10))(\"ngStyle\", ctx_r5.panelStyle)(\"@overlayAnimation\", ɵngcc0.ɵɵpureFunction1(14, _c12, ɵngcc0.ɵɵpureFunction2(11, _c11, ctx_r5.showTransitionOptions, ctx_r5.hideTransitionOptions)));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵattribute(\"id\", ctx_r5.listId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.group);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r5.group);\n} }\nconst _c13 = function (a1, a2) { return { \"p-autocomplete p-component\": true, \"p-autocomplete-dd\": a1, \"p-autocomplete-multiple\": a2 }; };\nconst AUTOCOMPLETE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => AutoComplete),\n    multi: true\n};\nclass AutoComplete {\n    constructor(el, renderer, cd, differs) {\n        this.el = el;\n        this.renderer = renderer;\n        this.cd = cd;\n        this.differs = differs;\n        this.minLength = 1;\n        this.delay = 300;\n        this.type = 'text';\n        this.autoZIndex = true;\n        this.baseZIndex = 0;\n        this.dropdownIcon = \"pi pi-chevron-down\";\n        this.unique = true;\n        this.completeOnFocus = false;\n        this.completeMethod = new EventEmitter();\n        this.onSelect = new EventEmitter();\n        this.onUnselect = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.onDropdownClick = new EventEmitter();\n        this.onClear = new EventEmitter();\n        this.onKeyUp = new EventEmitter();\n        this.onShow = new EventEmitter();\n        this.onHide = new EventEmitter();\n        this.scrollHeight = '200px';\n        this.dropdownMode = 'blank';\n        this.showTransitionOptions = '.12s cubic-bezier(0, 0, 0.2, 1)';\n        this.hideTransitionOptions = '.1s linear';\n        this.autocomplete = 'off';\n        this.onModelChange = () => { };\n        this.onModelTouched = () => { };\n        this.overlayVisible = false;\n        this.focus = false;\n        this.inputFieldValue = null;\n        this.differ = differs.find([]).create(null);\n        this.listId = UniqueComponentId() + '_list';\n    }\n    get suggestions() {\n        return this._suggestions;\n    }\n    set suggestions(val) {\n        this._suggestions = val;\n        this.handleSuggestionsChange();\n    }\n    ngAfterViewChecked() {\n        //Use timeouts as since Angular 4.2, AfterViewChecked is broken and not called after panel is updated\n        if (this.suggestionsUpdated && this.overlay && this.overlay.offsetParent) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    this.alignOverlay();\n                }\n            }, 1);\n            this.suggestionsUpdated = false;\n        }\n        if (this.highlightOptionChanged) {\n            setTimeout(() => {\n                if (this.overlay) {\n                    let listItem = DomHandler.findSingle(this.overlay, 'li.p-highlight');\n                    if (listItem) {\n                        DomHandler.scrollInView(this.overlay, listItem);\n                    }\n                }\n            }, 1);\n            this.highlightOptionChanged = false;\n        }\n    }\n    handleSuggestionsChange() {\n        if (this._suggestions != null && this.loading) {\n            this.highlightOption = null;\n            if (this._suggestions.length) {\n                this.noResults = false;\n                this.show();\n                this.suggestionsUpdated = true;\n                if (this.autoHighlight) {\n                    this.highlightOption = this._suggestions[0];\n                }\n            }\n            else {\n                this.noResults = true;\n                if (this.emptyMessage) {\n                    this.show();\n                    this.suggestionsUpdated = true;\n                }\n                else {\n                    this.hide();\n                }\n            }\n            this.loading = false;\n        }\n    }\n    ngAfterContentInit() {\n        this.templates.forEach((item) => {\n            switch (item.getType()) {\n                case 'item':\n                    this.itemTemplate = item.template;\n                    break;\n                case 'group':\n                    this.groupTemplate = item.template;\n                    break;\n                case 'selectedItem':\n                    this.selectedItemTemplate = item.template;\n                    break;\n                default:\n                    this.itemTemplate = item.template;\n                    break;\n            }\n        });\n    }\n    writeValue(value) {\n        this.value = value;\n        this.filled = this.value && this.value != '';\n        this.updateInputField();\n        this.cd.markForCheck();\n    }\n    getOptionGroupChildren(optionGroup) {\n        return this.optionGroupChildren ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupChildren) : optionGroup.items;\n    }\n    getOptionGroupLabel(optionGroup) {\n        return this.optionGroupLabel ? ObjectUtils.resolveFieldData(optionGroup, this.optionGroupLabel) : (optionGroup.label != undefined ? optionGroup.label : optionGroup);\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    setDisabledState(val) {\n        this.disabled = val;\n        this.cd.markForCheck();\n    }\n    onInput(event) {\n        // When an input element with a placeholder is clicked, the onInput event is invoked in IE.\n        if (!this.inputKeyDown && DomHandler.isIE()) {\n            return;\n        }\n        if (this.timeout) {\n            clearTimeout(this.timeout);\n        }\n        let value = event.target.value;\n        if (!this.multiple && !this.forceSelection) {\n            this.onModelChange(value);\n        }\n        if (value.length === 0 && !this.multiple) {\n            this.hide();\n            this.onClear.emit(event);\n            this.onModelChange(value);\n        }\n        if (value.length >= this.minLength) {\n            this.timeout = setTimeout(() => {\n                this.search(event, value);\n            }, this.delay);\n        }\n        else {\n            this.hide();\n        }\n        this.updateFilledState();\n        this.inputKeyDown = false;\n    }\n    onInputClick(event) {\n        if (this.documentClickListener) {\n            this.inputClick = true;\n        }\n    }\n    search(event, query) {\n        //allow empty string but not undefined or null\n        if (query === undefined || query === null) {\n            return;\n        }\n        this.loading = true;\n        this.completeMethod.emit({\n            originalEvent: event,\n            query: query\n        });\n    }\n    selectItem(option, focus = true) {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.multiple) {\n            this.multiInputEL.nativeElement.value = '';\n            this.value = this.value || [];\n            if (!this.isSelected(option) || !this.unique) {\n                this.value = [...this.value, option];\n                this.onModelChange(this.value);\n            }\n        }\n        else {\n            this.inputEL.nativeElement.value = this.resolveFieldData(option);\n            this.value = option;\n            this.onModelChange(this.value);\n        }\n        this.onSelect.emit(option);\n        this.updateFilledState();\n        if (focus) {\n            this.itemClicked = true;\n            this.focusInput();\n        }\n    }\n    show() {\n        if (this.multiInputEL || this.inputEL) {\n            let hasFocus = this.multiple ?\n                this.multiInputEL.nativeElement.ownerDocument.activeElement == this.multiInputEL.nativeElement :\n                this.inputEL.nativeElement.ownerDocument.activeElement == this.inputEL.nativeElement;\n            if (!this.overlayVisible && hasFocus) {\n                this.overlayVisible = true;\n            }\n        }\n    }\n    onOverlayAnimationStart(event) {\n        switch (event.toState) {\n            case 'visible':\n                this.overlay = event.element;\n                this.appendOverlay();\n                if (this.autoZIndex) {\n                    this.overlay.style.zIndex = String(this.baseZIndex + (++DomHandler.zindex));\n                }\n                this.alignOverlay();\n                this.bindDocumentClickListener();\n                this.bindDocumentResizeListener();\n                this.bindScrollListener();\n                this.onShow.emit(event);\n                break;\n            case 'void':\n                this.onOverlayHide();\n                break;\n        }\n    }\n    appendOverlay() {\n        if (this.appendTo) {\n            if (this.appendTo === 'body')\n                document.body.appendChild(this.overlay);\n            else\n                DomHandler.appendChild(this.overlay, this.appendTo);\n            if (!this.overlay.style.minWidth) {\n                this.overlay.style.minWidth = DomHandler.getWidth(this.el.nativeElement.children[0]) + 'px';\n            }\n        }\n    }\n    resolveFieldData(value) {\n        let data = this.field ? ObjectUtils.resolveFieldData(value, this.field) : value;\n        return data !== (null || undefined) ? data : '';\n    }\n    restoreOverlayAppend() {\n        if (this.overlay && this.appendTo) {\n            this.el.nativeElement.appendChild(this.overlay);\n        }\n    }\n    alignOverlay() {\n        if (this.appendTo)\n            DomHandler.absolutePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n        else\n            DomHandler.relativePosition(this.overlay, (this.multiple ? this.multiContainerEL.nativeElement : this.inputEL.nativeElement));\n    }\n    hide() {\n        this.overlayVisible = false;\n        this.cd.markForCheck();\n    }\n    handleDropdownClick(event) {\n        if (!this.overlayVisible) {\n            this.focusInput();\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            if (this.dropdownMode === 'blank')\n                this.search(event, '');\n            else if (this.dropdownMode === 'current')\n                this.search(event, queryValue);\n            this.onDropdownClick.emit({\n                originalEvent: event,\n                query: queryValue\n            });\n        }\n        else {\n            this.hide();\n        }\n    }\n    focusInput() {\n        if (this.multiple)\n            this.multiInputEL.nativeElement.focus();\n        else\n            this.inputEL.nativeElement.focus();\n    }\n    removeItem(item) {\n        let itemIndex = DomHandler.index(item);\n        let removedValue = this.value[itemIndex];\n        this.value = this.value.filter((val, i) => i != itemIndex);\n        this.onModelChange(this.value);\n        this.updateFilledState();\n        this.onUnselect.emit(removedValue);\n    }\n    onKeydown(event) {\n        if (this.overlayVisible) {\n            switch (event.which) {\n                //down\n                case 40:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let nextItemIndex = highlightItemIndex.itemIndex + 1;\n                            if (nextItemIndex < (this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex]).length)) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (this.suggestions[highlightItemIndex.groupIndex + 1]) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex + 1])[0];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.getOptionGroupChildren(this.suggestions[0])[0];\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex != -1) {\n                            var nextItemIndex = highlightItemIndex + 1;\n                            if (nextItemIndex != (this.suggestions.length)) {\n                                this.highlightOption = this.suggestions[nextItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                        }\n                        else {\n                            this.highlightOption = this.suggestions[0];\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //up\n                case 38:\n                    if (this.group) {\n                        let highlightItemIndex = this.findOptionGroupIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex !== -1) {\n                            let prevItemIndex = highlightItemIndex.itemIndex - 1;\n                            if (prevItemIndex >= 0) {\n                                this.highlightOption = this.getOptionGroupChildren(this.suggestions[highlightItemIndex.groupIndex])[prevItemIndex];\n                                this.highlightOptionChanged = true;\n                            }\n                            else if (prevItemIndex < 0) {\n                                let prevGroup = this.suggestions[highlightItemIndex.groupIndex - 1];\n                                if (prevGroup) {\n                                    this.highlightOption = this.getOptionGroupChildren(prevGroup)[this.getOptionGroupChildren(prevGroup).length - 1];\n                                    this.highlightOptionChanged = true;\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        let highlightItemIndex = this.findOptionIndex(this.highlightOption, this.suggestions);\n                        if (highlightItemIndex > 0) {\n                            let prevItemIndex = highlightItemIndex - 1;\n                            this.highlightOption = this.suggestions[prevItemIndex];\n                            this.highlightOptionChanged = true;\n                        }\n                    }\n                    event.preventDefault();\n                    break;\n                //enter\n                case 13:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                        this.hide();\n                    }\n                    event.preventDefault();\n                    break;\n                //escape\n                case 27:\n                    this.hide();\n                    event.preventDefault();\n                    break;\n                //tab\n                case 9:\n                    if (this.highlightOption) {\n                        this.selectItem(this.highlightOption);\n                    }\n                    this.hide();\n                    break;\n            }\n        }\n        else {\n            if (event.which === 40 && this.suggestions) {\n                this.search(event, event.target.value);\n            }\n        }\n        if (this.multiple) {\n            switch (event.which) {\n                //backspace\n                case 8:\n                    if (this.value && this.value.length && !this.multiInputEL.nativeElement.value) {\n                        this.value = [...this.value];\n                        const removedValue = this.value.pop();\n                        this.onModelChange(this.value);\n                        this.updateFilledState();\n                        this.onUnselect.emit(removedValue);\n                    }\n                    break;\n            }\n        }\n        this.inputKeyDown = true;\n    }\n    onKeyup(event) {\n        this.onKeyUp.emit(event);\n    }\n    onInputFocus(event) {\n        if (!this.itemClicked && this.completeOnFocus) {\n            let queryValue = this.multiple ? this.multiInputEL.nativeElement.value : this.inputEL.nativeElement.value;\n            this.search(event, queryValue);\n        }\n        this.focus = true;\n        this.onFocus.emit(event);\n        this.itemClicked = false;\n    }\n    onInputBlur(event) {\n        this.focus = false;\n        this.onModelTouched();\n        this.onBlur.emit(event);\n    }\n    onInputChange(event) {\n        if (this.forceSelection) {\n            let valid = false;\n            let inputValue = event.target.value.trim();\n            if (this.suggestions) {\n                for (let suggestion of this.suggestions) {\n                    let itemValue = this.field ? ObjectUtils.resolveFieldData(suggestion, this.field) : suggestion;\n                    if (itemValue && inputValue === itemValue.trim()) {\n                        valid = true;\n                        this.forceSelectionUpdateModelTimeout = setTimeout(() => {\n                            this.selectItem(suggestion, false);\n                        }, 250);\n                        break;\n                    }\n                }\n            }\n            if (!valid) {\n                if (this.multiple) {\n                    this.multiInputEL.nativeElement.value = '';\n                }\n                else {\n                    this.value = null;\n                    this.inputEL.nativeElement.value = '';\n                }\n                this.onClear.emit(event);\n                this.onModelChange(this.value);\n                this.updateFilledState();\n            }\n        }\n    }\n    onInputPaste(event) {\n        this.onKeydown(event);\n    }\n    isSelected(val) {\n        let selected = false;\n        if (this.value && this.value.length) {\n            for (let i = 0; i < this.value.length; i++) {\n                if (ObjectUtils.equals(this.value[i], val, this.dataKey)) {\n                    selected = true;\n                    break;\n                }\n            }\n        }\n        return selected;\n    }\n    findOptionIndex(option, suggestions) {\n        let index = -1;\n        if (suggestions) {\n            for (let i = 0; i < suggestions.length; i++) {\n                if (ObjectUtils.equals(option, suggestions[i])) {\n                    index = i;\n                    break;\n                }\n            }\n        }\n        return index;\n    }\n    findOptionGroupIndex(val, opts) {\n        let groupIndex, itemIndex;\n        if (opts) {\n            for (let i = 0; i < opts.length; i++) {\n                groupIndex = i;\n                itemIndex = this.findOptionIndex(val, this.getOptionGroupChildren(opts[i]));\n                if (itemIndex !== -1) {\n                    break;\n                }\n            }\n        }\n        if (itemIndex !== -1) {\n            return { groupIndex: groupIndex, itemIndex: itemIndex };\n        }\n        else {\n            return -1;\n        }\n    }\n    updateFilledState() {\n        if (this.multiple)\n            this.filled = (this.value && this.value.length) || (this.multiInputEL && this.multiInputEL.nativeElement && this.multiInputEL.nativeElement.value != '');\n        else\n            this.filled = (this.inputFieldValue && this.inputFieldValue != '') || (this.inputEL && this.inputEL.nativeElement && this.inputEL.nativeElement.value != '');\n        ;\n    }\n    updateInputField() {\n        let formattedValue = this.resolveFieldData(this.value);\n        this.inputFieldValue = formattedValue;\n        if (this.inputEL && this.inputEL.nativeElement) {\n            this.inputEL.nativeElement.value = formattedValue;\n        }\n        this.updateFilledState();\n    }\n    bindDocumentClickListener() {\n        if (!this.documentClickListener) {\n            const documentTarget = this.el ? this.el.nativeElement.ownerDocument : 'document';\n            this.documentClickListener = this.renderer.listen(documentTarget, 'click', (event) => {\n                if (event.which === 3) {\n                    return;\n                }\n                if (!this.inputClick && !this.isDropdownClick(event)) {\n                    this.hide();\n                }\n                this.inputClick = false;\n                this.cd.markForCheck();\n            });\n        }\n    }\n    isDropdownClick(event) {\n        if (this.dropdown) {\n            let target = event.target;\n            return (target === this.dropdownButton.nativeElement || target.parentNode === this.dropdownButton.nativeElement);\n        }\n        else {\n            return false;\n        }\n    }\n    unbindDocumentClickListener() {\n        if (this.documentClickListener) {\n            this.documentClickListener();\n            this.documentClickListener = null;\n        }\n    }\n    bindDocumentResizeListener() {\n        this.documentResizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.documentResizeListener);\n    }\n    unbindDocumentResizeListener() {\n        if (this.documentResizeListener) {\n            window.removeEventListener('resize', this.documentResizeListener);\n            this.documentResizeListener = null;\n        }\n    }\n    onWindowResize() {\n        this.hide();\n    }\n    bindScrollListener() {\n        if (!this.scrollHandler) {\n            this.scrollHandler = new ConnectedOverlayScrollHandler(this.containerEL.nativeElement, () => {\n                if (this.overlayVisible) {\n                    this.hide();\n                }\n            });\n        }\n        this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n        if (this.scrollHandler) {\n            this.scrollHandler.unbindScrollListener();\n        }\n    }\n    onOverlayHide() {\n        this.unbindDocumentClickListener();\n        this.unbindDocumentResizeListener();\n        this.unbindScrollListener();\n        this.overlay = null;\n        this.onHide.emit();\n    }\n    ngOnDestroy() {\n        if (this.forceSelectionUpdateModelTimeout) {\n            clearTimeout(this.forceSelectionUpdateModelTimeout);\n            this.forceSelectionUpdateModelTimeout = null;\n        }\n        if (this.scrollHandler) {\n            this.scrollHandler.destroy();\n            this.scrollHandler = null;\n        }\n        this.restoreOverlayAppend();\n        this.onOverlayHide();\n    }\n}\nAutoComplete.ɵfac = function AutoComplete_Factory(t) { return new (t || AutoComplete)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };\nAutoComplete.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: AutoComplete, selectors: [[\"p-autoComplete\"]], contentQueries: function AutoComplete_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 0);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templates = _t);\n    } }, viewQuery: function AutoComplete_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 1);\n        ɵngcc0.ɵɵviewQuery(_c1, 1);\n        ɵngcc0.ɵɵviewQuery(_c2, 1);\n        ɵngcc0.ɵɵviewQuery(_c3, 1);\n        ɵngcc0.ɵɵviewQuery(_c4, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.containerEL = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.inputEL = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiInputEL = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.multiContainerEL = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.dropdownButton = _t.first);\n    } }, hostVars: 4, hostBindings: function AutoComplete_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"p-inputwrapper-filled\", ctx.filled)(\"p-inputwrapper-focus\", ctx.focus && !ctx.disabled || ctx.overlayVisible);\n    } }, inputs: { minLength: \"minLength\", delay: \"delay\", type: \"type\", autoZIndex: \"autoZIndex\", baseZIndex: \"baseZIndex\", dropdownIcon: \"dropdownIcon\", unique: \"unique\", completeOnFocus: \"completeOnFocus\", scrollHeight: \"scrollHeight\", dropdownMode: \"dropdownMode\", showTransitionOptions: \"showTransitionOptions\", hideTransitionOptions: \"hideTransitionOptions\", autocomplete: \"autocomplete\", suggestions: \"suggestions\", disabled: \"disabled\", style: \"style\", panelStyle: \"panelStyle\", styleClass: \"styleClass\", panelStyleClass: \"panelStyleClass\", inputStyle: \"inputStyle\", inputId: \"inputId\", inputStyleClass: \"inputStyleClass\", placeholder: \"placeholder\", readonly: \"readonly\", maxlength: \"maxlength\", name: \"name\", required: \"required\", size: \"size\", appendTo: \"appendTo\", autoHighlight: \"autoHighlight\", forceSelection: \"forceSelection\", ariaLabel: \"ariaLabel\", ariaLabelledBy: \"ariaLabelledBy\", group: \"group\", field: \"field\", dropdown: \"dropdown\", multiple: \"multiple\", tabindex: \"tabindex\", dataKey: \"dataKey\", emptyMessage: \"emptyMessage\", autofocus: \"autofocus\", optionGroupChildren: \"optionGroupChildren\", optionGroupLabel: \"optionGroupLabel\" }, outputs: { completeMethod: \"completeMethod\", onSelect: \"onSelect\", onUnselect: \"onUnselect\", onFocus: \"onFocus\", onBlur: \"onBlur\", onDropdownClick: \"onDropdownClick\", onClear: \"onClear\", onKeyUp: \"onKeyUp\", onShow: \"onShow\", onHide: \"onHide\" }, features: [ɵngcc0.ɵɵProvidersFeature([AUTOCOMPLETE_VALUE_ACCESSOR])], decls: 7, vars: 12, consts: [[3, \"ngClass\", \"ngStyle\"], [\"container\", \"\"], [\"class\", \"p-autocomplete-input p-inputtext p-component\", \"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"ngStyle\", \"class\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-multiple-container p-component p-inputtext\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-loader pi pi-spinner pi-spin\", 4, \"ngIf\"], [\"type\", \"button\", \"pButton\", \"\", \"class\", \"p-autocomplete-dropdown\", \"pRipple\", \"\", 3, \"icon\", \"disabled\", \"click\", 4, \"ngIf\"], [3, \"ngClass\", \"max-height\", \"ngStyle\", \"class\", 4, \"ngIf\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 1, \"p-autocomplete-input\", \"p-inputtext\", \"p-component\", 3, \"ngStyle\", \"autocomplete\", \"ngClass\", \"value\", \"readonly\", \"disabled\", \"click\", \"input\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"in\", \"\"], [1, \"p-autocomplete-multiple-container\", \"p-component\", \"p-inputtext\", 3, \"ngClass\", \"click\"], [\"multiContainer\", \"\"], [\"class\", \"p-autocomplete-token\", 4, \"ngFor\", \"ngForOf\"], [1, \"p-autocomplete-input-token\"], [\"aria-autocomplete\", \"list\", \"role\", \"searchbox\", \"aria-haspopup\", \"true\", 3, \"disabled\", \"readonly\", \"autocomplete\", \"ngStyle\", \"input\", \"click\", \"keydown\", \"keyup\", \"focus\", \"blur\", \"change\", \"paste\"], [\"multiIn\", \"\"], [1, \"p-autocomplete-token\"], [\"token\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"class\", \"p-autocomplete-token-label\", 4, \"ngIf\"], [\"class\", \"p-autocomplete-token-icon pi pi-times-circle\", 3, \"click\", 4, \"ngIf\"], [1, \"p-autocomplete-token-label\"], [1, \"p-autocomplete-token-icon\", \"pi\", \"pi-times-circle\", 3, \"click\"], [1, \"p-autocomplete-loader\", \"pi\", \"pi-spinner\", \"pi-spin\"], [\"type\", \"button\", \"pButton\", \"\", \"pRipple\", \"\", 1, \"p-autocomplete-dropdown\", 3, \"icon\", \"disabled\", \"click\"], [\"ddBtn\", \"\"], [\"panel\", \"\"], [\"role\", \"listbox\", 1, \"p-autocomplete-items\"], [4, \"ngIf\"], [\"itemslist\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"p-autocomplete-item-group\"], [\"role\", \"option\", \"class\", \"p-autocomplete-item\", \"pRipple\", \"\", 3, \"ngClass\", \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"p-autocomplete-emptymessage p-autocomplete-item\", 4, \"ngIf\"], [\"role\", \"option\", \"pRipple\", \"\", 1, \"p-autocomplete-item\", 3, \"ngClass\", \"id\", \"click\"], [1, \"p-autocomplete-emptymessage\", \"p-autocomplete-item\"]], template: function AutoComplete_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"span\", 0, 1);\n        ɵngcc0.ɵɵtemplate(2, AutoComplete_input_2_Template, 2, 26, \"input\", 2);\n        ɵngcc0.ɵɵtemplate(3, AutoComplete_ul_3_Template, 6, 23, \"ul\", 3);\n        ɵngcc0.ɵɵtemplate(4, AutoComplete_i_4_Template, 1, 0, \"i\", 4);\n        ɵngcc0.ɵɵtemplate(5, AutoComplete_button_5_Template, 2, 3, \"button\", 5);\n        ɵngcc0.ɵɵtemplate(6, AutoComplete_div_6_Template, 7, 16, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.styleClass);\n        ɵngcc0.ɵɵproperty(\"ngClass\", ɵngcc0.ɵɵpureFunction2(9, _c13, ctx.dropdown, ctx.multiple))(\"ngStyle\", ctx.style);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.multiple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.multiple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.loading);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dropdown);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.overlayVisible);\n    } }, directives: [ɵngcc1.NgClass, ɵngcc1.NgStyle, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, ɵngcc2.ButtonDirective, ɵngcc3.Ripple], styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{margin-top:-.5rem;position:absolute;top:50%}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-bottom-right-radius:0;border-top-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-bottom-left-radius:0;border-top-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%}.p-autocomplete-panel{overflow:auto;position:absolute}.p-autocomplete-items{list-style-type:none;margin:0;padding:0}.p-autocomplete-item{cursor:pointer;overflow:hidden;position:relative;white-space:nowrap}.p-autocomplete-multiple-container{align-items:center;cursor:text;display:flex;flex-wrap:wrap;list-style-type:none;margin:0;overflow:hidden;padding:0}.p-autocomplete-token{align-items:center;cursor:default;display:inline-flex;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{display:inline-flex;flex:1 1 auto}.p-autocomplete-input-token input{background-color:transparent;border:0;border-radius:0;box-shadow:none;margin:0;outline:0 none;padding:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}\"], encapsulation: 2, data: { animation: [\n            trigger('overlayAnimation', [\n                transition(':enter', [\n                    style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                    animate('{{showTransitionParams}}')\n                ]),\n                transition(':leave', [\n                    animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n                ])\n            ])\n        ] }, changeDetection: 0 });\nAutoComplete.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: ChangeDetectorRef },\n    { type: IterableDiffers }\n];\nAutoComplete.propDecorators = {\n    minLength: [{ type: Input }],\n    delay: [{ type: Input }],\n    style: [{ type: Input }],\n    panelStyle: [{ type: Input }],\n    styleClass: [{ type: Input }],\n    panelStyleClass: [{ type: Input }],\n    inputStyle: [{ type: Input }],\n    inputId: [{ type: Input }],\n    inputStyleClass: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    readonly: [{ type: Input }],\n    disabled: [{ type: Input }],\n    maxlength: [{ type: Input }],\n    name: [{ type: Input }],\n    required: [{ type: Input }],\n    size: [{ type: Input }],\n    appendTo: [{ type: Input }],\n    autoHighlight: [{ type: Input }],\n    forceSelection: [{ type: Input }],\n    type: [{ type: Input }],\n    autoZIndex: [{ type: Input }],\n    baseZIndex: [{ type: Input }],\n    ariaLabel: [{ type: Input }],\n    ariaLabelledBy: [{ type: Input }],\n    dropdownIcon: [{ type: Input }],\n    unique: [{ type: Input }],\n    group: [{ type: Input }],\n    completeOnFocus: [{ type: Input }],\n    completeMethod: [{ type: Output }],\n    onSelect: [{ type: Output }],\n    onUnselect: [{ type: Output }],\n    onFocus: [{ type: Output }],\n    onBlur: [{ type: Output }],\n    onDropdownClick: [{ type: Output }],\n    onClear: [{ type: Output }],\n    onKeyUp: [{ type: Output }],\n    onShow: [{ type: Output }],\n    onHide: [{ type: Output }],\n    field: [{ type: Input }],\n    scrollHeight: [{ type: Input }],\n    dropdown: [{ type: Input }],\n    dropdownMode: [{ type: Input }],\n    multiple: [{ type: Input }],\n    tabindex: [{ type: Input }],\n    dataKey: [{ type: Input }],\n    emptyMessage: [{ type: Input }],\n    showTransitionOptions: [{ type: Input }],\n    hideTransitionOptions: [{ type: Input }],\n    autofocus: [{ type: Input }],\n    autocomplete: [{ type: Input }],\n    optionGroupChildren: [{ type: Input }],\n    optionGroupLabel: [{ type: Input }],\n    containerEL: [{ type: ViewChild, args: ['container',] }],\n    inputEL: [{ type: ViewChild, args: ['in',] }],\n    multiInputEL: [{ type: ViewChild, args: ['multiIn',] }],\n    multiContainerEL: [{ type: ViewChild, args: ['multiContainer',] }],\n    dropdownButton: [{ type: ViewChild, args: ['ddBtn',] }],\n    templates: [{ type: ContentChildren, args: [PrimeTemplate,] }],\n    suggestions: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoComplete, [{\n        type: Component,\n        args: [{\n                selector: 'p-autoComplete',\n                template: `\n        <span #container [ngClass]=\"{'p-autocomplete p-component':true,'p-autocomplete-dd':dropdown,'p-autocomplete-multiple':multiple}\" [ngStyle]=\"style\" [class]=\"styleClass\">\n            <input *ngIf=\"!multiple\" #in [attr.type]=\"type\" [attr.id]=\"inputId\" [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [autocomplete]=\"autocomplete\" [attr.required]=\"required\" [attr.name]=\"name\"\n            class=\"p-autocomplete-input p-inputtext p-component\" [ngClass]=\"{'p-autocomplete-dd-input':dropdown,'p-disabled': disabled}\" [value]=\"inputFieldValue\" aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\"\n            (click)=\"onInputClick($event)\" (input)=\"onInput($event)\" (keydown)=\"onKeydown($event)\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\"\n            [attr.placeholder]=\"placeholder\" [attr.size]=\"size\" [attr.maxlength]=\"maxlength\" [attr.tabindex]=\"tabindex\" [readonly]=\"readonly\" [disabled]=\"disabled\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n            ><ul *ngIf=\"multiple\" #multiContainer class=\"p-autocomplete-multiple-container p-component p-inputtext\" [ngClass]=\"{'p-disabled':disabled,'p-focus':focus}\" (click)=\"multiIn.focus()\">\n                <li #token *ngFor=\"let val of value\" class=\"p-autocomplete-token\">\n                    <ng-container *ngTemplateOutlet=\"selectedItemTemplate; context: {$implicit: val}\"></ng-container>\n                    <span *ngIf=\"!selectedItemTemplate\" class=\"p-autocomplete-token-label\">{{resolveFieldData(val)}}</span>\n                    <span  class=\"p-autocomplete-token-icon pi pi-times-circle\" (click)=\"removeItem(token)\" *ngIf=\"!disabled && !readonly\"></span>\n                </li>\n                <li class=\"p-autocomplete-input-token\">\n                    <input #multiIn [attr.type]=\"type\" [attr.id]=\"inputId\" [disabled]=\"disabled\" [attr.placeholder]=\"(value&&value.length ? null : placeholder)\" [attr.tabindex]=\"tabindex\" [attr.maxlength]=\"maxlength\" (input)=\"onInput($event)\"  (click)=\"onInputClick($event)\"\n                            (keydown)=\"onKeydown($event)\" [readonly]=\"readonly\" (keyup)=\"onKeyup($event)\" [attr.autofocus]=\"autofocus\" (focus)=\"onInputFocus($event)\" (blur)=\"onInputBlur($event)\" (change)=\"onInputChange($event)\" (paste)=\"onInputPaste($event)\" [autocomplete]=\"autocomplete\"\n                            [ngStyle]=\"inputStyle\" [class]=\"inputStyleClass\" [attr.aria-label]=\"ariaLabel\" [attr.aria-labelledby]=\"ariaLabelledBy\" [attr.aria-required]=\"required\"\n                            aria-autocomplete=\"list\" [attr.aria-controls]=\"listId\" role=\"searchbox\" [attr.aria-expanded]=\"overlayVisible\" aria-haspopup=\"true\" [attr.aria-activedescendant]=\"'p-highlighted-option'\">\n                </li>\n            </ul>\n            <i *ngIf=\"loading\" class=\"p-autocomplete-loader pi pi-spinner pi-spin\"></i><button #ddBtn type=\"button\" pButton [icon]=\"dropdownIcon\" class=\"p-autocomplete-dropdown\" [disabled]=\"disabled\" pRipple\n                (click)=\"handleDropdownClick($event)\" *ngIf=\"dropdown\" [attr.tabindex]=\"tabindex\"></button>\n            <div #panel *ngIf=\"overlayVisible\" [ngClass]=\"['p-autocomplete-panel p-component']\" [style.max-height]=\"scrollHeight\" [ngStyle]=\"panelStyle\" [class]=\"panelStyleClass\"\n                [@overlayAnimation]=\"{value: 'visible', params: {showTransitionParams: showTransitionOptions, hideTransitionParams: hideTransitionOptions}}\" (@overlayAnimation.start)=\"onOverlayAnimationStart($event)\">\n                <ul role=\"listbox\" [attr.id]=\"listId\" class=\"p-autocomplete-items\">\n                    <ng-container *ngIf=\"group\">\n                        <ng-template ngFor let-optgroup [ngForOf]=\"suggestions\">\n                            <li class=\"p-autocomplete-item-group\">\n                                <span *ngIf=\"!groupTemplate\">{{getOptionGroupLabel(optgroup)||'empty'}}</span>\n                                <ng-container *ngTemplateOutlet=\"groupTemplate; context: {$implicit: optgroup}\"></ng-container>\n                            </li>\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: getOptionGroupChildren(optgroup)}\"></ng-container>\n                        </ng-template>\n                    </ng-container>\n                    <ng-container *ngIf=\"!group\">\n                            <ng-container *ngTemplateOutlet=\"itemslist; context: {$implicit: suggestions}\"></ng-container>\n                    </ng-container>\n                    <ng-template #itemslist let-suggestionsToDisplay>\n                        <li role=\"option\" *ngFor=\"let option of suggestionsToDisplay; let idx = index\" class=\"p-autocomplete-item\" pRipple [ngClass]=\"{'p-highlight': (option === highlightOption)}\" [id]=\"highlightOption == option ? 'p-highlighted-option':''\" (click)=\"selectItem(option)\">\n                            <span *ngIf=\"!itemTemplate\">{{resolveFieldData(option)}}</span>\n                            <ng-container *ngTemplateOutlet=\"itemTemplate; context: {$implicit: option, index: idx}\"></ng-container>\n                        </li>\n                        <li *ngIf=\"noResults && emptyMessage\" class=\"p-autocomplete-emptymessage p-autocomplete-item\">{{emptyMessage}}</li>\n                    </ng-template>\n                </ul>\n            </div>\n        </span>\n    `,\n                animations: [\n                    trigger('overlayAnimation', [\n                        transition(':enter', [\n                            style({ opacity: 0, transform: 'scaleY(0.8)' }),\n                            animate('{{showTransitionParams}}')\n                        ]),\n                        transition(':leave', [\n                            animate('{{hideTransitionParams}}', style({ opacity: 0 }))\n                        ])\n                    ])\n                ],\n                host: {\n                    '[class.p-inputwrapper-filled]': 'filled',\n                    '[class.p-inputwrapper-focus]': '(focus && !disabled) || overlayVisible'\n                },\n                providers: [AUTOCOMPLETE_VALUE_ACCESSOR],\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".p-autocomplete{display:inline-flex;position:relative}.p-autocomplete-loader{margin-top:-.5rem;position:absolute;top:50%}.p-autocomplete-dd .p-autocomplete-input{flex:1 1 auto;width:1%}.p-autocomplete-dd .p-autocomplete-input,.p-autocomplete-dd .p-autocomplete-multiple-container{border-bottom-right-radius:0;border-top-right-radius:0}.p-autocomplete-dd .p-autocomplete-dropdown{border-bottom-left-radius:0;border-top-left-radius:0}.p-autocomplete .p-autocomplete-panel{min-width:100%}.p-autocomplete-panel{overflow:auto;position:absolute}.p-autocomplete-items{list-style-type:none;margin:0;padding:0}.p-autocomplete-item{cursor:pointer;overflow:hidden;position:relative;white-space:nowrap}.p-autocomplete-multiple-container{align-items:center;cursor:text;display:flex;flex-wrap:wrap;list-style-type:none;margin:0;overflow:hidden;padding:0}.p-autocomplete-token{align-items:center;cursor:default;display:inline-flex;flex:0 0 auto}.p-autocomplete-token-icon{cursor:pointer}.p-autocomplete-input-token{display:inline-flex;flex:1 1 auto}.p-autocomplete-input-token input{background-color:transparent;border:0;border-radius:0;box-shadow:none;margin:0;outline:0 none;padding:0;width:100%}.p-fluid .p-autocomplete{display:flex}.p-fluid .p-autocomplete-dd .p-autocomplete-input{width:1%}\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.IterableDiffers }]; }, { minLength: [{\n            type: Input\n        }], delay: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], autoZIndex: [{\n            type: Input\n        }], baseZIndex: [{\n            type: Input\n        }], dropdownIcon: [{\n            type: Input\n        }], unique: [{\n            type: Input\n        }], completeOnFocus: [{\n            type: Input\n        }], completeMethod: [{\n            type: Output\n        }], onSelect: [{\n            type: Output\n        }], onUnselect: [{\n            type: Output\n        }], onFocus: [{\n            type: Output\n        }], onBlur: [{\n            type: Output\n        }], onDropdownClick: [{\n            type: Output\n        }], onClear: [{\n            type: Output\n        }], onKeyUp: [{\n            type: Output\n        }], onShow: [{\n            type: Output\n        }], onHide: [{\n            type: Output\n        }], scrollHeight: [{\n            type: Input\n        }], dropdownMode: [{\n            type: Input\n        }], showTransitionOptions: [{\n            type: Input\n        }], hideTransitionOptions: [{\n            type: Input\n        }], autocomplete: [{\n            type: Input\n        }], suggestions: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], style: [{\n            type: Input\n        }], panelStyle: [{\n            type: Input\n        }], styleClass: [{\n            type: Input\n        }], panelStyleClass: [{\n            type: Input\n        }], inputStyle: [{\n            type: Input\n        }], inputId: [{\n            type: Input\n        }], inputStyleClass: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], maxlength: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], appendTo: [{\n            type: Input\n        }], autoHighlight: [{\n            type: Input\n        }], forceSelection: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input\n        }], ariaLabelledBy: [{\n            type: Input\n        }], group: [{\n            type: Input\n        }], field: [{\n            type: Input\n        }], dropdown: [{\n            type: Input\n        }], multiple: [{\n            type: Input\n        }], tabindex: [{\n            type: Input\n        }], dataKey: [{\n            type: Input\n        }], emptyMessage: [{\n            type: Input\n        }], autofocus: [{\n            type: Input\n        }], optionGroupChildren: [{\n            type: Input\n        }], optionGroupLabel: [{\n            type: Input\n        }], containerEL: [{\n            type: ViewChild,\n            args: ['container']\n        }], inputEL: [{\n            type: ViewChild,\n            args: ['in']\n        }], multiInputEL: [{\n            type: ViewChild,\n            args: ['multiIn']\n        }], multiContainerEL: [{\n            type: ViewChild,\n            args: ['multiContainer']\n        }], dropdownButton: [{\n            type: ViewChild,\n            args: ['ddBtn']\n        }], templates: [{\n            type: ContentChildren,\n            args: [PrimeTemplate]\n        }] }); })();\nclass AutoCompleteModule {\n}\nAutoCompleteModule.ɵfac = function AutoCompleteModule_Factory(t) { return new (t || AutoCompleteModule)(); };\nAutoCompleteModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: AutoCompleteModule });\nAutoCompleteModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule], SharedModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(AutoCompleteModule, { declarations: function () { return [AutoComplete]; }, imports: function () { return [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule]; }, exports: function () { return [AutoComplete, SharedModule]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutoCompleteModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule, InputTextModule, ButtonModule, SharedModule, RippleModule],\n                exports: [AutoComplete, SharedModule],\n                declarations: [AutoComplete]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AUTOCOMPLETE_VALUE_ACCESSOR, AutoComplete, AutoCompleteModule };\n\n//# sourceMappingURL=primeng-autocomplete.js.map","import { NgModule } from '@angular/core';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { SigninComponent } from './pages/signin/signin.component';\r\nimport { SignupComponent } from './pages/signup/signup.component';\r\nimport { AuthComponent } from './pages/auth.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { ForgotPwdComponent } from './pages/forgot-pwd/forgot-pwd.component';\r\nimport { ResetPwdComponent } from './pages/reset-pwd/reset-pwd.component';\r\n\r\nimport { RecaptchaModule, RecaptchaFormsModule } from 'ng-recaptcha';\r\nimport {AutoCompleteModule} from \"primeng/autocomplete\";\r\nimport {InputTextModule} from \"primeng/inputtext\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        SharedModule,\r\n        AuthRoutingModule,\r\n        RecaptchaModule,\r\n        RecaptchaFormsModule,\r\n        AutoCompleteModule,\r\n        InputTextModule\r\n    ],\r\n  declarations: [\r\n    SigninComponent,\r\n    SignupComponent,\r\n    AuthComponent,\r\n    ForgotPwdComponent,\r\n    ResetPwdComponent\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","export * from './signin/signin.component';\r\nexport * from './signup/signup.component';\r\nexport * from './forgot-pwd/forgot-pwd.component';\r\nexport * from './reset-pwd/reset-pwd.component';\r\nexport * from './auth.component';\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators, ValidatorFn, ValidationErrors } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../core';\r\nimport { CustomErrorStateMatcher } from '../../CustomErrorStateMatcher';\r\n\r\n@Component({\r\n  selector: 'crm-reset-pwd',\r\n  templateUrl: './reset-pwd.component.html',\r\n  styleUrls: ['./reset-pwd.component.scss']\r\n})\r\nexport class ResetPwdComponent implements OnInit {\r\n\r\n  account: {email: string};\r\n  resetPwdForm: FormGroup;\r\n  matcher: CustomErrorStateMatcher;\r\n  \r\n  constructor( private router: Router, private authService: AuthService) {\r\n      this.matcher = new CustomErrorStateMatcher();\r\n      this.account =  this.authService.forgotAccount;\r\n      this.resetPwdForm = new FormGroup({\r\n        verifyCode: new FormControl('', Validators.required),\r\n        pwd: new FormControl('', [Validators.required, Validators.minLength(8)]),\r\n        confirmPwd: new FormControl('', Validators.required)\r\n      });\r\n      //}, { validators: this.checkPassword});\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n\r\n  checkPassword(group: FormGroup) {\r\n    const password = group.get('pwd')!.value;\r\n    const confirmPassword = group.get('confirmPwd')!.value;\r\n    return password === confirmPassword ? null : { 'notSame': true };\r\n  }\r\n\r\n  get f() { return this.resetPwdForm.controls; }\r\n\r\n  resetPwd() {\r\n\r\n    const data = this.resetPwdForm.value;\r\n    if (!this.resetPwdForm.valid) {\r\n      return;\r\n    }\r\n\r\n    this.authService.resetPassword({email: this.account.email, verifyCode: data.verifyCode, newPwd: data.pwd}).subscribe(\r\n      user => {\r\n        this.router.navigate(['/home']);\r\n      },\r\n      err => {\r\n        // this.message = new ErrorMessage(err);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Create new password</mat-card-title>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <form class=\"resetpwd-form\" [formGroup]=\"resetPwdForm\">\r\n      <div>We'll ask for this password whenever you sign in.</div>\r\n      <mat-form-field>\r\n        <input  matInput  placeholder=\"Password\" formControlName=\"pwd\" type=\"password\" required>\r\n        <mat-error *ngIf=\"f.pwd.hasError('minlength') && !f.pwd.hasError('required')\">\r\n          Password must be at least 8 characters long\r\n        </mat-error>\r\n        <mat-error *ngIf=\"f.pwd.hasError('required')\">\r\n          Password is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input  matInput placeholder=\"Re-enter password\" formControlName=\"confirmPwd\" type=\"password\" [errorStateMatcher]=\"matcher\" required>\r\n        <mat-error *ngIf=\"resetPwdForm.hasError('notSame') && !f.confirmPwd.hasError('required')\">\r\n          Password do not match\r\n        </mat-error>\r\n        <mat-error *ngIf=\"f.confirmPwd.hasError('required')\">\r\n          Re-enter password is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n\r\n      <p>For your security, we need to verify your identity. We've sent a code to the email {{account.email}}. Please enter it below.</p>\r\n      <mat-form-field class=\"field\" [class.error]=\"f.verifyCode.errors\">\r\n        <input matInput placeholder=\"Enter code\" type=\"text\" formControlName=\"verifyCode\">\r\n        <mat-error *ngIf=\"f.verifyCode.hasError('required')\">\r\n          Please fill out this field\r\n        </mat-error>\r\n      </mat-form-field>\r\n      <a>Resend code</a> \r\n      \r\n    </form>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align='end'>\r\n    <button mat-raised-button (click)=\"resetPwd()\" color=\"primary\" [disabled]=\"resetPwdForm.invalid\">Save Changes</button>\r\n  </mat-card-actions>\r\n</mat-card>\r\n\r\n<div>\r\n  Secure password tips:\r\n  Use at least 8 characters, a combination of numbers and letters is best.\r\n  Do not use the same password you have used with us previously.\r\n  Do not use dictionary words, your name, e-mail address, mobile phone number or other personal information that can be easily obtained.\r\n  Do not use the same password for multiple online accounts.\r\n</div> ","import { InjectionToken, Injectable, Inject, PLATFORM_ID, Optional, EventEmitter, Component, ElementRef, NgZone, Input, HostBinding, Output, NgModule, Directive, forwardRef, HostListener } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { of, BehaviorSubject, Subject } from 'rxjs';\nimport { NG_VALUE_ACCESSOR, FormsModule } from '@angular/forms';\n\nimport * as ɵngcc0 from '@angular/core';\nfunction loadScript(renderMode, onLoaded, urlParams, url, nonce) {\n    window.ng2recaptchaloaded = () => {\n        onLoaded(grecaptcha);\n    };\n    const script = document.createElement(\"script\");\n    script.innerHTML = \"\";\n    const baseUrl = url || \"https://www.google.com/recaptcha/api.js\";\n    script.src = `${baseUrl}?render=${renderMode}&onload=ng2recaptchaloaded${urlParams}`;\n    if (nonce) {\n        script.nonce = nonce;\n    }\n    script.async = true;\n    script.defer = true;\n    document.head.appendChild(script);\n}\n\nconst RECAPTCHA_LANGUAGE = new InjectionToken(\"recaptcha-language\");\nconst RECAPTCHA_BASE_URL = new InjectionToken(\"recaptcha-base-url\");\nconst RECAPTCHA_NONCE = new InjectionToken(\"recaptcha-nonce-tag\");\nconst RECAPTCHA_SETTINGS = new InjectionToken(\"recaptcha-settings\");\nconst RECAPTCHA_V3_SITE_KEY = new InjectionToken(\"recaptcha-v3-site-key\");\n\nclass RecaptchaLoaderService {\n    constructor(\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, language, baseUrl, nonce, v3SiteKey) {\n        this.platformId = platformId;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.nonce = nonce;\n        this.v3SiteKey = v3SiteKey;\n        this.init();\n        this.ready = isPlatformBrowser(this.platformId)\n            ? RecaptchaLoaderService.ready.asObservable()\n            : of();\n    }\n    /** @internal */\n    init() {\n        if (RecaptchaLoaderService.ready) {\n            return;\n        }\n        if (isPlatformBrowser(this.platformId)) {\n            const subject = new BehaviorSubject(null);\n            RecaptchaLoaderService.ready = subject;\n            const langParam = this.language ? \"&hl=\" + this.language : \"\";\n            const renderMode = this.v3SiteKey || \"explicit\";\n            loadScript(renderMode, (grecaptcha) => subject.next(grecaptcha), langParam, this.baseUrl, this.nonce);\n        }\n    }\n}\nRecaptchaLoaderService.ɵfac = function RecaptchaLoaderService_Factory(t) { return new (t || RecaptchaLoaderService)(ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(RECAPTCHA_LANGUAGE, 8), ɵngcc0.ɵɵinject(RECAPTCHA_BASE_URL, 8), ɵngcc0.ɵɵinject(RECAPTCHA_NONCE, 8), ɵngcc0.ɵɵinject(RECAPTCHA_V3_SITE_KEY, 8)); };\nRecaptchaLoaderService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: RecaptchaLoaderService, factory: RecaptchaLoaderService.ɵfac });\n/**\n * @internal\n * @nocollapse\n */\nRecaptchaLoaderService.ready = null;\nRecaptchaLoaderService.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_LANGUAGE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_BASE_URL,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_NONCE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_V3_SITE_KEY,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecaptchaLoaderService, [{\n        type: Injectable\n    }], function () { return [{ type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_LANGUAGE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_BASE_URL]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_NONCE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_V3_SITE_KEY]\n            }] }]; }, null); })();\n\nlet nextId = 0;\nclass RecaptchaComponent {\n    constructor(elementRef, loader, zone, settings) {\n        this.elementRef = elementRef;\n        this.loader = loader;\n        this.zone = zone;\n        this.id = `ngrecaptcha-${nextId++}`;\n        this.errorMode = \"default\";\n        this.resolved = new EventEmitter();\n        // The rename will happen a bit later\n        // eslint-disable-next-line @angular-eslint/no-output-native\n        this.error = new EventEmitter();\n        if (settings) {\n            this.siteKey = settings.siteKey;\n            this.theme = settings.theme;\n            this.type = settings.type;\n            this.size = settings.size;\n            this.badge = settings.badge;\n        }\n    }\n    ngAfterViewInit() {\n        this.subscription = this.loader.ready.subscribe((grecaptcha) => {\n            if (grecaptcha != null && grecaptcha.render instanceof Function) {\n                this.grecaptcha = grecaptcha;\n                this.renderRecaptcha();\n            }\n        });\n    }\n    ngOnDestroy() {\n        // reset the captcha to ensure it does not leave anything behind\n        // after the component is no longer needed\n        this.grecaptchaReset();\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n    /**\n     * Executes the invisible recaptcha.\n     * Does nothing if component's size is not set to \"invisible\".\n     */\n    execute() {\n        if (this.size !== \"invisible\") {\n            return;\n        }\n        if (this.widget != null) {\n            this.grecaptcha.execute(this.widget);\n        }\n        else {\n            // delay execution of recaptcha until it actually renders\n            this.executeRequested = true;\n        }\n    }\n    reset() {\n        if (this.widget != null) {\n            if (this.grecaptcha.getResponse(this.widget)) {\n                // Only emit an event in case if something would actually change.\n                // That way we do not trigger \"touching\" of the control if someone does a \"reset\"\n                // on a non-resolved captcha.\n                this.resolved.emit(null);\n            }\n            this.grecaptchaReset();\n        }\n    }\n    /** @internal */\n    expired() {\n        this.resolved.emit(null);\n    }\n    /** @internal */\n    errored(args) {\n        this.error.emit(args);\n    }\n    /** @internal */\n    captchaResponseCallback(response) {\n        this.resolved.emit(response);\n    }\n    /** @internal */\n    grecaptchaReset() {\n        if (this.widget != null) {\n            this.zone.runOutsideAngular(() => this.grecaptcha.reset(this.widget));\n        }\n    }\n    /** @internal */\n    renderRecaptcha() {\n        // This `any` can be removed after @types/grecaptcha get updated\n        const renderOptions = {\n            badge: this.badge,\n            callback: (response) => {\n                this.zone.run(() => this.captchaResponseCallback(response));\n            },\n            \"expired-callback\": () => {\n                this.zone.run(() => this.expired());\n            },\n            sitekey: this.siteKey,\n            size: this.size,\n            tabindex: this.tabIndex,\n            theme: this.theme,\n            type: this.type,\n        };\n        if (this.errorMode === \"handled\") {\n            renderOptions[\"error-callback\"] = (...args) => {\n                this.zone.run(() => this.errored(args));\n            };\n        }\n        this.widget = this.grecaptcha.render(this.elementRef.nativeElement, renderOptions);\n        if (this.executeRequested === true) {\n            this.executeRequested = false;\n            this.execute();\n        }\n    }\n}\nRecaptchaComponent.ɵfac = function RecaptchaComponent_Factory(t) { return new (t || RecaptchaComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(RecaptchaLoaderService), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(RECAPTCHA_SETTINGS, 8)); };\nRecaptchaComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: RecaptchaComponent, selectors: [[\"re-captcha\"]], hostVars: 1, hostBindings: function RecaptchaComponent_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"id\", ctx.id);\n    } }, inputs: { id: \"id\", errorMode: \"errorMode\", siteKey: \"siteKey\", theme: \"theme\", type: \"type\", size: \"size\", badge: \"badge\", tabIndex: \"tabIndex\" }, outputs: { resolved: \"resolved\", error: \"error\" }, exportAs: [\"reCaptcha\"], decls: 0, vars: 0, template: function RecaptchaComponent_Template(rf, ctx) { }, encapsulation: 2 });\nRecaptchaComponent.ctorParameters = () => [\n    { type: ElementRef },\n    { type: RecaptchaLoaderService },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_SETTINGS,] }] }\n];\nRecaptchaComponent.propDecorators = {\n    id: [{ type: Input }, { type: HostBinding, args: [\"attr.id\",] }],\n    siteKey: [{ type: Input }],\n    theme: [{ type: Input }],\n    type: [{ type: Input }],\n    size: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    badge: [{ type: Input }],\n    errorMode: [{ type: Input }],\n    resolved: [{ type: Output }],\n    error: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecaptchaComponent, [{\n        type: Component,\n        args: [{\n                exportAs: \"reCaptcha\",\n                selector: \"re-captcha\",\n                template: ``\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: RecaptchaLoaderService }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_SETTINGS]\n            }] }]; }, { id: [{\n            type: Input\n        }, {\n            type: HostBinding,\n            args: [\"attr.id\"]\n        }], errorMode: [{\n            type: Input\n        }], resolved: [{\n            type: Output\n        }], error: [{\n            type: Output\n        }], siteKey: [{\n            type: Input\n        }], theme: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], badge: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }] }); })();\n\nclass RecaptchaCommonModule {\n}\nRecaptchaCommonModule.ɵfac = function RecaptchaCommonModule_Factory(t) { return new (t || RecaptchaCommonModule)(); };\nRecaptchaCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaCommonModule });\nRecaptchaCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecaptchaCommonModule, { declarations: [RecaptchaComponent], exports: [RecaptchaComponent] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecaptchaCommonModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [RecaptchaComponent],\n                exports: [RecaptchaComponent]\n            }]\n    }], null, null); })();\n\nclass RecaptchaModule {\n}\nRecaptchaModule.ɵfac = function RecaptchaModule_Factory(t) { return new (t || RecaptchaModule)(); };\nRecaptchaModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaModule });\nRecaptchaModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [RecaptchaLoaderService], imports: [[RecaptchaCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecaptchaModule, { imports: [RecaptchaCommonModule], exports: [RecaptchaComponent] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecaptchaModule, [{\n        type: NgModule,\n        args: [{\n                exports: [RecaptchaComponent],\n                imports: [RecaptchaCommonModule],\n                providers: [RecaptchaLoaderService]\n            }]\n    }], null, null); })();\n\n/**\n * The main service for working with reCAPTCHA v3 APIs.\n *\n * Use the `execute` method for executing a single action, and\n * `onExecute` observable for listening to all actions at once.\n */\nclass ReCaptchaV3Service {\n    constructor(zone, siteKey, \n    // eslint-disable-next-line @typescript-eslint/ban-types\n    platformId, baseUrl, nonce, language) {\n        /** @internal */\n        this.onLoadComplete = (grecaptcha) => {\n            this.grecaptcha = grecaptcha;\n            if (this.actionBacklog && this.actionBacklog.length > 0) {\n                this.actionBacklog.forEach(([action, subject]) => this.executeActionWithSubject(action, subject));\n                this.actionBacklog = undefined;\n            }\n        };\n        this.zone = zone;\n        this.isBrowser = isPlatformBrowser(platformId);\n        this.siteKey = siteKey;\n        this.nonce = nonce;\n        this.language = language;\n        this.baseUrl = baseUrl;\n        this.init();\n    }\n    get onExecute() {\n        if (!this.onExecuteSubject) {\n            this.onExecuteSubject = new Subject();\n            this.onExecuteObservable = this.onExecuteSubject.asObservable();\n        }\n        return this.onExecuteObservable;\n    }\n    get onExecuteError() {\n        if (!this.onExecuteErrorSubject) {\n            this.onExecuteErrorSubject = new Subject();\n            this.onExecuteErrorObservable = this.onExecuteErrorSubject.asObservable();\n        }\n        return this.onExecuteErrorObservable;\n    }\n    /**\n     * Executes the provided `action` with reCAPTCHA v3 API.\n     * Use the emitted token value for verification purposes on the backend.\n     *\n     * For more information about reCAPTCHA v3 actions and tokens refer to the official documentation at\n     * https://developers.google.com/recaptcha/docs/v3.\n     *\n     * @param {string} action the action to execute\n     * @returns {Observable<string>} an `Observable` that will emit the reCAPTCHA v3 string `token` value whenever ready.\n     * The returned `Observable` completes immediately after emitting a value.\n     */\n    execute(action) {\n        const subject = new Subject();\n        if (this.isBrowser) {\n            if (!this.grecaptcha) {\n                // todo: add to array of later executions\n                if (!this.actionBacklog) {\n                    this.actionBacklog = [];\n                }\n                this.actionBacklog.push([action, subject]);\n            }\n            else {\n                this.executeActionWithSubject(action, subject);\n            }\n        }\n        return subject.asObservable();\n    }\n    /** @internal */\n    executeActionWithSubject(action, subject) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const onError = (error) => {\n            this.zone.run(() => {\n                subject.error(error);\n                if (this.onExecuteErrorSubject) {\n                    // We don't know any better at this point, unfortunately, so have to resort to `any`\n                    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                    this.onExecuteErrorSubject.next({ action, error });\n                }\n            });\n        };\n        this.zone.runOutsideAngular(() => {\n            try {\n                this.grecaptcha\n                    .execute(this.siteKey, { action })\n                    .then((token) => {\n                    this.zone.run(() => {\n                        subject.next(token);\n                        subject.complete();\n                        if (this.onExecuteSubject) {\n                            this.onExecuteSubject.next({ action, token });\n                        }\n                    });\n                }, onError);\n            }\n            catch (e) {\n                onError(e);\n            }\n        });\n    }\n    /** @internal */\n    init() {\n        if (this.isBrowser) {\n            if (\"grecaptcha\" in window) {\n                this.grecaptcha = grecaptcha;\n            }\n            else {\n                const langParam = this.language ? \"&hl=\" + this.language : \"\";\n                loadScript(this.siteKey, this.onLoadComplete, langParam, this.baseUrl, this.nonce);\n            }\n        }\n    }\n}\nReCaptchaV3Service.ɵfac = function ReCaptchaV3Service_Factory(t) { return new (t || ReCaptchaV3Service)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(RECAPTCHA_V3_SITE_KEY), ɵngcc0.ɵɵinject(PLATFORM_ID), ɵngcc0.ɵɵinject(RECAPTCHA_BASE_URL, 8), ɵngcc0.ɵɵinject(RECAPTCHA_NONCE, 8), ɵngcc0.ɵɵinject(RECAPTCHA_LANGUAGE, 8)); };\nReCaptchaV3Service.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ReCaptchaV3Service, factory: ReCaptchaV3Service.ɵfac });\nReCaptchaV3Service.ctorParameters = () => [\n    { type: NgZone },\n    { type: String, decorators: [{ type: Inject, args: [RECAPTCHA_V3_SITE_KEY,] }] },\n    { type: Object, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_BASE_URL,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_NONCE,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [RECAPTCHA_LANGUAGE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ReCaptchaV3Service, [{\n        type: Injectable\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Inject,\n                args: [RECAPTCHA_V3_SITE_KEY]\n            }] }, { type: Object, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_BASE_URL]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_NONCE]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [RECAPTCHA_LANGUAGE]\n            }] }]; }, null); })();\n\nclass RecaptchaV3Module {\n}\nRecaptchaV3Module.ɵfac = function RecaptchaV3Module_Factory(t) { return new (t || RecaptchaV3Module)(); };\nRecaptchaV3Module.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaV3Module });\nRecaptchaV3Module.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [ReCaptchaV3Service] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecaptchaV3Module, [{\n        type: NgModule,\n        args: [{\n                providers: [ReCaptchaV3Service]\n            }]\n    }], null, null); })();\n\nclass RecaptchaValueAccessorDirective {\n    constructor(host) {\n        this.host = host;\n    }\n    writeValue(value) {\n        if (!value) {\n            this.host.reset();\n        }\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    onResolve($event) {\n        if (this.onChange) {\n            this.onChange($event);\n        }\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n}\nRecaptchaValueAccessorDirective.ɵfac = function RecaptchaValueAccessorDirective_Factory(t) { return new (t || RecaptchaValueAccessorDirective)(ɵngcc0.ɵɵdirectiveInject(RecaptchaComponent)); };\nRecaptchaValueAccessorDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: RecaptchaValueAccessorDirective, selectors: [[\"re-captcha\", \"formControlName\", \"\"], [\"re-captcha\", \"formControl\", \"\"], [\"re-captcha\", \"ngModel\", \"\"]], hostBindings: function RecaptchaValueAccessorDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"resolved\", function RecaptchaValueAccessorDirective_resolved_HostBindingHandler($event) { return ctx.onResolve($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([\n            {\n                multi: true,\n                provide: NG_VALUE_ACCESSOR,\n                // tslint:disable-next-line:no-forward-ref\n                useExisting: forwardRef(() => RecaptchaValueAccessorDirective)\n            },\n        ])] });\nRecaptchaValueAccessorDirective.ctorParameters = () => [\n    { type: RecaptchaComponent }\n];\nRecaptchaValueAccessorDirective.propDecorators = {\n    onResolve: [{ type: HostListener, args: [\"resolved\", [\"$event\"],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecaptchaValueAccessorDirective, [{\n        type: Directive,\n        args: [{\n                providers: [\n                    {\n                        multi: true,\n                        provide: NG_VALUE_ACCESSOR,\n                        // tslint:disable-next-line:no-forward-ref\n                        useExisting: forwardRef(() => RecaptchaValueAccessorDirective)\n                    },\n                ],\n                // tslint:disable-next-line:directive-selector\n                selector: \"re-captcha[formControlName],re-captcha[formControl],re-captcha[ngModel]\"\n            }]\n    }], function () { return [{ type: RecaptchaComponent }]; }, { onResolve: [{\n            type: HostListener,\n            args: [\"resolved\", [\"$event\"]]\n        }] }); })();\n\nclass RecaptchaFormsModule {\n}\nRecaptchaFormsModule.ɵfac = function RecaptchaFormsModule_Factory(t) { return new (t || RecaptchaFormsModule)(); };\nRecaptchaFormsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: RecaptchaFormsModule });\nRecaptchaFormsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ imports: [[FormsModule, RecaptchaCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(RecaptchaFormsModule, { declarations: function () { return [RecaptchaValueAccessorDirective]; }, imports: function () { return [FormsModule, RecaptchaCommonModule]; }, exports: function () { return [RecaptchaValueAccessorDirective]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RecaptchaFormsModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [RecaptchaValueAccessorDirective],\n                exports: [RecaptchaValueAccessorDirective],\n                imports: [FormsModule, RecaptchaCommonModule]\n            }]\n    }], null, null); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { RECAPTCHA_BASE_URL, RECAPTCHA_LANGUAGE, RECAPTCHA_NONCE, RECAPTCHA_SETTINGS, RECAPTCHA_V3_SITE_KEY, ReCaptchaV3Service, RecaptchaComponent, RecaptchaFormsModule, RecaptchaLoaderService, RecaptchaModule, RecaptchaV3Module, RecaptchaValueAccessorDirective, RecaptchaCommonModule as ɵa };\n\n//# sourceMappingURL=ng-recaptcha.js.map","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../core';\r\n\r\n@Component({\r\n  selector: 'crm-forgot-pwd',\r\n  templateUrl: './forgot-pwd.component.html',\r\n  styleUrls: ['./forgot-pwd.component.scss']\r\n})\r\nexport class ForgotPwdComponent implements OnInit {\r\n\r\n  forgotForm: FormGroup;\r\n\r\n  constructor(private fb: FormBuilder,\r\n              private router: Router,\r\n              private authService: AuthService) {\r\n    this.forgotForm = this.fb.group({\r\n      email: ['', [Validators.required, Validators.email]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  get f() { return this.forgotForm.controls; }\r\n\r\n  resetPwd() {\r\n    const data = this.forgotForm.value;\r\n    if (this.forgotForm.invalid) {\r\n      return ;\r\n    }\r\n\r\n    this.authService.forgotPassword(data).subscribe(\r\n      result => {\r\n        this.authService.forgotAccount = data;\r\n        this.router.navigate(['/auth', 'resetpwd']);\r\n        console.log(result);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-card>\r\n  <mat-card-header>\r\n    <mat-card-title>Password assistance</mat-card-title>\r\n  </mat-card-header>\r\n\r\n  <mat-card-content>\r\n    <form class=\"forgot-form\" [formGroup]=\"forgotForm\">\r\n      <div>Enter the email address associated with your account.</div>\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Email\" formControlName=\"email\" required>\r\n        <mat-error *ngIf=\"f.email.hasError('email') && !f.email.hasError('required')\">\r\n          Please enter a valid email address\r\n        </mat-error>\r\n        <mat-error *ngIf=\"f.email.hasError('required')\">\r\n          Email is <strong>required</strong>\r\n        </mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n  </mat-card-content>\r\n\r\n  <mat-card-actions align='end'>\r\n    <button mat-raised-button (click)=\"resetPwd()\" color=\"primary\" [disabled]=\"forgotForm.invalid\">Continue</button>\r\n  </mat-card-actions>\r\n</mat-card>"],"sourceRoot":"webpack:///"}